[{"D:\\Projects\\prices\\src\\index.js":"1","D:\\Projects\\prices\\src\\App.js":"2","D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js":"3","D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js":"4","D:\\Projects\\prices\\src\\components\\Axios\\Axios.js":"5","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js":"6","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js":"7","D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js":"8","D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js":"9","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js":"10","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js":"11","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js":"12","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js":"13","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js":"14","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\news\\News-item.js":"15","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\news\\News-list.js":"16","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js":"17","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js":"18","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js":"19","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js":"20","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js":"21","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js":"22","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js":"23","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js":"24","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js":"25","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js":"26","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Image-gallary.js":"27","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js":"28","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js":"29","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js":"30","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outlets.js":"31","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions.js":"32","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js":"33","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js":"34","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js":"35","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js":"36","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner.js":"37","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\RelatedWebsite.js":"38","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js":"39","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js":"40","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js":"41","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js":"42","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js":"43","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Prices-result.js":"44"},{"size":197,"mtime":1609224381058,"results":"45","hashOfConfig":"46"},{"size":985,"mtime":1609605043093,"results":"47","hashOfConfig":"46"},{"size":107,"mtime":1609605017018,"results":"48","hashOfConfig":"46"},{"size":116,"mtime":1609398925352,"results":"49","hashOfConfig":"46"},{"size":222,"mtime":1609417234465,"results":"50","hashOfConfig":"46"},{"size":1264,"mtime":1609670032073,"results":"51","hashOfConfig":"46"},{"size":306,"mtime":1609669990684,"results":"52","hashOfConfig":"46"},{"size":3027,"mtime":1609671705270,"results":"53","hashOfConfig":"46"},{"size":172,"mtime":1609579971605,"results":"54","hashOfConfig":"46"},{"size":599,"mtime":1610632149341,"results":"55","hashOfConfig":"56"},{"size":2312,"mtime":1611759270519,"results":"57","hashOfConfig":"56"},{"size":2496,"mtime":1611481636610,"results":"58","hashOfConfig":"56"},{"size":5057,"mtime":1611759283985,"results":"59","hashOfConfig":"56"},{"size":678,"mtime":1611838472202,"results":"60","hashOfConfig":"56"},{"size":383,"mtime":1609760264742,"results":"61","hashOfConfig":"56"},{"size":2622,"mtime":1609783754664,"results":"62","hashOfConfig":"56"},{"size":116,"mtime":1609677825299,"results":"63","hashOfConfig":"56"},{"size":242,"mtime":1612268641340,"results":"64","hashOfConfig":"56"},{"size":1741,"mtime":1611225216448,"results":"65","hashOfConfig":"56"},{"size":3898,"mtime":1611668959200,"results":"66","hashOfConfig":"56"},{"size":3981,"mtime":1611656910071,"results":"67","hashOfConfig":"56"},{"size":3907,"mtime":1611670243684,"results":"68","hashOfConfig":"56"},{"size":3847,"mtime":1611647787131,"results":"69","hashOfConfig":"56"},{"size":5848,"mtime":1611840203465,"results":"70","hashOfConfig":"56"},{"size":333,"mtime":1610445920834,"results":"71","hashOfConfig":"56"},{"size":3155,"mtime":1611571447664,"results":"72","hashOfConfig":"56"},{"size":1705,"mtime":1610973301550,"results":"73","hashOfConfig":"56"},{"size":1685,"mtime":1610458388278,"results":"74","hashOfConfig":"56"},{"size":2516,"mtime":1611232259851,"results":"75","hashOfConfig":"56"},{"size":319,"mtime":1610539398051,"results":"76","hashOfConfig":"56"},{"size":7650,"mtime":1611669071412,"results":"77","hashOfConfig":"56"},{"size":1069,"mtime":1611660515055,"results":"78","hashOfConfig":"56"},{"size":5340,"mtime":1611561979807,"results":"79","hashOfConfig":"56"},{"size":526,"mtime":1611564114217,"results":"80","hashOfConfig":"56"},{"size":1978,"mtime":1611658417834,"results":"81","hashOfConfig":"56"},{"size":8535,"mtime":1611212603533,"results":"82","hashOfConfig":"56"},{"size":3165,"mtime":1611838779123,"results":"83","hashOfConfig":"56"},{"size":2748,"mtime":1611691743125,"results":"84","hashOfConfig":"56"},{"size":8259,"mtime":1611742263213,"results":"85","hashOfConfig":"56"},{"size":1903,"mtime":1611838673978,"results":"86","hashOfConfig":"56"},{"size":1516,"mtime":1612452702310,"results":"87","hashOfConfig":"56"},{"size":7294,"mtime":1612680041421,"results":"88","hashOfConfig":"56"},{"size":140,"mtime":1611763358693,"results":"89","hashOfConfig":"56"},{"size":1281,"mtime":1612678821458,"results":"90","hashOfConfig":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"x7m7au",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"19elswf",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\prices\\src\\index.js",[],["195","196"],"D:\\Projects\\prices\\src\\App.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js",[],"D:\\Projects\\prices\\src\\components\\Axios\\Axios.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js",[],["197","198"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js",["199"],"import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport NewsCarrousel from \"./News-carrousel\";\r\nimport Outlets from \"./Outlets\";\r\nimport Partner from \"./Partner\";\r\nimport RelatedWebsite from \"./RelatedWebsite\";\r\nimport SearchForm from \"./Search-form\";\r\nimport SiteServices from \"./SiteServices\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <NewsCarrousel />\r\n        {/* <SearchForm /> */}\r\n        <SiteServices />\r\n        <Outlets />\r\n        <Suggestions />\r\n        <Partner />\r\n        <RelatedWebsite />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\news\\News-item.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\news\\News-list.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js",["200"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst NewsList = () => {\r\n  const [news, setNews] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(news.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noNews = !news || (news && news.length === 0); //check if no news\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setNews(response.data); // set news data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noNews\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noNews &&\r\n          news.slice(offset, offset + PER_PAGE).map((newsItem, idx) => {\r\n            return (\r\n              <Col xs={12} md={6} lg={3} key={idx} className=\"p-2\">\r\n                <Link\r\n                  className=\"h-100\"\r\n                  // pass news item data throw props\r\n                  to={{\r\n                    pathname: `${url}/${newsItem.id}`,\r\n                    state: {\r\n                      newsItem,\r\n                    },\r\n                  }}\r\n                >\r\n                  <CustomCard\r\n                    CardTitle={newsItem.titleA}\r\n                    CardText={moment(newsItem.publishDate)\r\n                      .locale(\"ar\")\r\n                      .format(\"LL\")}\r\n                    CardImg={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                  />\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        {!noNews && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        {/* {noNews && <h2 className=\"text-center p-4\"> لا توجد أخبار</h2>} */}\r\n        {loading === true && noNews ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noNews ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js",["201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\nimport \"./News-item.css\";\r\n\r\nconst NewsItem = (props) => {\r\n  //get data from Link state\r\n  const newsItemLinkState = props.location.state\r\n    ? props.location.state.newsItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const newsItemId = parseInt(props.match.params.NewsId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [newsItem, setNewsItem] = useState({});\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      // setNews(response.data); // set news data to state\r\n\r\n      response.data.map((newsItem) => {\r\n        if (newsItem.id === newsItemId) {\r\n          setNewsItem(newsItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(newsItemId);\r\n    getNews();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {newsItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItemLinkState.titleE}</h3>\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemLinkState.id}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItemLinkState.id}/${newsItemLinkState.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(newsItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(newsItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemId}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {newsItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">\r\n              <p>{newsItem.contentA}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js",["203"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst EventsList = () => {\r\n  const [events, setEvents] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(events.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noEvents = !events || (events && events.length === 0); //check if no Events\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setEvents(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noEvents\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noEvents &&\r\n          events.slice(offset, offset + PER_PAGE).map((eventItem, idx) => {\r\n            return (\r\n              <>\r\n                <Col xs={12} md={6} lg={3} key={idx} className=\"p-3\">\r\n                  <Link\r\n                    // pass Events item data throw props\r\n                    to={{\r\n                      pathname: `${url}/${eventItem.id}`,\r\n                      state: {\r\n                        eventItem,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CustomCard\r\n                      CardTitle={eventItem.titleA}\r\n                      CardText={moment(eventItem.publishDate)\r\n                        .locale(\"ar\")\r\n                        .format(\"LL\")}\r\n                      CardImg={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                    />\r\n                  </Link>\r\n                </Col>\r\n              </>\r\n            );\r\n          })}\r\n        {!noEvents && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n        {loading === true && noEvents ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noEvents ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد فعاليات</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js",["204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport \"../News/News-item.css\";\r\nconst EventItem = (props) => {\r\n  // const eventItem = props.location.state.eventItem;\r\n\r\n  //get data from Link state\r\n  const eventItemLinkState = props.location.state\r\n    ? props.location.state.eventItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const eventItemId = parseInt(props.match.params.EventId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [eventItem, setEventItem] = useState({});\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      response.data.map((eventItem) => {\r\n        if (eventItem.id === eventItemId) {\r\n          setEventItem(eventItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {eventItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItemLinkState.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemLinkState.id}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(eventItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(eventItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemId}\r\n                  mainPhoto={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {eventItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{eventItem.contentA}</Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js",["206"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\n\r\nimport \"moment/locale/ar\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst DocumentLibraryList = () => {\r\n  const [documentLibrary, setDocumentLibrary] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(documentLibrary.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noDocumentLibrary =\r\n    !documentLibrary || (documentLibrary && documentLibrary.length === 0); //check if no Events\r\n\r\n  const getDocumentLibrary = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/DocumentLibrary\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setDocumentLibrary(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocumentLibrary();\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noDocumentLibrary\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Container>\r\n        <Row>\r\n          {!noDocumentLibrary &&\r\n            documentLibrary\r\n              .slice(offset, offset + PER_PAGE)\r\n              .map((documentLibraryItem, idx) => {\r\n                return (\r\n                  <Col\r\n                    key={idx}\r\n                    className=\"p-3 m-3 border\"\r\n                    style={{ backgroundColor: \"#fff\", borderRadius: \"8px\" }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs={4} className=\"h-100\">\r\n                        <img\r\n                          src={`${paths.DocumentLibraryPhotos}${documentLibraryItem.id}/${documentLibraryItem.photoA}`}\r\n                          className=\"img-fluid img-thumbnail p-0\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col className=\"d-flex flex-column justify-content-between  h-100\">\r\n                        <div>\r\n                          <h3 style={{ color: \"var(--main-green)\" }}>\r\n                            {documentLibraryItem.titleA}\r\n                          </h3>\r\n                          <h4>{documentLibraryItem.titleE}</h4>\r\n                          <p>{parse(documentLibraryItem.contentA)}</p>\r\n                        </div>\r\n                        <div className=\"border-top d-flex justify-content-between py-3\">\r\n                          <div>\r\n                            <TodayIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              {moment(documentLibraryItem.publishDate)\r\n                                .locale(\"ar\")\r\n                                .format(\"LL\")}\r\n                            </strong>\r\n                          </div>{\" \"}\r\n                          <a\r\n                            href={`${paths.DocumentLibrarAttachment}${documentLibraryItem.id}/${documentLibraryItem.attachmentA}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            download\r\n                          >\r\n                            <DescriptionIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              تحميل ملف مرفق\r\n                            </strong>\r\n                          </a>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                );\r\n              })}\r\n          {!noDocumentLibrary && (\r\n            <Col xs={12}>\r\n              <ReactPaginate\r\n                previousLabel={\"→ السابق\"}\r\n                nextLabel={\"التالى ←\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </Col>\r\n          )}\r\n\r\n          {loading === true && noDocumentLibrary ? (\r\n            <div className=\"w-100 d-flex justify-content-center m-5\">\r\n              <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n            </div>\r\n          ) : null}\r\n          {loading === false && noDocumentLibrary ? (\r\n            <h2 className=\"w-100 text-center p-4\"> لا توجد إصدارات</h2>\r\n          ) : null}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DocumentLibraryList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Image-gallary.js",["207"],"import React, { useState, useEffect } from \"react\";\r\nimport Gallery from \"react-grid-gallery\";\r\nimport { axios } from \"../Axios/Axios\";\r\nimport { paths } from \"../Paths/Pathes\";\r\n\r\nconst ImageGallery = (Props) => {\r\n  const [Images, setImgaes] = useState([]);\r\n  const [noImages, setNoImgaes] = useState({});\r\n  const IMAGES = [];\r\n  const GetImages = async () => {\r\n    var url =\r\n      \"PhotoLibrary/GetPhotos?objectName=\" +\r\n      Props.objectname +\r\n      \"&objectId=\" +\r\n      Props.objectid;\r\n\r\n    var response = await axios\r\n      .get(url)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    if (response && response.data) {\r\n      console.log(response.data);\r\n      response.data.forEach((element) => {\r\n        var obj = {\r\n          src:\r\n            paths.PhotoLibraryAlbumPhoto +\r\n            element.photoLibraryAlbumID +\r\n            \"/\" +\r\n            element.photo,\r\n          thumbnail:\r\n            paths.PhotoLibraryAlbumPhoto +\r\n            element.photoLibraryAlbumID +\r\n            \"/\" +\r\n            element.photo,\r\n          thumbnailWidth: 320,\r\n          thumbnailHeight: 174,\r\n          caption: element.photoCaptionA,\r\n        };\r\n        IMAGES.push(obj);\r\n      });\r\n      console.log(IMAGES);\r\n      setImgaes(IMAGES); // set Images data to state\r\n      setNoImgaes(false);\r\n    } else {\r\n      setNoImgaes(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {noImages && <div></div>}\r\n      {!noImages && (\r\n        <Gallery\r\n          images={Images}\r\n          backdropClosesModal={true}\r\n          imageCountSeparator=\"من\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n",["208","209"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outlets.js",["210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../../slick-carousel/Arrows\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nimport \"./Outlet.css\";\r\n\r\nconst Outlets = () => {\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    // autoplay: true,\r\n    slidesToScroll: 1,\r\n\r\n    centerPadding: \"0px\",\r\n    slidesToShow: 4,\r\n    speed: 500,\r\n    rtl: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const [outlets, setOutlets] = useState([]);\r\n  const noOutlets = !outlets || (outlets && outlets.length === 0); //check if no news\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(outlets.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const getOutlets = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/Ports/PortEntity\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setOutlets(response.data); // set news data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOutlets();\r\n  }, []);\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      {url === \"/\" ? (\r\n        <Row\r\n          className=\"justify-content-center py-5\"\r\n          style={{\r\n            background: \"rgb(13, 146, 76)\",\r\n            background:\r\n              \"linear-gradient( 0deg,rgba(13, 146, 76, 1) 0%, rgba(84, 166, 70, 1) 100%)\",\r\n          }}\r\n        >\r\n          <Col xs={12}>\r\n            <HeadBar>منافذ</HeadBar>\r\n          </Col>\r\n          <Container className=\"py-5\">\r\n            <Row>\r\n              <Col className=\"carrousel_wrapper outlets px-0\">\r\n                <Slider {...settings}>\r\n                  {!noOutlets &&\r\n                    outlets.map((outletItem, idx) => {\r\n                      return (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"px-2 d-flex flex-column align-items-center\"\r\n                        >\r\n                          <Link\r\n                            className=\"d-flex flex-column justify-content-center align-items-center \"\r\n                            to={{\r\n                              pathname: \"/Ports/PortEntity\",\r\n                              state: {\r\n                                EntityId: outletItem.id,\r\n                                Entitylogo: outletItem.logo,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <div className=\"carrousel_image\">\r\n                              <img\r\n                                src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                                className=\"img-fluid\"\r\n                                alt={`${outletItem.logo}`}\r\n                              />\r\n                            </div>\r\n                            <div className=\"carrousel_caption zoom_on_hover\">\r\n                              <div className=\"text-center\">\r\n                                {outletItem.nameA}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Slider>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      ) : (\r\n        <Container\r\n          fluid\r\n          style={\r\n            !noOutlets\r\n              ? {\r\n                  backgroundImage: `url(${mainBg})`,\r\n                  backgroundPosition: \"right top\",\r\n                  backgroundSize: \"cover\",\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          <Row>\r\n            {!noOutlets &&\r\n              outlets\r\n                .slice(offset, offset + PER_PAGE)\r\n                .map((outletItem, idx) => {\r\n                  return (\r\n                    <Col\r\n                      xs={12}\r\n                      md={6}\r\n                      lg={4}\r\n                      key={idx}\r\n                      className=\"p-5 outlets\"\r\n                    >\r\n                      <Link\r\n                        className=\"h-100 d-flex flex-column align-items-center justify-content-center\"\r\n                        // pass news item data throw props\r\n                        to={{\r\n                          pathname: \"/Ports/PortEntity\",\r\n                          state: {\r\n                            EntityId: outletItem.id,\r\n                            Entitylogo: outletItem.logo,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"carrousel_image\"\r\n                          style={{ border: \"5px solid var(--main-green)\" }}\r\n                        >\r\n                          <img\r\n                            src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${outletItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center text-dark\">\r\n                            {outletItem.nameA}\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </Col>\r\n                  );\r\n                })}\r\n            {!noOutlets && (\r\n              <Col xs={12}>\r\n                <ReactPaginate\r\n                  previousLabel={\"→ السابق\"}\r\n                  nextLabel={\"التالى ←\"}\r\n                  pageCount={pageCount}\r\n                  onPageChange={handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  previousLinkClassName={\"pagination__link\"}\r\n                  nextLinkClassName={\"pagination__link\"}\r\n                  disabledClassName={\"pagination__link--disabled\"}\r\n                  activeClassName={\"pagination__link--active\"}\r\n                />\r\n              </Col>\r\n            )}\r\n            {loading === true && noOutlets ? (\r\n              <div className=\"w-100 d-flex justify-content-center m-5\">\r\n                <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n              </div>\r\n            ) : null}\r\n            {loading === false && noOutlets ? (\r\n              <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n            ) : null}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Outlets;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js",["212","213","214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\nimport { paths } from \"../Paths/Pathes\";\r\n\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../slick-carousel/Arrows\";\r\n\r\nconst CustomSlider = (Props) => {\r\n  const [images, setImgaes] = useState([]);\r\n  const [noImages, setNoImgaes] = useState({});\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  //   const IMAGES = [];\r\n  const GetImages = async () => {\r\n    var url = `PhotoLibrary/GetPhotos?objectName=${Props.objectname}&objectId=${Props.objectid}`;\r\n\r\n    var response = await axios\r\n      .get(url)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    if (response && response.data) {\r\n      setImgaes(response.data); // set Images data to state\r\n      setNoImgaes(false);\r\n    } else {\r\n      setNoImgaes(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetImages();\r\n  }, []);\r\n\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    // autoplay: true,\r\n    // centerPadding: \"400px\",\r\n    slidesToShow: 1,\r\n    speed: 500,\r\n    rtl: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {images.length === 0 && (\r\n        <div>\r\n          <img src={Props.mainPhoto} className=\"img-fluid\" alt=\"\" />\r\n        </div>\r\n      )}\r\n      <Slider {...settings}>\r\n        {!noImages &&\r\n          images.map((image, idx) => {\r\n            return (\r\n              <div key={idx}>\r\n                <div\r\n                  className=\"carrousel_image\"\r\n                  style={{\r\n                    background: `url(${paths.PhotoLibraryAlbumPhoto}${image.photoLibraryAlbumID}/${image.photo})`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            );\r\n          })}\r\n      </Slider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSlider;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js",["216","217","218","219"],"import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\n\r\nimport icommodityGroup from \"../../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../../assets/images/png/flag.png\";\r\n\r\nconst SearchForm = () => {\r\n  //\r\n  const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    // ContactTypeId: yup.number.required(\"ContactType is required\"),\r\n    commodityGroup: yup\r\n      .string(\"أختر المجموعة السلعية\")\r\n      .required(\"أختر المجموعة السلعية \"),\r\n    commodity: yup.string(\"أختر السلعة\").required(\"أختر السلعة\"),\r\n    city: yup.string(\"أختر المدينة\").required(\"أختر المدينة\"),\r\n  });\r\n\r\n  //   const [commodityGroup, setCommodityGroup] = useState([]);\r\n\r\n  //   const getCommodityGroup = async () => {\r\n  //     //fetch ContactTypes data\r\n  //     const response = await axios\r\n  //       .get(\"/commodityGroup\")\r\n  //       .catch((err) => console.log(\"Error\", err)); //handle errors\r\n  //     if (response && response.data) {\r\n  //         getCommodityGroup(response.data); // set commodityGroup data to state\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     getCommodityGroup();\r\n  //   }, []);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      commodityGroup: \"\",\r\n      commodity: \"\",\r\n      city: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      const response = await axios\r\n        // .post(\"/ContactUs\", values)\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        alert(\"sucess!\");\r\n        console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [value, setValue] = React.useState(\"retail\");\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center border-bottom py-5\"\r\n      style={{ backgroundColor: \"var(--main-gray)\" }}\r\n    >\r\n      {console.log(value)}\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <RadioGroup\r\n                className=\"mb-4\"\r\n                aria-label=\"market\"\r\n                name=\"market\"\r\n                value={value}\r\n                onChange={handleRadioChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"retail\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق التجزئة\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"wholesale\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق الجملة\"\r\n                />\r\n              </RadioGroup>\r\n              <Row>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={icommodityGroup}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المجموعة السلعية\"\r\n                    select\r\n                    label=\"المجموعة السلعية\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={wheatBag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"السلعة\"\r\n                    select\r\n                    label=\"السلعة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={flag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المحافظة\"\r\n                    select\r\n                    label=\"المحافظة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\"p-3 my-2 \"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"var(--main-green)\",\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    إرسال\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner.js",["220"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport \"./Partner.css\";\r\n\r\nconst Partner = () => {\r\n  const settings = {\r\n    className: \"center\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    slidesToScroll: 1,\r\n\r\n    centerPadding: \"0px\",\r\n    slidesToShow: 4,\r\n    speed: 500,\r\n    rtl: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const [partners, setPartners] = useState([]);\r\n  const noPartners = !partners || (partners && partners.length === 0); //check if no partners\r\n\r\n  const getPartners = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/home/Partner\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setPartners(response.data); // set partners data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPartners();\r\n  }, []);\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center py-5\"\r\n      style={{\r\n        background: \"rgb(13, 146, 76)\",\r\n        background:\r\n          \"linear-gradient( 0deg,rgba(13, 146, 76, 1) 0%, rgba(84, 166, 70, 1) 100%)\",\r\n      }}\r\n    >\r\n      <Col xs={12}>\r\n        <HeadBar>شركاؤنا</HeadBar>\r\n      </Col>\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col className=\"carrousel_wrapper partner px-0\">\r\n            <Slider {...settings}>\r\n              {!noPartners &&\r\n                partners.map((partnerItem, idx) => {\r\n                  return (\r\n                    <div\r\n                      key={idx}\r\n                      className=\"px-2 d-flex flex-column align-items-center\"\r\n                    >\r\n                      <Link\r\n                        to=\"/\"\r\n                        className=\"d-flex flex-column justify-content-center align-items-center \"\r\n                      >\r\n                        <div className=\"carrousel_image\">\r\n                          <img\r\n                            src={`${paths.PartnerPhotos}${partnerItem.id}/${partnerItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${partnerItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center\">{partnerItem.nameA}</div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Partner;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\RelatedWebsite.js",["221","222"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nconst RelatedWebsite = () => {\r\n  const [relatedWebsites, setRelatedWebsites] = useState([]);\r\n  const noRelatedWebsites =\r\n    !relatedWebsites || (relatedWebsites && relatedWebsites.length === 0); //check if no RelatedWebsites\r\n\r\n  const getRelatedWebsites = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/home/RelatedWebSite\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setRelatedWebsites(response.data); // set RelatedWebsites data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRelatedWebsites();\r\n  }, []);\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center py-5\"\r\n      style={{\r\n        background: \"#54A646\",\r\n      }}\r\n    >\r\n      <Col xs={12}>\r\n        <HeadBar>مواقع ذات صلة</HeadBar>\r\n      </Col>\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          {!noRelatedWebsites &&\r\n            relatedWebsites.map((relatedWebsitesItem, idx) => {\r\n              return (\r\n                <Col xs={4} key={idx} className=\"p-2\">\r\n                  <a href={relatedWebsitesItem.url} target=\"_blank\">\r\n                    <Row className=\"align-items-center \">\r\n                      <Col xs={4}>\r\n                        <div\r\n                          className=\"d-flex  justify-content-center align-items-center \"\r\n                          style={{\r\n                            height: \"100px\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundColor: \"#fff\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={`${paths.RelatedWebsitePhotos}${relatedWebsitesItem.id}/${relatedWebsitesItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${relatedWebsitesItem.logo}`}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        xs={8}\r\n                        className=\"p-2 text-white\"\r\n                        // style={{ fontSize: \".9rem\" }}\r\n                      >\r\n                        <p>{relatedWebsitesItem.nameA}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </a>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RelatedWebsite;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js",["223","224"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nimport FlagIcon from '@material-ui/icons/Flag';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst PortList = (Props) => {\r\n  const [Ports, setPorts] = useState([]);\r\n  const [Governorate,setGovernorate] = useState([]);\r\n  const [portType,setPortType] = useState([]);\r\n  const [governorateSelectedVal, setGovernorateSelectedVal] = useState(0);\r\n  const [portTypeSelectedVal, setportTypeSelectedVal] = useState(0);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(Ports.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noPorts =\r\n    !Ports || (Ports && Ports.length === 0); //check if no Ports\r\n\r\n  const getPorts = async () => {\r\n    setLoading(true);\r\n    let url =  `Ports/Port?PortEntityId=${Props.location.state.EntityId}&GovId=${governorateSelectedVal}&PortTypeId=${portTypeSelectedVal}`;\r\n    //fetch Ports data\r\n    const response = await axios\r\n      .get(url)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    setLoading(false);\r\n    if (response && response.data) {\r\n      setPorts(response.data);\r\n    }\r\n     \r\n  };\r\n\r\n  const GetGovernorate = async ()=>{\r\n    const response = await axios\r\n    .get(\"Home/Governorate\")\r\n    .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n        setGovernorate(response.data);\r\n    }\r\n  }\r\n\r\n  const GetPortType = async ()=>{\r\n    const response = await axios\r\n    .get(\"Ports/PortType\")\r\n    .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n        setPortType(response.data);\r\n    }\r\n  }\r\n\r\n  const GovHandleChanges = (event) =>{\r\n    setGovernorateSelectedVal(event.target.value);\r\n  }\r\n\r\n  const PortTypeHandleChanges = (event) =>{\r\n     setportTypeSelectedVal(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPorts();\r\n    GetGovernorate();\r\n    GetPortType();\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    getPorts(); \r\n  }, [portTypeSelectedVal,governorateSelectedVal]);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noPorts\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n    <Container>\r\n        <Row className=\"mt-4 \">\r\n            <Col md={6} className=\"align-items-center col-md-6 d-flex px-0\">\r\n                <span  style={{\r\n                            borderRadius: \"6px\",\r\n                            boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                            color:\"#80B741\",\r\n                            padding:12\r\n                            \r\n                        }}>\r\n                    <FlagIcon style={{  fontSize:30}}/>\r\n                </span>\r\n              \r\n                <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"GovernorateId\"\r\n                    select\r\n                    label=\"المحافظة\"\r\n                    value={governorateSelectedVal}\r\n                    onChange={GovHandleChanges}\r\n                >\r\n                    <MenuItem  value={0}>المحافظة</MenuItem>\r\n                    {Governorate.map((item,idx)=> {\r\n                        return(\r\n                            <MenuItem key={idx} value={item.id}>{item.nameA}</MenuItem>\r\n                        );\r\n                    })}\r\n                </TextField>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"align-items-center col-md-6 d-flex px-0\">\r\n                <span  style={{\r\n                            borderRadius: \"6px\",\r\n                            boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                            color:\"#80B741\",\r\n                            padding:12\r\n                            \r\n                        }}>\r\n                    <CategoryIcon style={{  fontSize:30}}/>\r\n                </span>\r\n\r\n                <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"PortTypeId\"\r\n                    value={portTypeSelectedVal}\r\n                    select\r\n                    label=\"نوع المنفذ\"\r\n                    onChange={PortTypeHandleChanges}\r\n                >\r\n                    <MenuItem  value={0}>نوع المنفذ</MenuItem>\r\n                    {portType.map((item,idx)=> {\r\n                        return(\r\n                            <MenuItem key={idx} value={item.id}>{item.nameA}</MenuItem>\r\n                        );\r\n                    })}\r\n                </TextField>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          {!noPorts &&\r\n            Ports\r\n              .slice(offset, offset + PER_PAGE)\r\n              .map((PortItem, idx) => {\r\n                return (\r\n                  <Col\r\n                    key={idx}\r\n                    className=\"p-3 m-3 border\"\r\n                    style={{ backgroundColor: \"#fff\", borderRadius: \"8px\" }}\r\n                    md={12}\r\n                  >\r\n                    <Row>\r\n                      <Col md={3} className=\"h-100\">\r\n                        <img\r\n                          src={`${paths.OutletPhotos}${Props.location.state.EntityId}/${Props.location.state.Entitylogo}`}\r\n                          className=\"p-0\"\r\n                          alt=\"\"\r\n                          style={{ width:200, height:200}}\r\n                        />\r\n                      </Col>\r\n                      <Col md={9} className=\"d-flex flex-column justify-content-between  h-100\">\r\n                        <div>\r\n                          <h3 style={{ color: \"var(--main-green)\" }}>\r\n                            {PortItem.nameA}\r\n                          </h3>\r\n                          <p> <FlagIcon style={{ fontSize:30, color:\"#80B741\"}}/> {PortItem.governorateName} </p>\r\n                          <p> <LocationOnIcon style={{ fontSize:30, color:\"#80B741\"}}/> {PortItem.address} </p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                );\r\n              })}\r\n          {!noPorts && (\r\n            <Col xs={12}>\r\n              <ReactPaginate\r\n                previousLabel={\"→ السابق\"}\r\n                nextLabel={\"التالى ←\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </Col>\r\n          )}\r\n          \r\n          {loading === true && noPorts && (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n          )}\r\n         {loading === false && noPorts && (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد منافذ</h2>\r\n         )}\r\n        </Row>\r\n       \r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PortList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js",["225","226","227"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Prices-result.js",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"228","replacedBy":"232"},{"ruleId":"230","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":55,"column":6,"nodeType":"240","endLine":55,"endColumn":8,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":36,"column":36,"nodeType":"244","messageId":"245","endLine":36,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":47,"column":6,"nodeType":"240","endLine":47,"endColumn":8,"suggestions":"246"},{"ruleId":"238","severity":1,"message":"247","line":55,"column":6,"nodeType":"240","endLine":55,"endColumn":8,"suggestions":"248"},{"ruleId":"242","severity":1,"message":"243","line":37,"column":37,"nodeType":"244","messageId":"245","endLine":37,"endColumn":39},{"ruleId":"238","severity":1,"message":"247","line":47,"column":6,"nodeType":"240","endLine":47,"endColumn":8,"suggestions":"249"},{"ruleId":"238","severity":1,"message":"250","line":58,"column":6,"nodeType":"240","endLine":58,"endColumn":8,"suggestions":"251"},{"ruleId":"238","severity":1,"message":"252","line":50,"column":6,"nodeType":"240","endLine":50,"endColumn":8,"suggestions":"253"},{"ruleId":"228","replacedBy":"254"},{"ruleId":"230","replacedBy":"255"},{"ruleId":"234","severity":1,"message":"256","line":57,"column":17,"nodeType":"236","messageId":"237","endLine":57,"endColumn":27},{"ruleId":"257","severity":1,"message":"258","line":94,"column":13,"nodeType":"259","messageId":"260","endLine":94,"endColumn":23},{"ruleId":"234","severity":1,"message":"261","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":19},{"ruleId":"234","severity":1,"message":"262","line":14,"column":8,"nodeType":"236","messageId":"237","endLine":14,"endColumn":15},{"ruleId":"234","severity":1,"message":"256","line":14,"column":17,"nodeType":"236","messageId":"237","endLine":14,"endColumn":27},{"ruleId":"238","severity":1,"message":"252","line":33,"column":6,"nodeType":"240","endLine":33,"endColumn":8,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"264","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"265","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"266","line":21,"column":10,"nodeType":"236","messageId":"237","endLine":21,"endColumn":23},{"ruleId":"234","severity":1,"message":"267","line":23,"column":9,"nodeType":"236","messageId":"237","endLine":23,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":68,"column":9,"nodeType":"259","messageId":"260","endLine":68,"endColumn":19},{"ruleId":"234","severity":1,"message":"268","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":45,"column":53,"nodeType":"271","endLine":45,"endColumn":68},{"ruleId":"238","severity":1,"message":"272","line":95,"column":6,"nodeType":"240","endLine":95,"endColumn":8,"suggestions":"273"},{"ruleId":"238","severity":1,"message":"272","line":100,"column":6,"nodeType":"240","endLine":100,"endColumn":50,"suggestions":"274"},{"ruleId":"234","severity":1,"message":"275","line":6,"column":15,"nodeType":"236","messageId":"237","endLine":6,"endColumn":24},{"ruleId":"234","severity":1,"message":"276","line":17,"column":10,"nodeType":"236","messageId":"237","endLine":17,"endColumn":15},{"ruleId":"234","severity":1,"message":"277","line":24,"column":10,"nodeType":"236","messageId":"237","endLine":24,"endColumn":24},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],["278"],["279"],"no-unused-vars","'SearchForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.","ArrayExpression",["280"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["281"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["282"],["283"],"React Hook useEffect has a missing dependency: 'getDocumentLibrary'. Either include it or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'GetImages'. Either include it or remove the dependency array.",["285"],["278"],["279"],"'setLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","'PulseLoader' is defined but never used.","'loading' is assigned a value but never used.",["286"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'getPorts'. Either include it or remove the dependency array.",["287"],["288"],"'Container' is defined but never used.","'Table' is defined but never used.","'classification' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"297","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [getNews]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Update the dependencies array to be: [getEvents]",{"range":"307","text":"308"},{"range":"309","text":"308"},"Update the dependencies array to be: [getDocumentLibrary]",{"range":"310","text":"311"},"Update the dependencies array to be: [GetImages]",{"range":"312","text":"313"},{"range":"314","text":"313"},"Update the dependencies array to be: [getPorts]",{"range":"315","text":"316"},"Update the dependencies array to be: [portTypeSelectedVal, governorateSelectedVal, getPorts]",{"range":"317","text":"318"},[1548,1550],"[getNews]",[1357,1359],[1583,1585],"[getEvents]",[1347,1349],[1714,1716],"[getDocumentLibrary]",[1427,1429],"[GetImages]",[994,996],[2766,2768],"[getPorts]",[2820,2864],"[portTypeSelectedVal, governorateSelectedVal, getPorts]"]