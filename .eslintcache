[{"D:\\Projects\\prices\\src\\index.js":"1","D:\\Projects\\prices\\src\\App.js":"2","D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js":"3","D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js":"4","D:\\Projects\\prices\\src\\components\\Axios\\Axios.js":"5","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js":"6","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js":"7","D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js":"8","D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js":"9","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js":"10","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js":"11","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js":"12","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js":"13","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js":"14","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions.js":"15","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js":"16","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js":"17","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js":"18","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js":"19","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js":"20","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js":"21","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js":"22","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outlets.js":"23","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js":"24","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js":"25","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js":"26","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\RelatedWebsite.js":"27","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js":"28","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner.js":"29","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js":"30","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js":"31","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js":"32","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js":"33","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js":"34","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js":"35","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js":"36","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js":"37","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js":"38","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\RetailPrices-result.js":"39","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\WholesalePrices-Result.js":"40","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js":"41","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js":"42","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-item.js":"43","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-price-result.js":"44","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\Global-prices.js":"45","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\Global-Prices-result.js":"46"},{"size":197,"mtime":1609224381058,"results":"47","hashOfConfig":"48"},{"size":985,"mtime":1609605043093,"results":"49","hashOfConfig":"48"},{"size":107,"mtime":1609605017018,"results":"50","hashOfConfig":"48"},{"size":116,"mtime":1609398925352,"results":"51","hashOfConfig":"48"},{"size":222,"mtime":1609417234465,"results":"52","hashOfConfig":"48"},{"size":1264,"mtime":1609670032073,"results":"53","hashOfConfig":"48"},{"size":306,"mtime":1609669990684,"results":"54","hashOfConfig":"48"},{"size":3027,"mtime":1609671705270,"results":"55","hashOfConfig":"48"},{"size":172,"mtime":1609579971605,"results":"56","hashOfConfig":"48"},{"size":599,"mtime":1610632149341,"results":"57","hashOfConfig":"58"},{"size":2658,"mtime":1615725742911,"results":"59","hashOfConfig":"58"},{"size":1903,"mtime":1611838673978,"results":"60","hashOfConfig":"58"},{"size":5059,"mtime":1615726826910,"results":"61","hashOfConfig":"58"},{"size":5848,"mtime":1611840203465,"results":"62","hashOfConfig":"58"},{"size":1069,"mtime":1611660515055,"results":"63","hashOfConfig":"58"},{"size":678,"mtime":1611838472202,"results":"64","hashOfConfig":"58"},{"size":3898,"mtime":1611668959200,"results":"65","hashOfConfig":"58"},{"size":3847,"mtime":1611647787131,"results":"66","hashOfConfig":"58"},{"size":3907,"mtime":1611670243684,"results":"67","hashOfConfig":"58"},{"size":8752,"mtime":1615891293951,"results":"68","hashOfConfig":"58"},{"size":333,"mtime":1610445920834,"results":"69","hashOfConfig":"58"},{"size":3981,"mtime":1611656910071,"results":"70","hashOfConfig":"58"},{"size":7650,"mtime":1614155314275,"results":"71","hashOfConfig":"58"},{"size":1138,"mtime":1614155314274,"results":"72","hashOfConfig":"58"},{"size":1585,"mtime":1614586434490,"results":"73","hashOfConfig":"58"},{"size":2550,"mtime":1614155314273,"results":"74","hashOfConfig":"58"},{"size":2748,"mtime":1611691743125,"results":"75","hashOfConfig":"58"},{"size":3155,"mtime":1611571447664,"results":"76","hashOfConfig":"58"},{"size":3165,"mtime":1611838779123,"results":"77","hashOfConfig":"58"},{"size":319,"mtime":1610539398051,"results":"78","hashOfConfig":"58"},{"size":358,"mtime":1615206732325,"results":"79","hashOfConfig":"58"},{"size":1978,"mtime":1611658417834,"results":"80","hashOfConfig":"58"},{"size":5340,"mtime":1611561979807,"results":"81","hashOfConfig":"58"},{"size":2494,"mtime":1614155314276,"results":"82","hashOfConfig":"58"},{"size":706,"mtime":1615206742652,"results":"83","hashOfConfig":"58"},{"size":8030,"mtime":1615455894472,"results":"84","hashOfConfig":"58"},{"size":7874,"mtime":1614590654316,"results":"85","hashOfConfig":"58"},{"size":1685,"mtime":1610458388278,"results":"86","hashOfConfig":"58"},{"size":9606,"mtime":1614670270371,"results":"87","hashOfConfig":"58"},{"size":6825,"mtime":1614601065595,"results":"88","hashOfConfig":"58"},{"size":1741,"mtime":1611225216448,"results":"89","hashOfConfig":"58"},{"size":8535,"mtime":1611212603533,"results":"90","hashOfConfig":"58"},{"size":9594,"mtime":1615718946701,"results":"91","hashOfConfig":"58"},{"size":6352,"mtime":1615714824812,"results":"92","hashOfConfig":"58"},{"size":7060,"mtime":1615884938072,"results":"93","hashOfConfig":"58"},{"size":6444,"mtime":1615885906312,"results":"94","hashOfConfig":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"x7m7au",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"19elswf",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\prices\\src\\index.js",[],["207","208"],"D:\\Projects\\prices\\src\\App.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js",[],"D:\\Projects\\prices\\src\\components\\Axios\\Axios.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js",[],["209","210"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js",["211"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\n\r\nimport \"moment/locale/ar\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst DocumentLibraryList = () => {\r\n  const [documentLibrary, setDocumentLibrary] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(documentLibrary.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noDocumentLibrary =\r\n    !documentLibrary || (documentLibrary && documentLibrary.length === 0); //check if no Events\r\n\r\n  const getDocumentLibrary = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/DocumentLibrary\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setDocumentLibrary(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocumentLibrary();\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noDocumentLibrary\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Container>\r\n        <Row>\r\n          {!noDocumentLibrary &&\r\n            documentLibrary\r\n              .slice(offset, offset + PER_PAGE)\r\n              .map((documentLibraryItem, idx) => {\r\n                return (\r\n                  <Col\r\n                    key={idx}\r\n                    className=\"p-3 m-3 border\"\r\n                    style={{ backgroundColor: \"#fff\", borderRadius: \"8px\" }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs={4} className=\"h-100\">\r\n                        <img\r\n                          src={`${paths.DocumentLibraryPhotos}${documentLibraryItem.id}/${documentLibraryItem.photoA}`}\r\n                          className=\"img-fluid img-thumbnail p-0\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col className=\"d-flex flex-column justify-content-between  h-100\">\r\n                        <div>\r\n                          <h3 style={{ color: \"var(--main-green)\" }}>\r\n                            {documentLibraryItem.titleA}\r\n                          </h3>\r\n                          <h4>{documentLibraryItem.titleE}</h4>\r\n                          <p>{parse(documentLibraryItem.contentA)}</p>\r\n                        </div>\r\n                        <div className=\"border-top d-flex justify-content-between py-3\">\r\n                          <div>\r\n                            <TodayIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              {moment(documentLibraryItem.publishDate)\r\n                                .locale(\"ar\")\r\n                                .format(\"LL\")}\r\n                            </strong>\r\n                          </div>{\" \"}\r\n                          <a\r\n                            href={`${paths.DocumentLibrarAttachment}${documentLibraryItem.id}/${documentLibraryItem.attachmentA}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            download\r\n                          >\r\n                            <DescriptionIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              تحميل ملف مرفق\r\n                            </strong>\r\n                          </a>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                );\r\n              })}\r\n          {!noDocumentLibrary && (\r\n            <Col xs={12}>\r\n              <ReactPaginate\r\n                previousLabel={\"→ السابق\"}\r\n                nextLabel={\"التالى ←\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </Col>\r\n          )}\r\n\r\n          {loading === true && noDocumentLibrary ? (\r\n            <div className=\"w-100 d-flex justify-content-center m-5\">\r\n              <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n            </div>\r\n          ) : null}\r\n          {loading === false && noDocumentLibrary ? (\r\n            <h2 className=\"w-100 text-center p-4\"> لا توجد إصدارات</h2>\r\n          ) : null}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DocumentLibraryList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js",["212"],"import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport NewsCarrousel from \"./News-carrousel\";\r\nimport Outlets from \"./Outlets\";\r\nimport Partner from \"./Partner\";\r\nimport RelatedWebsite from \"./RelatedWebsite\";\r\nimport SearchForm from \"./Search-form\";\r\nimport SiteServices from \"./SiteServices\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <NewsCarrousel />\r\n        {/* <SearchForm /> */}\r\n        <SiteServices />\r\n        <Outlets />\r\n        <Suggestions />\r\n        <Partner />\r\n        <RelatedWebsite />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js",["213"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst NewsList = () => {\r\n  const [news, setNews] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(news.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noNews = !news || (news && news.length === 0); //check if no news\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setNews(response.data); // set news data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noNews\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noNews &&\r\n          news.slice(offset, offset + PER_PAGE).map((newsItem, idx) => {\r\n            return (\r\n              <Col xs={12} md={6} lg={3} key={idx} className=\"p-2\">\r\n                <Link\r\n                  className=\"h-100\"\r\n                  // pass news item data throw props\r\n                  to={{\r\n                    pathname: `${url}/${newsItem.id}`,\r\n                    state: {\r\n                      newsItem,\r\n                    },\r\n                  }}\r\n                >\r\n                  <CustomCard\r\n                    CardTitle={newsItem.titleA}\r\n                    CardText={moment(newsItem.publishDate)\r\n                      .locale(\"ar\")\r\n                      .format(\"LL\")}\r\n                    CardImg={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                  />\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        {!noNews && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        {/* {noNews && <h2 className=\"text-center p-4\"> لا توجد أخبار</h2>} */}\r\n        {loading === true && noNews ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noNews ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js",["214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport \"../News/News-item.css\";\r\nconst EventItem = (props) => {\r\n  // const eventItem = props.location.state.eventItem;\r\n\r\n  //get data from Link state\r\n  const eventItemLinkState = props.location.state\r\n    ? props.location.state.eventItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const eventItemId = parseInt(props.match.params.EventId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [eventItem, setEventItem] = useState({});\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      response.data.map((eventItem) => {\r\n        if (eventItem.id === eventItemId) {\r\n          setEventItem(eventItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {eventItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItemLinkState.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemLinkState.id}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(eventItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(eventItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemId}\r\n                  mainPhoto={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {eventItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{eventItem.contentA}</Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js",["216"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst EventsList = () => {\r\n  const [events, setEvents] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(events.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noEvents = !events || (events && events.length === 0); //check if no Events\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setEvents(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noEvents\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noEvents &&\r\n          events.slice(offset, offset + PER_PAGE).map((eventItem, idx) => {\r\n            return (\r\n              <>\r\n                <Col xs={12} md={6} lg={3} key={idx} className=\"p-3\">\r\n                  <Link\r\n                    // pass Events item data throw props\r\n                    to={{\r\n                      pathname: `${url}/${eventItem.id}`,\r\n                      state: {\r\n                        eventItem,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CustomCard\r\n                      CardTitle={eventItem.titleA}\r\n                      CardText={moment(eventItem.publishDate)\r\n                        .locale(\"ar\")\r\n                        .format(\"LL\")}\r\n                      CardImg={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                    />\r\n                  </Link>\r\n                </Col>\r\n              </>\r\n            );\r\n          })}\r\n        {!noEvents && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n        {loading === true && noEvents ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noEvents ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد فعاليات</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js",["217","218"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js",["219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\nimport \"./News-item.css\";\r\n\r\nconst NewsItem = (props) => {\r\n  //get data from Link state\r\n  const newsItemLinkState = props.location.state\r\n    ? props.location.state.newsItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const newsItemId = parseInt(props.match.params.NewsId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [newsItem, setNewsItem] = useState({});\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      // setNews(response.data); // set news data to state\r\n\r\n      response.data.map((newsItem) => {\r\n        if (newsItem.id === newsItemId) {\r\n          setNewsItem(newsItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(newsItemId);\r\n    getNews();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {newsItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItemLinkState.titleE}</h3>\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemLinkState.id}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItemLinkState.id}/${newsItemLinkState.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(newsItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(newsItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemId}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {newsItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">\r\n              <p>{newsItem.contentA}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outlets.js",["221","222"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../../slick-carousel/Arrows\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nimport \"./Outlet.css\";\r\n\r\nconst Outlets = () => {\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    // autoplay: true,\r\n    slidesToScroll: 1,\r\n\r\n    centerPadding: \"0px\",\r\n    slidesToShow: 4,\r\n    speed: 500,\r\n    rtl: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const [outlets, setOutlets] = useState([]);\r\n  const noOutlets = !outlets || (outlets && outlets.length === 0); //check if no news\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 6;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(outlets.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const getOutlets = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/Ports/PortEntity\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setOutlets(response.data); // set news data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOutlets();\r\n  }, []);\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      {url === \"/\" ? (\r\n        <Row\r\n          className=\"justify-content-center py-5\"\r\n          style={{\r\n            background: \"rgb(13, 146, 76)\",\r\n            background:\r\n              \"linear-gradient( 0deg,rgba(13, 146, 76, 1) 0%, rgba(84, 166, 70, 1) 100%)\",\r\n          }}\r\n        >\r\n          <Col xs={12}>\r\n            <HeadBar>منافذ</HeadBar>\r\n          </Col>\r\n          <Container className=\"py-5\">\r\n            <Row>\r\n              <Col className=\"carrousel_wrapper outlets px-0\">\r\n                <Slider {...settings}>\r\n                  {!noOutlets &&\r\n                    outlets.map((outletItem, idx) => {\r\n                      return (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"px-2 d-flex flex-column align-items-center\"\r\n                        >\r\n                          <Link\r\n                            className=\"d-flex flex-column justify-content-center align-items-center \"\r\n                            to={{\r\n                              pathname: \"/Ports/PortEntity\",\r\n                              state: {\r\n                                EntityId: outletItem.id,\r\n                                Entitylogo: outletItem.logo,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <div className=\"carrousel_image\">\r\n                              <img\r\n                                src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                                className=\"img-fluid\"\r\n                                alt={`${outletItem.logo}`}\r\n                              />\r\n                            </div>\r\n                            <div className=\"carrousel_caption zoom_on_hover\">\r\n                              <div className=\"text-center\">\r\n                                {outletItem.nameA}\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Slider>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      ) : (\r\n        <Container\r\n          fluid\r\n          style={\r\n            !noOutlets\r\n              ? {\r\n                  backgroundImage: `url(${mainBg})`,\r\n                  backgroundPosition: \"right top\",\r\n                  backgroundSize: \"cover\",\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          <Row>\r\n            {!noOutlets &&\r\n              outlets\r\n                .slice(offset, offset + PER_PAGE)\r\n                .map((outletItem, idx) => {\r\n                  return (\r\n                    <Col\r\n                      xs={12}\r\n                      md={6}\r\n                      lg={4}\r\n                      key={idx}\r\n                      className=\"p-5 outlets\"\r\n                    >\r\n                      <Link\r\n                        className=\"h-100 d-flex flex-column align-items-center justify-content-center\"\r\n                        // pass news item data throw props\r\n                        to={{\r\n                          pathname: \"/Ports/PortEntity\",\r\n                          state: {\r\n                            EntityId: outletItem.id,\r\n                            Entitylogo: outletItem.logo,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"carrousel_image\"\r\n                          style={{ border: \"5px solid var(--main-green)\" }}\r\n                        >\r\n                          <img\r\n                            src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${outletItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center text-dark\">\r\n                            {outletItem.nameA}\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </Col>\r\n                  );\r\n                })}\r\n            {!noOutlets && (\r\n              <Col xs={12}>\r\n                <ReactPaginate\r\n                  previousLabel={\"→ السابق\"}\r\n                  nextLabel={\"التالى ←\"}\r\n                  pageCount={pageCount}\r\n                  onPageChange={handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  previousLinkClassName={\"pagination__link\"}\r\n                  nextLinkClassName={\"pagination__link\"}\r\n                  disabledClassName={\"pagination__link--disabled\"}\r\n                  activeClassName={\"pagination__link--active\"}\r\n                />\r\n              </Col>\r\n            )}\r\n            {loading === true && noOutlets ? (\r\n              <div className=\"w-100 d-flex justify-content-center m-5\">\r\n                <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n              </div>\r\n            ) : null}\r\n            {loading === false && noOutlets ? (\r\n              <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n            ) : null}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Outlets;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js",["223","224","225"],"import React, {useState, useEffect} from \"react\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\nimport parse from \"html-react-parser\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst AboutUs = () => {\r\n  const [aboutUs,setAboutUs] = useState(null);\r\n  const getAbouUs = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/Home/AboutUs/1\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setAboutUs(response.data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAbouUs();\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n    {aboutUs!= null && (\r\n      <>\r\n        <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n          <div className=\"text-center mt-2\">\r\n            <img src={`${paths.AboutUs}${aboutUs.id}/${aboutUs.photoA}`} style={{width:1000, height:400}} className=\"img-fluid\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"mr-4 ml-4 mt-4\">\r\n          {parse(aboutUs.contentA)}\r\n        </div>\r\n      </>\r\n    )}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default AboutUs;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\RelatedWebsite.js",["226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nconst RelatedWebsite = () => {\r\n  const [relatedWebsites, setRelatedWebsites] = useState([]);\r\n  const noRelatedWebsites =\r\n    !relatedWebsites || (relatedWebsites && relatedWebsites.length === 0); //check if no RelatedWebsites\r\n\r\n  const getRelatedWebsites = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/home/RelatedWebSite\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setRelatedWebsites(response.data); // set RelatedWebsites data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRelatedWebsites();\r\n  }, []);\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center py-5\"\r\n      style={{\r\n        background: \"#54A646\",\r\n      }}\r\n    >\r\n      <Col xs={12}>\r\n        <HeadBar>مواقع ذات صلة</HeadBar>\r\n      </Col>\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          {!noRelatedWebsites &&\r\n            relatedWebsites.map((relatedWebsitesItem, idx) => {\r\n              return (\r\n                <Col xs={4} key={idx} className=\"p-2\">\r\n                  <a href={relatedWebsitesItem.url} target=\"_blank\">\r\n                    <Row className=\"align-items-center \">\r\n                      <Col xs={4}>\r\n                        <div\r\n                          className=\"d-flex  justify-content-center align-items-center \"\r\n                          style={{\r\n                            height: \"100px\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundColor: \"#fff\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={`${paths.RelatedWebsitePhotos}${relatedWebsitesItem.id}/${relatedWebsitesItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${relatedWebsitesItem.logo}`}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        xs={8}\r\n                        className=\"p-2 text-white\"\r\n                        // style={{ fontSize: \".9rem\" }}\r\n                      >\r\n                        <p>{relatedWebsitesItem.nameA}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </a>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RelatedWebsite;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner.js",["228"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HeadBar from \"../../UI/HeadBar\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport \"./Partner.css\";\r\n\r\nconst Partner = () => {\r\n  const settings = {\r\n    className: \"center\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    slidesToScroll: 1,\r\n\r\n    centerPadding: \"0px\",\r\n    slidesToShow: 4,\r\n    speed: 500,\r\n    rtl: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const [partners, setPartners] = useState([]);\r\n  const noPartners = !partners || (partners && partners.length === 0); //check if no partners\r\n\r\n  const getPartners = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/home/Partner\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setPartners(response.data); // set partners data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPartners();\r\n  }, []);\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center py-5\"\r\n      style={{\r\n        background: \"rgb(13, 146, 76)\",\r\n        background:\r\n          \"linear-gradient( 0deg,rgba(13, 146, 76, 1) 0%, rgba(84, 166, 70, 1) 100%)\",\r\n      }}\r\n    >\r\n      <Col xs={12}>\r\n        <HeadBar>شركاؤنا</HeadBar>\r\n      </Col>\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col className=\"carrousel_wrapper partner px-0\">\r\n            <Slider {...settings}>\r\n              {!noPartners &&\r\n                partners.map((partnerItem, idx) => {\r\n                  return (\r\n                    <div\r\n                      key={idx}\r\n                      className=\"px-2 d-flex flex-column align-items-center\"\r\n                    >\r\n                      <Link\r\n                        to=\"/\"\r\n                        className=\"d-flex flex-column justify-content-center align-items-center \"\r\n                      >\r\n                        <div className=\"carrousel_image\">\r\n                          <img\r\n                            src={`${paths.PartnerPhotos}${partnerItem.id}/${partnerItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${partnerItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center\">{partnerItem.nameA}</div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Partner;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js",["229","230","231","232"],"import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\nimport { paths } from \"../Paths/Pathes\";\r\n\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../slick-carousel/Arrows\";\r\n\r\nconst CustomSlider = (Props) => {\r\n  const [images, setImgaes] = useState([]);\r\n  const [noImages, setNoImgaes] = useState({});\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  //   const IMAGES = [];\r\n  const GetImages = async () => {\r\n    var url = `PhotoLibrary/GetPhotos?objectName=${Props.objectname}&objectId=${Props.objectid}`;\r\n\r\n    var response = await axios\r\n      .get(url)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    if (response && response.data) {\r\n      setImgaes(response.data); // set Images data to state\r\n      setNoImgaes(false);\r\n    } else {\r\n      setNoImgaes(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetImages();\r\n  }, []);\r\n\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    // autoplay: true,\r\n    // centerPadding: \"400px\",\r\n    slidesToShow: 1,\r\n    speed: 500,\r\n    rtl: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {images.length === 0 && (\r\n        <div>\r\n          <img src={Props.mainPhoto} className=\"img-fluid\" alt=\"\" />\r\n        </div>\r\n      )}\r\n      <Slider {...settings}>\r\n        {!noImages &&\r\n          images.map((image, idx) => {\r\n            return (\r\n              <div key={idx}>\r\n                <div\r\n                  className=\"carrousel_image\"\r\n                  style={{\r\n                    background: `url(${paths.PhotoLibraryAlbumPhoto}${image.photoLibraryAlbumID}/${image.photo})`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            );\r\n          })}\r\n      </Slider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSlider;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js",["233","234"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\n\r\nimport icommodityGroup from \"../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport RetailPricesResult from \"./RetailPrices-result\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst RetailPrices = () => {\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [governorates, setGovernorate] = useState([]);\r\n  const [subIndicator, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [SelectedGov, setSelectedGov] = useState(0);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const noSearchResult =\r\n    !searchResult || (searchResult && searchResult.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n      setGovernorate(response.data.governorates);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setSubIndicator(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n  }, [searchResult]);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      GeneralIndicatorId: 0,\r\n      GovernorateId: 0,\r\n      subIndicatorId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      setSelectedGov(values.GovernorateId);\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n\r\n      const response = await axios\r\n        .post(\"/Prices/Retail\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        //alert(\"sucess!\");\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ paddingRight: 30 }}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={icommodityGroup}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GeneralIndicatorId\"\r\n              id=\"المجموعة السلعية\"\r\n              select\r\n              label=\"المجموعة السلعية\"\r\n              value={formik.values.GeneralIndicatorId}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                handleGenralIndicatorsChange(e);\r\n              }}\r\n              error={\r\n                formik.touched.GeneralIndicatorId &&\r\n                Boolean(formik.errors.GeneralIndicatorId)\r\n              }\r\n              helperText={\r\n                formik.touched.GeneralIndicatorId &&\r\n                formik.errors.GeneralIndicatorId\r\n              }\r\n            >\r\n              <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n              {genralIndicators.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={wheatBag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"subIndicatorId\"\r\n              id=\"السلعة\"\r\n              select\r\n              label=\"السلعة\"\r\n              value={formik.values.subIndicatorId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.subIndicator &&\r\n                Boolean(formik.errors.subIndicator)\r\n              }\r\n              helperText={\r\n                formik.touched.subIndicator && formik.errors.subIndicator\r\n              }\r\n            >\r\n              <MenuItem value={0}>السلعة</MenuItem>\r\n              {subIndicator.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={flag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GovernorateId\"\r\n              id=\"المحافظة\"\r\n              select\r\n              label=\"المحافظة\"\r\n              value={formik.values.GovernorateId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.governorates &&\r\n                Boolean(formik.errors.governorates)\r\n              }\r\n              helperText={\r\n                formik.touched.governorates && formik.errors.governorates\r\n              }\r\n            >\r\n              <MenuItem value={0}>المحافظة</MenuItem>\r\n              {governorates.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\"p-3 my-2 \"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                color: \"#fff\",\r\n                backgroundColor: \"var(--main-green)\",\r\n                width: \"200px\",\r\n              }}\r\n            >\r\n              بحث\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n      {!noSearchResult && (\r\n        <RetailPricesResult GovId={SelectedGov} resultData={searchResult} />\r\n      )}\r\n      {loading === true && noSearchResult ? (\r\n        <div className=\"w-100 d-flex justify-content-center m-5\">\r\n          <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n        </div>\r\n      ) : null}\r\n      {!fetched && loading == false && (\r\n        <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetailPrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js",["235","236"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport icommodityGroup from \"../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport WholesalePricesResult from \"./WholesalePrices-Result\";\r\n\r\nconst WholesalePrices = () => {\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [Market, setMarket] = useState([]);\r\n  const [subIndicator, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const noSearchResult =\r\n    !searchResult || (searchResult && searchResult.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n      setMarket(response.data.wholesaleMarket);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    //setLoading(!loading);\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      //setLoading(!loading);\r\n      setSubIndicator(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n  }, []);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  const validationSchema = yup.object({\r\n    GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n    MarketId: yup.mixed().notOneOf([0], \"أختر السوق \"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      GeneralIndicatorId: 0,\r\n      SubIndicatorId: 0,\r\n      MarketId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n      //alert(JSON.stringify(values, null, 2));\r\n      const response = await axios\r\n        .post(\"/Prices/Wholesale\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        //alert(\"sucess!\");\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ paddingRight: 30 }}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={icommodityGroup}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GeneralIndicatorId\"\r\n              id=\"المجموعة السلعية\"\r\n              select\r\n              label=\"المجموعة السلعية\"\r\n              value={formik.values.GeneralIndicatorId}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                handleGenralIndicatorsChange(e);\r\n              }}\r\n              error={\r\n                formik.touched.GeneralIndicatorId &&\r\n                Boolean(formik.errors.GeneralIndicatorId)\r\n              }\r\n              helperText={\r\n                formik.touched.GeneralIndicatorId &&\r\n                formik.errors.GeneralIndicatorId\r\n              }\r\n            >\r\n              <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n              {genralIndicators.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={wheatBag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"SubIndicatorId\"\r\n              id=\"السلعة\"\r\n              select\r\n              label=\"السلعة\"\r\n              value={formik.values.SubIndicatorId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.SubIndicator &&\r\n                Boolean(formik.errors.SubIndicator)\r\n              }\r\n              helperText={\r\n                formik.touched.subIndicator && formik.errors.subIndicator\r\n              }\r\n            >\r\n              <MenuItem value={0}>السلعة</MenuItem>\r\n              {subIndicator.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={flag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"MarketId\"\r\n              id=\"Market\"\r\n              select\r\n              label=\"السوق\"\r\n              value={formik.values.MarketId}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.MarketId && Boolean(formik.errors.MarketId)}\r\n              helperText={formik.touched.MarketId && formik.errors.MarketId}\r\n            >\r\n              <MenuItem value={0}>السوق</MenuItem>\r\n              {Market.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\"p-3 my-2 \"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                color: \"#fff\",\r\n                backgroundColor: \"var(--main-green)\",\r\n                width: \"200px\",\r\n              }}\r\n            >\r\n              بحث\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n      {!noSearchResult && fetched && (\r\n        <WholesalePricesResult resultData={searchResult} />\r\n      )}\r\n      {loading === true && noSearchResult ? (\r\n        <div className=\"w-100 d-flex justify-content-center m-5\">\r\n          <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n        </div>\r\n      ) : null}\r\n      {!fetched && loading == false && (\r\n        <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WholesalePrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\RetailPrices-result.js",["237","238","239","240","241","242","243"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst RetailPricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table table-bordered table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              النوع{\" \"}\r\n            </TableCell>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              الوحدة{\" \"}\r\n            </TableCell>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              العملة{\" \"}\r\n            </TableCell>\r\n            {props.GovId == 0 && (\r\n              <TableCell colSpan={2} className=\"text-center\">\r\n                {\" \"}\r\n                أسعار السلع على مستوى الجمهورية{\" \"}\r\n              </TableCell>\r\n            )}\r\n            {props.GovId != 0 && (\r\n              <TableCell colSpan={2} className=\"text-center\">\r\n                {\" \"}\r\n                أسعار السلع فى المحافظات{\" \"}\r\n              </TableCell>\r\n            )}\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              التاريخ{\" \"}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> أدنى سعر </TableCell>\r\n            <TableCell className=\"text-center\"> أعلى سعر </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                {item.subindictorName}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {item.minValue}{\" \"}\r\n                {props.GovId == 0 && (\r\n                  <div className=\"text-center my-2\">\r\n                    <span className=\"MaxVal GovVal\">{item.govMin}</span>\r\n                  </div>\r\n                )}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {item.maxValue}{\" \"}\r\n                {props.GovId == 0 && (\r\n                  <div className=\"text-center my-2\">\r\n                    <span className=\"MinVal GovVal\">{item.govMax}</span>\r\n                  </div>\r\n                )}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n    /*\r\n    <Table responsive bordered>\r\n      <thead\r\n        style={{\r\n          backgroundColor: \"var(--main-green\",\r\n          color: \"#fff\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <tr>\r\n          <th rowSpan=\"2\" className=\"text-center\">\r\n            النوع\r\n          </th>\r\n          <th rowSpan=\"2\" className=\"text-center\">\r\n            الوحدة\r\n          </th>\r\n          <th rowSpan=\"2\" className=\"text-center\">\r\n            العملة\r\n          </th>\r\n          {\r\n            props.GovId == 0 &&   <th colSpan=\"2\" className=\"text-center\"> أسعار السلع على مستوى الجمهورية  </th>\r\n          }\r\n          {\r\n            props.GovId != 0 &&   <th colSpan=\"2\" className=\"text-center\"> أسعار السلع فى المحافظات </th>\r\n          }\r\n        \r\n          <th rowSpan=\"2\" className=\"text-center\">التاريخ </th>\r\n        </tr>\r\n        <tr>\r\n          <th className=\"text-center\">ادنى سعر</th>\r\n          <th className=\"text-center\"> أعلى سعر</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.resultData.map((item,idx) => (\r\n          <tr key={idx}>\r\n            <td className=\"text-center\">{item.subindictorName}</td>\r\n            <td className=\"text-center\">{item.unit}</td>\r\n            <td className=\"text-center\">{item.currency}</td>\r\n            <td className=\"text-center\">{item.minValue} <div className=\"MaxVal GovVal\"> {props.GovId == 0 && item.govMin} </div></td>\r\n            <td className=\"text-center\">{item.maxValue} <div className=\"MinVal GovVal\"> {props.GovId == 0 && item.govMax} </div></td>\r\n            <td className=\"text-center\">{ moment(item.insertionDate).format(\"LL\")}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n    */\r\n  );\r\n};\r\n\r\nexport default RetailPricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\WholesalePrices-Result.js",["244","245","246"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst WholesalePricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table table-bordered table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> السلعة </TableCell>\r\n            <TableCell className=\"text-center\"> السعر </TableCell>\r\n            <TableCell className=\"text-center\"> العبوة </TableCell>\r\n            <TableCell className=\"text-center\"> الوحدة </TableCell>\r\n            <TableCell className=\"text-center\"> العملة </TableCell>\r\n            <TableCell className=\"text-center\"> النوع </TableCell>\r\n            <TableCell className=\"text-center\"> الحجم </TableCell>\r\n            <TableCell className=\"text-center\"> التاريخ </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                {item.subindictorName}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.price}</TableCell>\r\n              <TableCell className=\"text-center\">{item.packaging_A}</TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">{item.variaty_A}</TableCell>\r\n              <TableCell className=\"text-center\">{item.volume_A}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default WholesalePricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js",["247","248","249","250"],"import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\n\r\nimport icommodityGroup from \"../../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../../assets/images/png/flag.png\";\r\n\r\nconst SearchForm = () => {\r\n  //\r\n  const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    // ContactTypeId: yup.number.required(\"ContactType is required\"),\r\n    commodityGroup: yup\r\n      .string(\"أختر المجموعة السلعية\")\r\n      .required(\"أختر المجموعة السلعية \"),\r\n    commodity: yup.string(\"أختر السلعة\").required(\"أختر السلعة\"),\r\n    city: yup.string(\"أختر المدينة\").required(\"أختر المدينة\"),\r\n  });\r\n\r\n  //   const [commodityGroup, setCommodityGroup] = useState([]);\r\n\r\n  //   const getCommodityGroup = async () => {\r\n  //     //fetch ContactTypes data\r\n  //     const response = await axios\r\n  //       .get(\"/commodityGroup\")\r\n  //       .catch((err) => console.log(\"Error\", err)); //handle errors\r\n  //     if (response && response.data) {\r\n  //         getCommodityGroup(response.data); // set commodityGroup data to state\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     getCommodityGroup();\r\n  //   }, []);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      commodityGroup: \"\",\r\n      commodity: \"\",\r\n      city: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      const response = await axios\r\n        // .post(\"/ContactUs\", values)\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        alert(\"sucess!\");\r\n        console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [value, setValue] = React.useState(\"retail\");\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center border-bottom py-5\"\r\n      style={{ backgroundColor: \"var(--main-gray)\" }}\r\n    >\r\n      {console.log(value)}\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <RadioGroup\r\n                className=\"mb-4\"\r\n                aria-label=\"market\"\r\n                name=\"market\"\r\n                value={value}\r\n                onChange={handleRadioChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"retail\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق التجزئة\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"wholesale\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق الجملة\"\r\n                />\r\n              </RadioGroup>\r\n              <Row>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={icommodityGroup}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المجموعة السلعية\"\r\n                    select\r\n                    label=\"المجموعة السلعية\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={wheatBag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"السلعة\"\r\n                    select\r\n                    label=\"السلعة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={flag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المحافظة\"\r\n                    select\r\n                    label=\"المحافظة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\"p-3 my-2 \"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"var(--main-green)\",\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    إرسال\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-item.js",["251","252","253"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport icommodityGroup from \"../../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport PortPricesResult from \"./Port-price-result\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\n\r\nconst PortItem = (props) => {\r\n  //get data from Link state\r\n  const portItemLinkState = props.location.state\r\n    ? props.location.state.PortItem\r\n    : undefined;\r\n  //get news item id from url\r\n  const portItemId = parseInt(props.match.params.PortId);\r\n\r\n  //   //get port item id from url\r\n  //   const portItemId = parseInt(props.match.params.portId);\r\n  //   //\r\n  //   const [portItem, setPortItem] = useState({});\r\n\r\n  //   const getPorts = async () => {\r\n  //     let url = `/Ports/PortEntity`;\r\n  //     //fetch news data\r\n  //     const response = await axios\r\n  //       .get(url)\r\n  //       .catch((err) => console.log(\"Error\", err)); //handle errors\r\n  //     if (response && response.data) {\r\n  //       response.data.map((portItem) => {\r\n  //         if (portItem.id === portItemId) {\r\n  //           setPortItem(portItem);\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     getPorts();\r\n  //   }, []);\r\n  //   console.log(portItem);\r\n\r\n  /////Port Prices\r\n\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [SubIndicatorId, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const noSearchResult =\r\n    !searchResult || (searchResult && searchResult.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setSubIndicator(response.data);\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  const getAllPrices = async () => {\r\n    setLoading(true);\r\n    setSearchResult([]);\r\n    const response = await axios\r\n      .post(\r\n        \"/prices/port\",\r\n        JSON.stringify(\r\n          {\r\n            Id: portItemId,\r\n            GeneralIndicatorId: 0,\r\n            SubIndicatorId: 0,\r\n          },\r\n          null,\r\n          2\r\n        )\r\n      )\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n    if (response) {\r\n      // alert(\"sucess!\");\r\n      console.log(response);\r\n      setLoading(false);\r\n      setSearchResult(response.data);\r\n      if (response.data.length > 0) {\r\n        setFeched(true);\r\n      } else {\r\n        setFeched(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n  }, [searchResult]);\r\n\r\n  useEffect(() => {\r\n    getAllPrices();\r\n  }, []);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    // GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Id: portItemId,\r\n      GeneralIndicatorId: 0,\r\n      SubIndicatorId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n\r\n      const response = await axios\r\n        .post(\"/prices/port\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        // alert(\"sucess!\");\r\n        console.log(response);\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container fluid>\r\n      {/* {console.log(portItemId)} */}\r\n      <Row\r\n        className=\"justify-content-center border-bottom py-5\"\r\n        style={{ backgroundColor: \"var(--main-gray)\" }}\r\n      >\r\n        <Col>\r\n          <h3 style={{ color: \"var(--main-green)\" }}>\r\n            {portItemLinkState.nameA}\r\n          </h3>\r\n          <p>\r\n            <FlagIcon style={{ fontSize: 30, color: \"#80B741\" }} />\r\n            {portItemLinkState.governorateName}\r\n          </p>\r\n          <div style={{ paddingRight: 30 }}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Row>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={icommodityGroup}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"GeneralIndicatorId\"\r\n                    id=\"المجموعة السلعية\"\r\n                    select\r\n                    label=\"المجموعة السلعية\"\r\n                    value={formik.values.GeneralIndicatorId}\r\n                    onChange={(e) => {\r\n                      formik.handleChange(e);\r\n                      handleGenralIndicatorsChange(e);\r\n                    }}\r\n                    error={\r\n                      formik.touched.GeneralIndicatorId &&\r\n                      Boolean(formik.errors.GeneralIndicatorId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.GeneralIndicatorId &&\r\n                      formik.errors.GeneralIndicatorId\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n                    {genralIndicators.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={wheatBag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"SubIndicatorId\"\r\n                    id=\"السلعة\"\r\n                    select\r\n                    label=\"السلعة\"\r\n                    value={formik.values.SubIndicatorId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.SubIndicatorId &&\r\n                      Boolean(formik.errors.SubIndicatorId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.SubIndicatorId &&\r\n                      formik.errors.SubIndicatorId\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>السلعة</MenuItem>\r\n                    {SubIndicatorId.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Button\r\n                    className=\"p-3 my-2 \"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"var(--main-green)\",\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    بحث\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n            {!noSearchResult && <PortPricesResult resultData={searchResult} />}\r\n            {loading === true && noSearchResult ? (\r\n              <div className=\"w-100 d-flex justify-content-center m-5\">\r\n                <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n              </div>\r\n            ) : null}\r\n            {!fetched && loading == false && (\r\n              <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PortItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-price-result.js",["254","255","256"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst PortPricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table table-bordered table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> النوع </TableCell>\r\n            <TableCell className=\"text-center\"> الوحدة </TableCell>\r\n            <TableCell className=\"text-center\"> العملة </TableCell>\r\n            <TableCell className=\"text-center\">السعر</TableCell>\r\n            <TableCell className=\"text-center\"> التاريخ </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                {item.subindictorName}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">{item.price}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PortPricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\Global-prices.js",["257","258"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\Global-Prices-result.js",["259","260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"262","replacedBy":"266"},{"ruleId":"264","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":58,"column":6,"nodeType":"270","endLine":58,"endColumn":8,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":18},{"ruleId":"268","severity":1,"message":"276","line":55,"column":6,"nodeType":"270","endLine":55,"endColumn":8,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":37,"column":37,"nodeType":"280","messageId":"281","endLine":37,"endColumn":39},{"ruleId":"268","severity":1,"message":"282","line":47,"column":6,"nodeType":"270","endLine":47,"endColumn":8,"suggestions":"283"},{"ruleId":"268","severity":1,"message":"282","line":55,"column":6,"nodeType":"270","endLine":55,"endColumn":8,"suggestions":"284"},{"ruleId":"268","severity":1,"message":"285","line":93,"column":6,"nodeType":"270","endLine":93,"endColumn":8,"suggestions":"286"},{"ruleId":"268","severity":1,"message":"285","line":97,"column":6,"nodeType":"270","endLine":97,"endColumn":51,"suggestions":"287"},{"ruleId":"278","severity":1,"message":"279","line":36,"column":36,"nodeType":"280","messageId":"281","endLine":36,"endColumn":38},{"ruleId":"268","severity":1,"message":"276","line":47,"column":6,"nodeType":"270","endLine":47,"endColumn":8,"suggestions":"288"},{"ruleId":"272","severity":1,"message":"289","line":57,"column":17,"nodeType":"274","messageId":"275","endLine":57,"endColumn":27},{"ruleId":"290","severity":1,"message":"291","line":94,"column":13,"nodeType":"292","messageId":"293","endLine":94,"endColumn":23},{"ruleId":"272","severity":1,"message":"294","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":19},{"ruleId":"272","severity":1,"message":"295","line":5,"column":21,"nodeType":"274","messageId":"275","endLine":5,"endColumn":24},{"ruleId":"272","severity":1,"message":"296","line":5,"column":26,"nodeType":"274","messageId":"275","endLine":5,"endColumn":29},{"ruleId":"272","severity":1,"message":"297","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":14},{"ruleId":"298","severity":1,"message":"299","line":45,"column":53,"nodeType":"300","endLine":45,"endColumn":68},{"ruleId":"290","severity":1,"message":"291","line":68,"column":9,"nodeType":"292","messageId":"293","endLine":68,"endColumn":19},{"ruleId":"272","severity":1,"message":"301","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":19},{"ruleId":"272","severity":1,"message":"302","line":14,"column":8,"nodeType":"274","messageId":"275","endLine":14,"endColumn":15},{"ruleId":"272","severity":1,"message":"289","line":14,"column":17,"nodeType":"274","messageId":"275","endLine":14,"endColumn":27},{"ruleId":"268","severity":1,"message":"303","line":33,"column":6,"nodeType":"270","endLine":33,"endColumn":8,"suggestions":"304"},{"ruleId":"272","severity":1,"message":"294","line":6,"column":15,"nodeType":"274","messageId":"275","endLine":6,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":237,"column":28,"nodeType":"307","messageId":"293","endLine":237,"endColumn":30},{"ruleId":"272","severity":1,"message":"294","line":6,"column":15,"nodeType":"274","messageId":"275","endLine":6,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":231,"column":28,"nodeType":"307","messageId":"293","endLine":231,"endColumn":30},{"ruleId":"272","severity":1,"message":"308","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"309","line":105,"column":10,"nodeType":"274","messageId":"275","endLine":105,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":114,"column":9,"nodeType":"274","messageId":"275","endLine":114,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":156,"column":26,"nodeType":"307","messageId":"293","endLine":156,"endColumn":28},{"ruleId":"305","severity":1,"message":"311","line":162,"column":26,"nodeType":"307","messageId":"293","endLine":162,"endColumn":28},{"ruleId":"305","severity":1,"message":"306","line":194,"column":30,"nodeType":"307","messageId":"293","endLine":194,"endColumn":32},{"ruleId":"305","severity":1,"message":"306","line":202,"column":30,"nodeType":"307","messageId":"293","endLine":202,"endColumn":32},{"ruleId":"272","severity":1,"message":"308","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"309","line":105,"column":10,"nodeType":"274","messageId":"275","endLine":105,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":114,"column":9,"nodeType":"274","messageId":"275","endLine":114,"endColumn":18},{"ruleId":"272","severity":1,"message":"308","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"312","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"313","line":21,"column":10,"nodeType":"274","messageId":"275","endLine":21,"endColumn":23},{"ruleId":"272","severity":1,"message":"314","line":23,"column":9,"nodeType":"274","messageId":"275","endLine":23,"endColumn":21},{"ruleId":"272","severity":1,"message":"315","line":11,"column":8,"nodeType":"274","messageId":"275","endLine":11,"endColumn":12},{"ruleId":"268","severity":1,"message":"316","line":117,"column":6,"nodeType":"270","endLine":117,"endColumn":8,"suggestions":"317"},{"ruleId":"305","severity":1,"message":"306","line":279,"column":34,"nodeType":"307","messageId":"293","endLine":279,"endColumn":36},{"ruleId":"272","severity":1,"message":"308","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"309","line":105,"column":10,"nodeType":"274","messageId":"275","endLine":105,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":114,"column":9,"nodeType":"274","messageId":"275","endLine":114,"endColumn":18},{"ruleId":"272","severity":1,"message":"315","line":15,"column":8,"nodeType":"274","messageId":"275","endLine":15,"endColumn":12},{"ruleId":"305","severity":1,"message":"306","line":201,"column":28,"nodeType":"307","messageId":"293","endLine":201,"endColumn":30},{"ruleId":"272","severity":1,"message":"308","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"309","line":105,"column":10,"nodeType":"274","messageId":"275","endLine":105,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":114,"column":9,"nodeType":"274","messageId":"275","endLine":114,"endColumn":18},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],["318"],["319"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDocumentLibrary'. Either include it or remove the dependency array.","ArrayExpression",["320"],"no-unused-vars","'SearchForm' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["321"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["322"],["323"],"React Hook useEffect has a missing dependency: 'getPorts'. Either include it or remove the dependency array.",["324"],["325"],["326"],"'setLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'PulseLoader' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetImages'. Either include it or remove the dependency array.",["327"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useState' is defined but never used.","'createData' is defined but never used.","'emptyRows' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'flag' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPrices'. Either include it or remove the dependency array.",["328"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"333","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"331","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},"Update the dependencies array to be: [getDocumentLibrary]",{"range":"345","text":"346"},"Update the dependencies array to be: [getNews]",{"range":"347","text":"348"},"Update the dependencies array to be: [getEvents]",{"range":"349","text":"350"},{"range":"351","text":"350"},"Update the dependencies array to be: [getPorts]",{"range":"352","text":"353"},"Update the dependencies array to be: [portTypeSelectedVal, governorateSelectedVal, getPorts]",{"range":"354","text":"355"},{"range":"356","text":"348"},"Update the dependencies array to be: [GetImages]",{"range":"357","text":"358"},"Update the dependencies array to be: [getAllPrices]",{"range":"359","text":"360"},[1714,1716],"[getDocumentLibrary]",[1548,1550],"[getNews]",[1347,1349],"[getEvents]",[1583,1585],[2824,2826],"[getPorts]",[2875,2920],"[portTypeSelectedVal, governorateSelectedVal, getPorts]",[1357,1359],[994,996],"[GetImages]",[3561,3563],"[getAllPrices]"]