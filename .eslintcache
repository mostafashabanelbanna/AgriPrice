[{"D:\\Projects\\prices\\src\\index.js":"1","D:\\Projects\\prices\\src\\App.js":"2","D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js":"3","D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js":"4","D:\\Projects\\prices\\src\\components\\Axios\\Axios.js":"5","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js":"6","D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js":"7","D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js":"8","D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js":"9","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js":"10","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js":"11","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js":"12","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js":"13","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js":"14","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js":"15","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js":"16","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js":"17","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js":"18","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js":"19","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js":"20","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js":"21","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-item.js":"22","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js":"23","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js":"24","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js":"25","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\SubIndicatorInfo.js":"26","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js":"27","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js":"28","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js":"29","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js":"30","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js":"31","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js":"32","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js":"33","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js":"34","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js":"35","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js":"36","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\WholesalePrices-Result.js":"37","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js":"38","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\RetailPrices-result.js":"39","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js":"40","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-price-result.js":"41","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\reducers\\index.js":"42","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\reducers\\LocSearchRes.js":"43","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\configure_store.js":"44","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\actions\\actionTypes.js":"45","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\actions\\locSearchRes.js":"46","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\News_docs-tabs.js":"47","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\News-tab.js":"48","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\Docs-tab.js":"49","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions.js":"50","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner\\Partner.js":"51","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outllets\\Outlets.js":"52","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Related-website\\RelatedWebsite.js":"53","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Contact-us\\ContactUs.js":"54","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\GeneralIndicatorTabs.js":"55","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\GeneralIndicatorContent.js":"56","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Ports-prices\\PortsPrices.js":"57","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Global-prices\\GlobalPrices.js":"58","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\MainIndicatorData.js":"59","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\General-indicator-tabs.js":"60","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\General-indicator-content.js":"61","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Metals\\Metals.js":"62","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\MainIndicatorDetails.js":"63","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\MainIndicatorBox.js":"64","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\PricesChangesRatio.js":"65","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\ProducingGovernorates.js":"66","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\SubIndicatorDetails.js":"67","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\GlobalPrices.js":"68","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\GovernoratesLogos.js":"69"},{"size":197,"mtime":1609224381058,"results":"70","hashOfConfig":"71"},{"size":985,"mtime":1609605043093,"results":"72","hashOfConfig":"71"},{"size":107,"mtime":1609605017018,"results":"73","hashOfConfig":"71"},{"size":116,"mtime":1609398925352,"results":"74","hashOfConfig":"71"},{"size":222,"mtime":1609417234465,"results":"75","hashOfConfig":"71"},{"size":1264,"mtime":1609670032073,"results":"76","hashOfConfig":"71"},{"size":306,"mtime":1609669990684,"results":"77","hashOfConfig":"71"},{"size":3027,"mtime":1609671705270,"results":"78","hashOfConfig":"71"},{"size":172,"mtime":1609579971605,"results":"79","hashOfConfig":"71"},{"size":741,"mtime":1617097231888,"results":"80","hashOfConfig":"81"},{"size":3145,"mtime":1618400672314,"results":"82","hashOfConfig":"81"},{"size":1741,"mtime":1618233372509,"results":"83","hashOfConfig":"81"},{"size":3907,"mtime":1611670243684,"results":"84","hashOfConfig":"81"},{"size":5059,"mtime":1615726826910,"results":"85","hashOfConfig":"81"},{"size":1903,"mtime":1611838673978,"results":"86","hashOfConfig":"81"},{"size":1138,"mtime":1614155314274,"results":"87","hashOfConfig":"81"},{"size":3886,"mtime":1618404584052,"results":"88","hashOfConfig":"81"},{"size":3898,"mtime":1611668959200,"results":"89","hashOfConfig":"81"},{"size":2751,"mtime":1618131765871,"results":"90","hashOfConfig":"81"},{"size":5877,"mtime":1617181719432,"results":"91","hashOfConfig":"81"},{"size":333,"mtime":1610445920834,"results":"92","hashOfConfig":"81"},{"size":3377,"mtime":1618400672268,"results":"93","hashOfConfig":"81"},{"size":3847,"mtime":1611647787131,"results":"94","hashOfConfig":"81"},{"size":3665,"mtime":1618468824615,"results":"95","hashOfConfig":"81"},{"size":8484,"mtime":1618400672269,"results":"96","hashOfConfig":"81"},{"size":9424,"mtime":1616868224719,"results":"97","hashOfConfig":"81"},{"size":8535,"mtime":1611212603533,"results":"98","hashOfConfig":"81"},{"size":2494,"mtime":1614155314276,"results":"99","hashOfConfig":"81"},{"size":3368,"mtime":1615892613779,"results":"100","hashOfConfig":"81"},{"size":319,"mtime":1610539398051,"results":"101","hashOfConfig":"81"},{"size":1741,"mtime":1611225216448,"results":"102","hashOfConfig":"81"},{"size":8759,"mtime":1617097231887,"results":"103","hashOfConfig":"81"},{"size":7874,"mtime":1614590654316,"results":"104","hashOfConfig":"81"},{"size":5326,"mtime":1617189040715,"results":"105","hashOfConfig":"81"},{"size":705,"mtime":1616868224723,"results":"106","hashOfConfig":"81"},{"size":357,"mtime":1618400672267,"results":"107","hashOfConfig":"81"},{"size":6825,"mtime":1614601065595,"results":"108","hashOfConfig":"81"},{"size":1685,"mtime":1618143050565,"results":"109","hashOfConfig":"81"},{"size":8252,"mtime":1617543314552,"results":"110","hashOfConfig":"81"},{"size":1978,"mtime":1611658417834,"results":"111","hashOfConfig":"81"},{"size":9824,"mtime":1618400672270,"results":"112","hashOfConfig":"81"},{"size":144,"mtime":1618392683446,"results":"113","hashOfConfig":"81"},{"size":570,"mtime":1617097231891,"results":"114","hashOfConfig":"81"},{"size":381,"mtime":1617097231890,"results":"115","hashOfConfig":"81"},{"size":100,"mtime":1618392654144,"results":"116","hashOfConfig":"81"},{"size":1112,"mtime":1617097231890,"results":"117","hashOfConfig":"81"},{"size":829,"mtime":1617192515818,"results":"118","hashOfConfig":"81"},{"size":3239,"mtime":1617727478294,"results":"119","hashOfConfig":"81"},{"size":3676,"mtime":1617727468542,"results":"120","hashOfConfig":"81"},{"size":1046,"mtime":1617729377536,"results":"121","hashOfConfig":"81"},{"size":2924,"mtime":1617879964492,"results":"122","hashOfConfig":"81"},{"size":7163,"mtime":1617875920614,"results":"123","hashOfConfig":"81"},{"size":2866,"mtime":1617287398349,"results":"124","hashOfConfig":"81"},{"size":1734,"mtime":1617288775135,"results":"125","hashOfConfig":"81"},{"size":5720,"mtime":1618420800483,"results":"126","hashOfConfig":"81"},{"size":7488,"mtime":1618412258662,"results":"127","hashOfConfig":"81"},{"size":2787,"mtime":1617727334878,"results":"128","hashOfConfig":"81"},{"size":2896,"mtime":1618410015725,"results":"129","hashOfConfig":"81"},{"size":17555,"mtime":1618349545339,"results":"130","hashOfConfig":"81"},{"size":2194,"mtime":1618420888717,"results":"131","hashOfConfig":"81"},{"size":11844,"mtime":1618304846195,"results":"132","hashOfConfig":"81"},{"size":2169,"mtime":1618234750126,"results":"133","hashOfConfig":"81"},{"size":6808,"mtime":1618474740273,"results":"134","hashOfConfig":"81"},{"size":5647,"mtime":1618351545043,"results":"135","hashOfConfig":"81"},{"size":13946,"mtime":1618347090975,"results":"136","hashOfConfig":"81"},{"size":2654,"mtime":1618403714113,"results":"137","hashOfConfig":"81"},{"size":6800,"mtime":1618351655580,"results":"138","hashOfConfig":"81"},{"size":3590,"mtime":1618397678538,"results":"139","hashOfConfig":"81"},{"size":384,"mtime":1618404380397,"results":"140","hashOfConfig":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"x7m7au",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"19elswf",{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"162"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"162"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"162"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"221"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"221"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"162"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"162"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"162"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"162"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"162"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"162"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"162"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"162"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"162"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"162"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"162"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"162"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"162"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"162"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"D:\\Projects\\prices\\src\\index.js",[],["316","317"],"D:\\Projects\\prices\\src\\App.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\Home\\Home.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\About-us\\About-us.js",[],"D:\\Projects\\prices\\src\\components\\Axios\\Axios.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-list.js",[],"D:\\Projects\\prices\\src\\components\\Pages\\news\\News-item.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Header.js",[],"D:\\Projects\\prices\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\index.js",[],["318","319"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\App.js",["320","321"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header_Footer/Header\";\r\nimport Footer from \"./components/Header_Footer/Footer\";\r\n\r\nimport Home from \"./components/Pages/Home/Home\";\r\nimport AboutUs from \"./components/Pages/About-us/About-us\";\r\nimport NewsList from \"./components/Pages/News/News-list\";\r\nimport EventsList from \"./components/Pages/Event/Event-list\";\r\nimport DocumentLibraryList from \"./components/Pages/Document-library/Document-library-list\";\r\nimport newsItem from \"./components/Pages/News/News-item\";\r\nimport eventItem from \"./components/Pages/Event/Event-item\";\r\nimport DocumentLibraryItem from \"./components/Pages/Document-library/Document-library-item\";\r\nimport portItem from \"./components/Pages/Port/Port-item\";\r\nimport Ports from \"./components/Pages/Port/Port-list\";\r\n\r\nimport \"./App.css\";\r\nimport Suggestions from \"./components/Pages/Home/Suggestions-form/Suggestions\";\r\nimport Outlets from \"./components/Pages/Home/Outllets/Outlets\";\r\nimport Aside from \"./components/Header_Footer/Aside\";\r\nimport LocalPrices from \"./components/Local-prices/Local-prices\";\r\nimport GlobalPrices from \"./components/Global-prices/GlobalPrices\";\r\nimport SubIndicatorInfo from \"./components/Local-prices/SubIndicatorInfo\";\r\nimport MainIndicatorDetails from \"./components/Local-prices/MainIndicatorDetails/MainIndicatorDetails\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n\r\n        <>\r\n          <Switch>\r\n            <Route path=\"/global-prices\" exact component={GlobalPrices} />\r\n            <Route\r\n              path=\"/local-prices/:indicatorId\"\r\n              exact\r\n              component={MainIndicatorDetails}\r\n            />\r\n            <Route path=\"/local-prices\" exact component={LocalPrices} />\r\n            <Route\r\n              path=\"/local-prices/SubIndicatorInfo/:Id\"\r\n              exact\r\n              component={SubIndicatorInfo}\r\n            />\r\n            <Route\r\n              path=\"/document-library-list/:DocumentLibraryId\"\r\n              exact\r\n              component={DocumentLibraryItem}\r\n            />\r\n            <Route\r\n              path=\"/Ports/:PortId\"\r\n              exact\r\n              component={portItem}\r\n            />\r\n            <Route path=\"/events-list/:EventId\" exact component={eventItem} />\r\n            <Route path=\"/news-list/:NewsId\" exact component={newsItem} />\r\n            <Route\r\n              path=\"/document-library-list\"\r\n              exact\r\n              component={DocumentLibraryList}\r\n            />\r\n            <Route path=\"/events-list\" exact component={EventsList} />\r\n            <Route path=\"/news-list\" exact component={NewsList} />\r\n            <Route path=\"/about-us\" exact component={AboutUs} />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/Ports\" exact component={Ports} />\r\n            {/* <Route path=\"/Ports\" exact component={Outlets} /> */}\r\n            <Route path=\"/suggestions\" exact component={Suggestions} />\r\n          </Switch>\r\n        </>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Home.js",["322","323","324","325","326","327"],"import React from \"react\";\r\nimport { Container, Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\n\r\nimport NewsCarrousel from \"./News-carrousel\";\r\nimport Outlets from \"./Outllets/Outlets\";\r\nimport Partner from \"./Partner/Partner\";\r\nimport RelatedWebsite from \"./Related-website/RelatedWebsite\";\r\nimport SearchForm from \"./Search-form\";\r\nimport SiteServices from \"./SiteServices\";\r\nimport Suggestions from \"./Suggestions-form/Suggestions\";\r\n\r\nimport \"./Home.css\";\r\n\r\nimport testImage from \"../../../assets/images/stock.jpg\";\r\nimport NewsDocsTabs from \"./News_docs/News_docs-tabs\";\r\nimport ConatctUs from \"./Contact-us/ContactUs\";\r\nimport GeneralIndicatorTabs from \"./Focus-general-indicator/GeneralIndicatorTabs\";\r\nimport PortsPrices from \"./Ports-prices/PortsPrices\";\r\nimport GlobalPrices from \"./Global-prices/GlobalPrices\";\r\nimport Metals from \"./Metals/Metals\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col lg={9}>\r\n            <GeneralIndicatorTabs />\r\n            <PortsPrices />\r\n            <GlobalPrices />\r\n            <NewsDocsTabs />\r\n            <Suggestions />\r\n          </Col>\r\n          <Col lg={3}>\r\n            <Container fluid className=\"pr-0\">\r\n              <div className=\"mt-5 mb-3\">\r\n                <img src={testImage} className=\"img-fluid\" />\r\n              </div>\r\n              <Partner />\r\n              <Metals />\r\n              <Outlets />\r\n              <RelatedWebsite />\r\n              <ConatctUs />\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n        {/* <NewsCarrousel />\r\n        <SearchForm />\r\n        <SiteServices />\r\n        <Outlets />\r\n\r\n        <RelatedWebsite /> */}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-list.js",["328"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst EventsList = () => {\r\n  const [events, setEvents] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(events.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noEvents = !events || (events && events.length === 0); //check if no Events\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setEvents(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noEvents\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noEvents &&\r\n          events.slice(offset, offset + PER_PAGE).map((eventItem, idx) => {\r\n            return (\r\n              <>\r\n                <Col xs={12} md={6} lg={3} key={idx} className=\"p-3\">\r\n                  <Link\r\n                    // pass Events item data throw props\r\n                    to={{\r\n                      pathname: `${url}/${eventItem.id}`,\r\n                      state: {\r\n                        eventItem,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CustomCard\r\n                      CardTitle={eventItem.titleA}\r\n                      CardText={moment(eventItem.publishDate)\r\n                        .locale(\"ar\")\r\n                        .format(\"LL\")}\r\n                      CardImg={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                    />\r\n                  </Link>\r\n                </Col>\r\n              </>\r\n            );\r\n          })}\r\n        {!noEvents && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n        {loading === true && noEvents ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noEvents ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد فعاليات</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Header.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Aside.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\About-us\\About-us.js",["329","330","331"],"import React, {useState, useEffect} from \"react\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\nimport parse from \"html-react-parser\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst AboutUs = () => {\r\n  const [aboutUs,setAboutUs] = useState(null);\r\n  const getAbouUs = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/Home/AboutUs/1\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setAboutUs(response.data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAbouUs();\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n    {aboutUs!= null && (\r\n      <>\r\n        <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n          <div className=\"text-center mt-2\">\r\n            <img src={`${paths.AboutUs}${aboutUs.id}/${aboutUs.photoA}`} style={{width:1000, height:400}} className=\"img-fluid\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"mr-4 ml-4 mt-4\">\r\n          {parse(aboutUs.contentA)}\r\n        </div>\r\n      </>\r\n    )}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default AboutUs;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-item.js",["332","333"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\nimport \"./News-item.css\";\r\n\r\nconst NewsItem = (props) => {\r\n  //get data from Link state\r\n  const newsItemLinkState = props.location.state\r\n    ? props.location.state.newsItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const newsItemId = parseInt(props.match.params.NewsId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [newsItem, setNewsItem] = useState({});\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      response.data.map((newsItem) => {\r\n        if (newsItem.id === newsItemId) {\r\n          setNewsItem(newsItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {newsItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItemLinkState.titleE}</h3>\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemLinkState.id}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItemLinkState.id}/${newsItemLinkState.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(newsItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(newsItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {newsItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{newsItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"News\"}\r\n                  objectid={newsItemId}\r\n                  mainPhoto={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {newsItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">\r\n              <p>{newsItem.contentA}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\News\\News-list.js",["334"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport CustomCard from \"../../UI/Custom-card\";\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst NewsList = () => {\r\n  const [news, setNews] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(news.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noNews = !news || (news && news.length === 0); //check if no news\r\n\r\n  const getNews = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/news\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setNews(response.data); // set news data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noNews\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Row>\r\n        {!noNews &&\r\n          news.slice(offset, offset + PER_PAGE).map((newsItem, idx) => {\r\n            return (\r\n              <Col xs={12} md={6} lg={3} key={idx} className=\"p-2\">\r\n                <Link\r\n                  className=\"h-100\"\r\n                  // pass news item data throw props\r\n                  to={{\r\n                    pathname: `${url}/${newsItem.id}`,\r\n                    state: {\r\n                      newsItem,\r\n                    },\r\n                  }}\r\n                >\r\n                  <CustomCard\r\n                    CardTitle={newsItem.titleA}\r\n                    CardText={moment(newsItem.publishDate)\r\n                      .locale(\"ar\")\r\n                      .format(\"LL\")}\r\n                    CardImg={`${paths.NewsPhotos}${newsItem.id}/${newsItem.photoA}`}\r\n                  />\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        {!noNews && (\r\n          <Col xs={12}>\r\n            <ReactPaginate\r\n              previousLabel={\"→ السابق\"}\r\n              nextLabel={\"التالى ←\"}\r\n              pageCount={pageCount}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        {/* {noNews && <h2 className=\"text-center p-4\"> لا توجد أخبار</h2>} */}\r\n        {loading === true && noNews ? (\r\n          <div className=\"w-100 d-flex justify-content-center m-5\">\r\n            <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n          </div>\r\n        ) : null}\r\n        {loading === false && noNews ? (\r\n          <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n        ) : null}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Header_Footer\\Footer.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-list.js",["335"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\n\r\nimport \"moment/locale/ar\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nconst DocumentLibraryList = () => {\r\n  const [documentLibrary, setDocumentLibrary] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(documentLibrary.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noDocumentLibrary =\r\n    !documentLibrary || (documentLibrary && documentLibrary.length === 0); //check if no Events\r\n\r\n  const getDocumentLibrary = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/DocumentLibrary\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setDocumentLibrary(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocumentLibrary();\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noDocumentLibrary\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Container>\r\n        <Row>\r\n          {!noDocumentLibrary &&\r\n            documentLibrary\r\n              .slice(offset, offset + PER_PAGE)\r\n              .map((documentLibraryItem, idx) => {\r\n                return (\r\n                  <Col\r\n                    sm={12}\r\n                    key={idx}\r\n                    className=\"p-3 m-3 border\"\r\n                    style={{ backgroundColor: \"#fff\", borderRadius: \"8px\" }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs={4} className=\"h-100\">\r\n                        <img\r\n                          src={`${paths.DocumentLibraryPhotos}${documentLibraryItem.id}/${documentLibraryItem.photoA}`}\r\n                          className=\"img-fluid img-thumbnail p-0\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col className=\"d-flex flex-column justify-content-between  h-100\">\r\n                        <div>\r\n                          <h3 style={{ color: \"var(--main-green)\" }}>\r\n                            {documentLibraryItem.titleA}\r\n                          </h3>\r\n                          <h4>{documentLibraryItem.titleE}</h4>\r\n                          <p>{parse(documentLibraryItem.contentA)}</p>\r\n                        </div>\r\n                        <div className=\"border-top d-flex justify-content-between py-3\">\r\n                          <div>\r\n                            <TodayIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              {moment(documentLibraryItem.publishDate)\r\n                                .locale(\"ar\")\r\n                                .format(\"LL\")}\r\n                            </strong>\r\n                          </div>{\" \"}\r\n                          <a\r\n                            href={`${paths.DocumentLibrarAttachment}${documentLibraryItem.id}/${documentLibraryItem.attachmentA}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            download\r\n                          >\r\n                            <DescriptionIcon />\r\n                            <strong\r\n                              className=\"mx-2\"\r\n                              style={{ color: \"var(--main-green)\" }}\r\n                            >\r\n                              تحميل ملف مرفق\r\n                            </strong>\r\n                          </a>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                );\r\n              })}\r\n          {!noDocumentLibrary && (\r\n            <Col xs={12}>\r\n              <ReactPaginate\r\n                previousLabel={\"→ السابق\"}\r\n                nextLabel={\"التالى ←\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </Col>\r\n          )}\r\n\r\n          {loading === true && noDocumentLibrary ? (\r\n            <div className=\"w-100 d-flex justify-content-center m-5\">\r\n              <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n            </div>\r\n          ) : null}\r\n          {loading === false && noDocumentLibrary ? (\r\n            <h2 className=\"w-100 text-center p-4\"> لا توجد إصدارات</h2>\r\n          ) : null}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DocumentLibraryList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Document-library\\Document-library-item.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-item.js",["336","337","338"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport icommodityGroup from \"../../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport PortPricesResult from \"./Port-price-result\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\n\r\nconst PortItem = (props) => {\r\n  //get data from Link state\r\n  const portItemLinkState = props.location.state\r\n    ? props.location.state.PortItem\r\n    : undefined;\r\n  //get news item id from url\r\n  const portItemId = parseInt(props.match.params.PortId);\r\n\r\n  //   //get port item id from url\r\n  //   const portItemId = parseInt(props.match.params.portId);\r\n  //   //\r\n  //   const [portItem, setPortItem] = useState({});\r\n\r\n  //   const getPorts = async () => {\r\n  //     let url = `/Ports/PortEntity`;\r\n  //     //fetch news data\r\n  //     const response = await axios\r\n  //       .get(url)\r\n  //       .catch((err) => console.log(\"Error\", err)); //handle errors\r\n  //     if (response && response.data) {\r\n  //       response.data.map((portItem) => {\r\n  //         if (portItem.id === portItemId) {\r\n  //           setPortItem(portItem);\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     getPorts();\r\n  //   }, []);\r\n  //   console.log(portItem);\r\n\r\n  /////Port Prices\r\n\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [SubIndicatorId, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const noSearchResult =\r\n    !searchResult || (searchResult && searchResult.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setSubIndicator(response.data);\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  const getAllPrices = async () => {\r\n    setLoading(true);\r\n    setSearchResult([]);\r\n    const response = await axios\r\n      .post(\r\n        \"/prices/port\",\r\n        JSON.stringify(\r\n          {\r\n            Id: portItemId,\r\n            GeneralIndicatorId: 0,\r\n            SubIndicatorId: 0,\r\n          },\r\n          null,\r\n          2\r\n        )\r\n      )\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n    if (response) {\r\n      // alert(\"sucess!\");\r\n      console.log(response);\r\n      setLoading(false);\r\n      setSearchResult(response.data);\r\n      if (response.data.length > 0) {\r\n        setFeched(true);\r\n      } else {\r\n        setFeched(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n  }, [searchResult]);\r\n\r\n  useEffect(() => {\r\n    getAllPrices();\r\n  }, []);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    // GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Id: portItemId,\r\n      GeneralIndicatorId: 0,\r\n      SubIndicatorId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n\r\n      const response = await axios\r\n        .post(\"/prices/port\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        // alert(\"sucess!\");\r\n        console.log(response);\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container fluid>\r\n      {/* {console.log(portItemId)} */}\r\n      <Row\r\n        className=\"justify-content-center border-bottom py-5\"\r\n        style={{ backgroundColor: \"var(--main-gray)\" }}\r\n      >\r\n        <Col>\r\n          <h3 style={{ color: \"var(--main-green)\" }}>\r\n            {portItemLinkState.nameA}\r\n          </h3>\r\n          <p>\r\n            <FlagIcon style={{ fontSize: 30, color: \"#80B741\" }} />\r\n            {portItemLinkState.governorateName}\r\n          </p>\r\n          <div style={{ paddingRight: 30 }}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Row>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={icommodityGroup}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"GeneralIndicatorId\"\r\n                    id=\"المجموعة السلعية\"\r\n                    select\r\n                    label=\"المجموعة السلعية\"\r\n                    value={formik.values.GeneralIndicatorId}\r\n                    onChange={(e) => {\r\n                      formik.handleChange(e);\r\n                      handleGenralIndicatorsChange(e);\r\n                    }}\r\n                    error={\r\n                      formik.touched.GeneralIndicatorId &&\r\n                      Boolean(formik.errors.GeneralIndicatorId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.GeneralIndicatorId &&\r\n                      formik.errors.GeneralIndicatorId\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n                    {genralIndicators.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={wheatBag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"SubIndicatorId\"\r\n                    id=\"السلعة\"\r\n                    select\r\n                    label=\"السلعة\"\r\n                    value={formik.values.SubIndicatorId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.SubIndicatorId &&\r\n                      Boolean(formik.errors.SubIndicatorId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.SubIndicatorId &&\r\n                      formik.errors.SubIndicatorId\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>السلعة</MenuItem>\r\n                    {SubIndicatorId.map((option) => (\r\n                      <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Button\r\n                    className=\"p-3 my-2 \"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"var(--main-green)\",\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    بحث\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n            {!noSearchResult && <PortPricesResult resultData={searchResult} />}\r\n            {loading === true && noSearchResult ? (\r\n              <div className=\"w-100 d-flex justify-content-center m-5\">\r\n                <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n              </div>\r\n            ) : null}\r\n            {!fetched && loading == false && (\r\n              <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PortItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Event\\Event-item.js",["339","340"],"import React, { useState, useEffect } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport CustomSlider from \"../../UI/Custom-slider\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport \"../News/News-item.css\";\r\nconst EventItem = (props) => {\r\n  // const eventItem = props.location.state.eventItem;\r\n\r\n  //get data from Link state\r\n  const eventItemLinkState = props.location.state\r\n    ? props.location.state.eventItem\r\n    : undefined;\r\n\r\n  //get news item id from url\r\n  const eventItemId = parseInt(props.match.params.EventId);\r\n  //\r\n  // const [news, setNews] = useState([]);\r\n  const [eventItem, setEventItem] = useState({});\r\n\r\n  const getEvents = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/event\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      response.data.map((eventItem) => {\r\n        if (eventItem.id === eventItemId) {\r\n          setEventItem(eventItem);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEvents();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {eventItemLinkState ? (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItemLinkState.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItemLinkState.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemLinkState.id}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {moment(eventItemLinkState.publishDate)\r\n                    .locale(\"ar\")\r\n                    .format(\"LL\")}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{parse(eventItemLinkState.contentA)}</Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <h4 className=\"my-4\" style={{ color: \"var(--main-green)\" }}>\r\n                {eventItem.titleA}\r\n              </h4>\r\n              <h3 className=\"my-4\">{eventItem.titleE}</h3>\r\n\r\n              <div className=\"carrousel_wrapper news-item-slider px-0\">\r\n                <CustomSlider\r\n                  objectname={\"Event\"}\r\n                  objectid={eventItemId}\r\n                  mainPhoto={`${paths.EventPhotos}${eventItem.id}/${eventItem.photoA}`}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-between my-3\">\r\n              <div>\r\n                <TodayIcon />\r\n                <strong className=\"mx-2\" style={{ color: \"var(--main-green)\" }}>\r\n                  {eventItem.publishDate}\r\n                </strong>\r\n              </div>\r\n              <div>\r\n                <ShareIcon />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"my-3\">{eventItem.contentA}</Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventItem;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Local-prices.js",["341"],"import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { axios } from \"../Axios/Axios\";\r\n\r\nimport \"./LocalPrices.css\";\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../slick-carousel/Arrows\";\r\nimport GeneralIndicatorTabs from \"./General-indicator-tabs\";\r\n\r\nconst LocalPrices = (props) => {\r\n  const [generalIndicators, setGeneralIndicators] = useState([]);\r\n  const [generalIndicatorData, setGeneralIndicatorData] = useState();\r\n  const [currentGeneralIndicator, setCurrentGeneralIndicator] = useState();\r\n\r\n  const noGeneralIndicators =\r\n    !generalIndicators || (generalIndicators && generalIndicators.length === 0); //check if no news\r\n\r\n  //get indicatorId from show more btn in home page\r\n  // let indicatorId = parseInt(props.location.state.indicatorId);\r\n\r\n  const getGeneralIndicators = async () => {\r\n    //fetch generalIndicators data\r\n    const response = await axios\r\n      .get(\"/PricesData/GetGeneralIndicators\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGeneralIndicators(response.data); // set generalIndicators data to state\r\n      getGeneralIndicatorData(response.data[0].id); // set GeneralIndicatorData on component mount\r\n    }\r\n  };\r\n\r\n  const getGeneralIndicatorData = async (id) => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetGeneralIndicatorAllData/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n    if (response && response.data) {\r\n      setGeneralIndicatorData(response.data); // set FocusedGeneralIndicator data to state\r\n      setCurrentGeneralIndicator(id);\r\n    }\r\n  };\r\n  const handleGeneralIndicatorSelect = (id) => {\r\n    getGeneralIndicatorData(id); // set GeneralIndicatorData on select lable\r\n    setCurrentGeneralIndicator(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGeneralIndicators();\r\n  }, []);\r\n\r\n  // Slider Settings\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"my-4 local-prices\">\r\n      <Row>\r\n        <Col xs={12}>\r\n          <h5 style={{ color: \"var(--main-green)\" }}>المجموعات السلعية</h5>\r\n        </Col>\r\n        <Col xs={12} className=\"my-4\">\r\n          <Slider {...settings}>\r\n            {!noGeneralIndicators &&\r\n              generalIndicators.map((Item, idx) => {\r\n                return (\r\n                  <div key={Item.id}>\r\n                    <div\r\n                      className={`p-2 mx-2 lable ${\r\n                        Item.id === currentGeneralIndicator ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleGeneralIndicatorSelect(Item.id)}\r\n                    >\r\n                      <h6 className=\"text-center my-1\">{Item.nameA}</h6>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </Slider>\r\n        </Col>\r\n        <Col xs={12}>\r\n          <GeneralIndicatorTabs generalIndicatorData={generalIndicatorData} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LocalPrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-list.js",["342","343"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport { paths } from \"../../Paths/Pathes\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport mainBg from \"../../../assets/images/png/panner.png\";\r\n\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst PortList = (Props) => {\r\n  const [Ports, setPorts] = useState([]);\r\n  const [Governorate, setGovernorate] = useState([]);\r\n  const [portType, setPortType] = useState([]);\r\n  const [governorateSelectedVal, setGovernorateSelectedVal] = useState(0);\r\n  const [portTypeSelectedVal, setportTypeSelectedVal] = useState(0);\r\n  // const [portsURL, setPortsURL] = useState(\r\n  //   `Ports/Port?PortEntityId=${Props.location.state.EntityId}&GovId=${governorateSelectedVal}&PortTypeId=${portTypeSelectedVal}`\r\n  // );\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(Ports.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const noPorts = !Ports || (Ports && Ports.length === 0); //check if no Ports\r\n\r\n  let portsURL = `Ports/Port?PortEntityId=${Props.location.state.EntityId}&GovId=${governorateSelectedVal}&PortTypeId=${portTypeSelectedVal}`;\r\n  const getPorts = async () => {\r\n    setLoading(true);\r\n    //fetch Ports data\r\n    console.log(portsURL);\r\n    const response = await axios\r\n      .get(portsURL)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    setLoading(false);\r\n    if (response && response.data) {\r\n      console.log(response.data);\r\n      setPorts(response.data);\r\n    }\r\n  };\r\n\r\n  const GetGovernorate = async () => {\r\n    const response = await axios\r\n      .get(\"Home/Governorate\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGovernorate(response.data);\r\n    }\r\n  };\r\n\r\n  const GetPortType = async () => {\r\n    const response = await axios\r\n      .get(\"Ports/PortType\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setPortType(response.data);\r\n    }\r\n  };\r\n\r\n  const GovHandleChanges = (event) => {\r\n    setGovernorateSelectedVal(event.target.value);\r\n  };\r\n\r\n  const PortTypeHandleChanges = (event) => {\r\n    setportTypeSelectedVal(event.target.value);\r\n    console.log(event.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPorts();\r\n    GetGovernorate();\r\n    GetPortType();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPorts();\r\n  }, [portTypeSelectedVal, governorateSelectedVal, portsURL]);\r\n\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={\r\n        !noPorts\r\n          ? {\r\n              backgroundImage: `url(${mainBg})`,\r\n              backgroundPosition: \"right top\",\r\n              backgroundSize: \"cover\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <Container>\r\n        <Row className=\"mt-4 \">\r\n          <Col md={6} className=\"align-items-center col-md-6 d-flex px-0\">\r\n            <span\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                color: \"#80B741\",\r\n                padding: 12,\r\n              }}\r\n            >\r\n              <FlagIcon style={{ fontSize: 30 }} />\r\n            </span>\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GovernorateId\"\r\n              select\r\n              label=\"المحافظة\"\r\n              value={governorateSelectedVal}\r\n              onChange={GovHandleChanges}\r\n            >\r\n              <MenuItem value={0}>المحافظة</MenuItem>\r\n              {Governorate.map((item, idx) => {\r\n                return (\r\n                  <MenuItem key={idx} value={item.id}>\r\n                    {item.nameA}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n          </Col>\r\n\r\n          <Col md={6} className=\"align-items-center col-md-6 d-flex px-0\">\r\n            <span\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                color: \"#80B741\",\r\n                padding: 12,\r\n              }}\r\n            >\r\n              <CategoryIcon style={{ fontSize: 30 }} />\r\n            </span>\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"PortTypeId\"\r\n              value={portTypeSelectedVal}\r\n              select\r\n              label=\"نوع المنفذ\"\r\n              onChange={PortTypeHandleChanges}\r\n            >\r\n              <MenuItem value={0}>نوع المنفذ</MenuItem>\r\n              {portType.map((item, idx) => {\r\n                return (\r\n                  <MenuItem key={idx} value={item.id}>\r\n                    {item.nameA}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          {!noPorts &&\r\n            Ports.slice(offset, offset + PER_PAGE).map((PortItem, idx) => {\r\n              return (\r\n                <Col\r\n                  key={idx}\r\n                  className=\"p-3 m-3 border\"\r\n                  style={{ backgroundColor: \"#fff\", borderRadius: \"8px\" }}\r\n                  md={12}\r\n                >\r\n                  <Link\r\n                    to={{\r\n                      pathname: `${url}/${PortItem.id}`,\r\n                      state: {\r\n                        PortItem,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col md={3} className=\"h-100\">\r\n                        <img\r\n                          src={`${paths.OutletPhotos}${Props.location.state.EntityId}/${Props.location.state.Entitylogo}`}\r\n                          className=\"p-0\"\r\n                          alt=\"\"\r\n                          style={{ width: 200, height: 200 }}\r\n                        />\r\n                      </Col>\r\n                      <Col\r\n                        md={9}\r\n                        className=\"d-flex flex-column justify-content-between  h-100\"\r\n                      >\r\n                        <div>\r\n                          <h3 style={{ color: \"var(--main-green)\" }}>\r\n                            {PortItem.nameA}\r\n                          </h3>\r\n                          <p>\r\n                            {\" \"}\r\n                            <FlagIcon\r\n                              style={{ fontSize: 30, color: \"#80B741\" }}\r\n                            />{\" \"}\r\n                            {PortItem.governorateName}{\" \"}\r\n                          </p>\r\n                          <p>\r\n                            {\" \"}\r\n                            <LocationOnIcon\r\n                              style={{ fontSize: 30, color: \"#80B741\" }}\r\n                            />{\" \"}\r\n                            {PortItem.address}{\" \"}\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          {!noPorts && (\r\n            <Col xs={12}>\r\n              <ReactPaginate\r\n                previousLabel={\"→ السابق\"}\r\n                nextLabel={\"التالى ←\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </Col>\r\n          )}\r\n\r\n          {loading === true && noPorts && (\r\n            <div className=\"w-100 d-flex justify-content-center m-5\">\r\n              <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n            </div>\r\n          )}\r\n          {loading === false && noPorts && (\r\n            <h2 className=\"w-100 text-center p-4\"> لا توجد منافذ</h2>\r\n          )}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PortList;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\SubIndicatorInfo.js",["344","345","346","347","348","349","350","351","352","353","354"],"import React from \"react\";\r\nimport {useState,useEffect} from 'react'\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport  \"./LocalPrices.css\";\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport imagePath from \"../../assets/images/png/Path937.png\";\r\nimport imagePath1 from \"../../assets/images/png/Path942.png\";\r\nimport icommodityGroup from \"../../assets/images/png/product.png\";\r\nimport { axios } from \"../Axios/Axios\";\r\nimport * as moment from \"moment\";\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis,Tooltip,Legend ,ResponsiveContainer} from 'recharts';\r\n\r\n\r\nconst SubIndicatorInfo =(props) =>{\r\n    const [SubIndicatorInformation,setSubIndicatorInformation] = useState({});\r\n\r\n    const GetSubIndicator = async () => {\r\n        //fetch Events data\r\n        const url = `/Prices/GetSubIndicatorInfo/${props.match.params.Id}`;\r\n        const response = await axios\r\n        .get(url)\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors\r\n        if (response && response.data) {\r\n            console.log(response.data);\r\n            setSubIndicatorInformation(response.data);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        GetSubIndicator();\r\n    }, []);\r\n    \r\n    return(\r\n        <>\r\n        { SubIndicatorInformation.subIndicatorName != \"\" &&\r\n            <>\r\n                <Row style={{ marginTop:20, padding:10, margin:0}}>\r\n                    <Col md={6}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <ShoppingCartIcon style={{ fontSize: 30, color: \"#80B741\" }} />\r\n                                        <p>المجموعة السلعية : <span> {SubIndicatorInformation.generalIndicatorName} </span></p>\r\n                                        <p>السلعة : <span>{SubIndicatorInformation.subIndicatorName}</span></p>\r\n                                        <p>الوحدة : <span>{SubIndicatorInformation.unitName}</span></p>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 text-center\">\r\n                                        <p className=\"text-center\">متوسط البيع فى المحافظات</p>\r\n                                        <h3 className=\"text-center\">{SubIndicatorInformation.avgPrice}</h3>\r\n                                        <p className=\"text-center\">{SubIndicatorInformation.currencyName} / {SubIndicatorInformation.unitName}</p>\r\n                                        <div className=\"text-center my-2 MinVal GovVal\">\r\n                                            <span> أقل سعر {SubIndicatorInformation.minPrice} </span><span>{SubIndicatorInformation.minGovs}</span>\r\n                                        </div>\r\n                                        <div className=\"text-center my-2 MaxVal GovVal\">\r\n                                            <span> أعلى سعر {SubIndicatorInformation.minPrice} </span><span>{SubIndicatorInformation.minGovs}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <div className=\"card\" >\r\n                            <div className=\"card-body\" style={{ padding:0, paddingTop:10}}>\r\n                                <p className=\"text-center\">أسواق الجملة</p>\r\n                                <h2 className=\"text-center\"> {SubIndicatorInformation.wholesaleAvg == 0 ? \"لا يوجد\" : SubIndicatorInformation.wholesaleAvg} </h2>\r\n                                <p className=\"text-center\"> {SubIndicatorInformation.wholeSaleCurrency} {SubIndicatorInformation.wholesaleAvg != 0 ? \"/\" :\"\"} {SubIndicatorInformation.wholeSaleUnit}</p>\r\n\r\n                                <div>\r\n                                    <img src={imagePath} style={{ width:\"100%\"}}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\" style={{ padding:0, paddingTop:10}}>\r\n                                <p className=\"text-center\">المنافذ</p>\r\n                                <h2 className=\"text-center\"> {SubIndicatorInformation.portAvg == 0 ? \"لا يوجد\" : SubIndicatorInformation.portAvg} </h2>\r\n                                <p className=\"text-center\">{ SubIndicatorInformation.portCurrency} {SubIndicatorInformation.portAvg != 0 ? \"/\" :\"\"} {SubIndicatorInformation.portUnit}</p>\r\n\r\n                                <div>\r\n                                    <img src={imagePath1} style={{ width:\"100%\"}}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ marginTop:20, padding:10, margin:0}}>\r\n                    <Col md={3} style={{ textAlign: \"-webkit-center\"}}>\r\n                        <div className=\"text-center\"  style={{\r\n                                borderRadius: \"6px\",\r\n                                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                                color: \"#80B741\",\r\n                                padding: 12,\r\n                                width:\"20%\",\r\n                                marginTop:10,\r\n                                marginBottom:10\r\n                            }}>\r\n                           <img src={icommodityGroup}/>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"text-center\">الوحدة : <span>{SubIndicatorInformation.unitName}</span></p>\r\n                            <p className=\"text-center\">المصدر : متوسط أسعار المحافظات</p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead  style={{ backgroundColor:\"#54A646\" ,color:\"#FFF\" }}>\r\n                                <tr className=\"text-center\">\r\n                                    <th>التاريخ</th>\r\n                                    <th>أدنى سعر </th>\r\n                                    <th>أعلى سعر</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {SubIndicatorInformation.weekDatas && SubIndicatorInformation.weekDatas.map((item, idx) =>(\r\n                                    <tr>\r\n                                        <td className=\"text-center\"> {moment(item.insertionDate).format(\"LL\")}</td>\r\n                                        <td className=\"text-center\">\r\n                                            {item.minPrice}\r\n                                            <div className=\"text-center my-2\">\r\n                                                <span className=\"MinVal GovVal\">{item.minGovs}</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"text-center\">\r\n                                            {item.maxPrice}\r\n                                            <div className=\"text-center my-2\">\r\n                                                <span className=\"MaxVal GovVal\">{item.maxGovs}</span>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr> \r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ marginTop:20, padding:10, margin:0}}>\r\n                    <Col md={12}>\r\n                        {\r\n                            SubIndicatorInformation.governoratesData && \r\n                            <ResponsiveContainer width=\"100%\" height={400}>\r\n                                 <LineChart data={SubIndicatorInformation.governoratesData}\r\n                                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"govNameA\" />\r\n                                    <YAxis name=\"السعر\" />\r\n                                    <Tooltip />\r\n                                    <Legend verticalAlign=\"top\" height={36}/>\r\n                                    <Line type=\"monotone\" dataKey=\"avg\" name=\"متوسط السعر\" stroke=\"#8884d8\" />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                           \r\n                        }\r\n                    \r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SubIndicatorInfo;","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Search-form.js",["355","356","357","358"],"import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\n\r\nimport icommodityGroup from \"../../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../../assets/images/png/flag.png\";\r\n\r\nconst SearchForm = () => {\r\n  //\r\n  const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    // ContactTypeId: yup.number.required(\"ContactType is required\"),\r\n    commodityGroup: yup\r\n      .string(\"أختر المجموعة السلعية\")\r\n      .required(\"أختر المجموعة السلعية \"),\r\n    commodity: yup.string(\"أختر السلعة\").required(\"أختر السلعة\"),\r\n    city: yup.string(\"أختر المدينة\").required(\"أختر المدينة\"),\r\n  });\r\n\r\n  //   const [commodityGroup, setCommodityGroup] = useState([]);\r\n\r\n  //   const getCommodityGroup = async () => {\r\n  //     //fetch ContactTypes data\r\n  //     const response = await axios\r\n  //       .get(\"/commodityGroup\")\r\n  //       .catch((err) => console.log(\"Error\", err)); //handle errors\r\n  //     if (response && response.data) {\r\n  //         getCommodityGroup(response.data); // set commodityGroup data to state\r\n  //     }\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     getCommodityGroup();\r\n  //   }, []);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      commodityGroup: \"\",\r\n      commodity: \"\",\r\n      city: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      const response = await axios\r\n        // .post(\"/ContactUs\", values)\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        alert(\"sucess!\");\r\n        console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [value, setValue] = React.useState(\"retail\");\r\n  const handleRadioChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"justify-content-center border-bottom py-5\"\r\n      style={{ backgroundColor: \"var(--main-gray)\" }}\r\n    >\r\n      {console.log(value)}\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <RadioGroup\r\n                className=\"mb-4\"\r\n                aria-label=\"market\"\r\n                name=\"market\"\r\n                value={value}\r\n                onChange={handleRadioChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"retail\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق التجزئة\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"wholesale\"\r\n                  control={<Radio style={{ color: \"var(--main-green)\" }} />}\r\n                  label=\"اسواق الجملة\"\r\n                />\r\n              </RadioGroup>\r\n              <Row>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={icommodityGroup}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المجموعة السلعية\"\r\n                    select\r\n                    label=\"المجموعة السلعية\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={wheatBag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"السلعة\"\r\n                    select\r\n                    label=\"السلعة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col className=\"px-0\">\r\n                  <img\r\n                    className=\"p-1\"\r\n                    src={flag}\r\n                    alt=\"icon_1\"\r\n                    style={{\r\n                      borderRadius: \"6px\",\r\n                      boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    style={{ width: \"200px\" }}\r\n                    className=\"px-2 my-2\"\r\n                    variant=\"outlined\"\r\n                    name=\"ContactTypeId\"\r\n                    id=\"المحافظة\"\r\n                    select\r\n                    label=\"المحافظة\"\r\n                    value={formik.values.ContactTypeId}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.ContactTypeId &&\r\n                      Boolean(formik.errors.ContactTypeId)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.ContactTypeId &&\r\n                      formik.errors.ContactTypeId\r\n                    }\r\n                  >\r\n                    {/* {contactType.map((option) => (\r\n                        <MenuItem key={option.id} value={option.id}>\r\n                        {option.name}\r\n                        </MenuItem>\r\n                    ))} */}\r\n                  </TextField>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\"p-3 my-2 \"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"var(--main-green)\",\r\n                      width: \"200px\",\r\n                    }}\r\n                  >\r\n                    إرسال\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\SiteServices.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News-carrousel.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\HeadBar.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-card.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Retail-prices.js",["359","360","361","362"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\n\r\nimport icommodityGroup from \"../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport RetailPricesResult from \"./RetailPrices-result\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { saveSearchRes } from \"../../store/actions/locSearchRes\";\r\n\r\nconst RetailPrices = (props) => {\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [governorates, setGovernorate] = useState([]);\r\n  const [subIndicator, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [SelectedGov, setSelectedGov] = useState(0);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const searchData = props.savedSearchRes.LocSearchRes.searchData;\r\n\r\n  const noSearchResult = !searchData || (searchData && searchData.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n      setGovernorate(response.data.governorates);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setSubIndicator(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //getPopulate();\r\n    props.saveRes(searchResult);\r\n  }, [searchResult]);\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n    console.log(props.savedSearchRes.LocSearchRes.searchData);\r\n    setSearchResult(props.savedSearchRes.LocSearchRes.searchData);\r\n  }, []);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  // Schema for yup\r\n  const validationSchema = yup.object({\r\n    GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      GeneralIndicatorId: 0,\r\n      GovernorateId: 0,\r\n      subIndicatorId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      setSelectedGov(values.GovernorateId);\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n      props.saveRes(searchResult);\r\n\r\n      const response = await axios\r\n        .post(\"/Prices/Retail\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        //alert(\"sucess!\");\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ paddingRight: 30 }}>\r\n      {console.log(props)}\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={icommodityGroup}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GeneralIndicatorId\"\r\n              id=\"المجموعة السلعية\"\r\n              select\r\n              label=\"المجموعة السلعية\"\r\n              value={formik.values.GeneralIndicatorId}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                handleGenralIndicatorsChange(e);\r\n              }}\r\n              error={\r\n                formik.touched.GeneralIndicatorId &&\r\n                Boolean(formik.errors.GeneralIndicatorId)\r\n              }\r\n              helperText={\r\n                formik.touched.GeneralIndicatorId &&\r\n                formik.errors.GeneralIndicatorId\r\n              }\r\n            >\r\n              <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n              {genralIndicators.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={wheatBag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"subIndicatorId\"\r\n              id=\"السلعة\"\r\n              select\r\n              label=\"السلعة\"\r\n              value={formik.values.subIndicatorId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.subIndicator &&\r\n                Boolean(formik.errors.subIndicator)\r\n              }\r\n              helperText={\r\n                formik.touched.subIndicator && formik.errors.subIndicator\r\n              }\r\n            >\r\n              <MenuItem value={0}>السلعة</MenuItem>\r\n              {subIndicator.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={flag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GovernorateId\"\r\n              id=\"المحافظة\"\r\n              select\r\n              label=\"المحافظة\"\r\n              value={formik.values.GovernorateId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.governorates &&\r\n                Boolean(formik.errors.governorates)\r\n              }\r\n              helperText={\r\n                formik.touched.governorates && formik.errors.governorates\r\n              }\r\n            >\r\n              <MenuItem value={0}>المحافظة</MenuItem>\r\n              {governorates.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\"p-3 my-2 \"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                color: \"#fff\",\r\n                backgroundColor: \"var(--main-green)\",\r\n                width: \"200px\",\r\n              }}\r\n            >\r\n              بحث\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n      {!noSearchResult && (\r\n        <RetailPricesResult GovId={SelectedGov} resultData={searchData} />\r\n      )}\r\n      {loading === true && noSearchResult ? (\r\n        <div className=\"w-100 d-flex justify-content-center m-5\">\r\n          <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n        </div>\r\n      ) : null}\r\n      {!fetched && loading == false && (\r\n        <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    savedSearchRes: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveRes: (res) => {\r\n      dispatch(saveSearchRes(res));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RetailPrices);\r\n",["363","364"],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\Wholesale-prices.js",["365","366"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport icommodityGroup from \"../../assets/images/png/product.png\";\r\nimport wheatBag from \"../../assets/images/png/Wheat Bag.png\";\r\nimport flag from \"../../assets/images/png/flag.png\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport WholesalePricesResult from \"./WholesalePrices-Result\";\r\n\r\nconst WholesalePrices = () => {\r\n  const [genralIndicators, setGenralIndicators] = useState([]);\r\n  const [Market, setMarket] = useState([]);\r\n  const [subIndicator, setSubIndicator] = useState([]);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  const [fetched, setFeched] = useState(true);\r\n\r\n  const noSearchResult =\r\n    !searchResult || (searchResult && searchResult.length === 0); //check if no searchResult\r\n\r\n  const getPopulate = async () => {\r\n    const response = await axios\r\n      .get(\"/home/PopulateDropDowns\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGenralIndicators(response.data.genralIndicators);\r\n      setMarket(response.data.wholesaleMarket);\r\n    }\r\n  };\r\n\r\n  const getSubindicator = async (id) => {\r\n    //setLoading(!loading);\r\n    const response = await axios\r\n      .get(`/home/SubIndicator/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      //setLoading(!loading);\r\n      setSubIndicator(response.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPopulate();\r\n  }, []);\r\n\r\n  const handleGenralIndicatorsChange = (e) => {\r\n    getSubindicator(e.target.value);\r\n  };\r\n\r\n  const validationSchema = yup.object({\r\n    GeneralIndicatorId: yup.mixed().notOneOf([0], \"أختر المجموعة السلعية\"),\r\n    MarketId: yup.mixed().notOneOf([0], \"أختر السوق \"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      GeneralIndicatorId: 0,\r\n      SubIndicatorId: 0,\r\n      MarketId: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      setLoading(true);\r\n      setSearchResult([]);\r\n      //alert(JSON.stringify(values, null, 2));\r\n      const response = await axios\r\n        .post(\"/Prices/Wholesale\", JSON.stringify(values, null, 2))\r\n        .catch((err) => console.log(\"Error\", err)); //handle errors;\r\n      if (response) {\r\n        //alert(\"sucess!\");\r\n        setLoading(false);\r\n        setSearchResult(response.data);\r\n        if (response.data.length > 0) {\r\n          setFeched(true);\r\n        } else {\r\n          setFeched(false);\r\n        }\r\n        //console.log(response);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ paddingRight: 30 }}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={icommodityGroup}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"GeneralIndicatorId\"\r\n              id=\"المجموعة السلعية\"\r\n              select\r\n              label=\"المجموعة السلعية\"\r\n              value={formik.values.GeneralIndicatorId}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                handleGenralIndicatorsChange(e);\r\n              }}\r\n              error={\r\n                formik.touched.GeneralIndicatorId &&\r\n                Boolean(formik.errors.GeneralIndicatorId)\r\n              }\r\n              helperText={\r\n                formik.touched.GeneralIndicatorId &&\r\n                formik.errors.GeneralIndicatorId\r\n              }\r\n            >\r\n              <MenuItem value={0}>المجموعة السلعية</MenuItem>\r\n              {genralIndicators.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={wheatBag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"SubIndicatorId\"\r\n              id=\"السلعة\"\r\n              select\r\n              label=\"السلعة\"\r\n              value={formik.values.SubIndicatorId}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.SubIndicator &&\r\n                Boolean(formik.errors.SubIndicator)\r\n              }\r\n              helperText={\r\n                formik.touched.subIndicator && formik.errors.subIndicator\r\n              }\r\n            >\r\n              <MenuItem value={0}>السلعة</MenuItem>\r\n              {subIndicator.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col className=\"px-0\">\r\n            <img\r\n              className=\"p-1\"\r\n              src={flag}\r\n              alt=\"icon_1\"\r\n              style={{\r\n                borderRadius: \"6px\",\r\n                boxShadow: \"10px 10px 5px 0px rgba(179, 179, 179, 0.36)\",\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"200px\" }}\r\n              className=\"px-2 my-2\"\r\n              variant=\"outlined\"\r\n              name=\"MarketId\"\r\n              id=\"Market\"\r\n              select\r\n              label=\"السوق\"\r\n              value={formik.values.MarketId}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.MarketId && Boolean(formik.errors.MarketId)}\r\n              helperText={formik.touched.MarketId && formik.errors.MarketId}\r\n            >\r\n              <MenuItem value={0}>السوق</MenuItem>\r\n              {Market.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\"p-3 my-2 \"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{\r\n                color: \"#fff\",\r\n                backgroundColor: \"var(--main-green)\",\r\n                width: \"200px\",\r\n              }}\r\n            >\r\n              بحث\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n      {!noSearchResult && fetched && (\r\n        <WholesalePricesResult resultData={searchResult} />\r\n      )}\r\n      {loading === true && noSearchResult ? (\r\n        <div className=\"w-100 d-flex justify-content-center m-5\">\r\n          <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n        </div>\r\n      ) : null}\r\n      {!fetched && loading == false && (\r\n        <h2 className=\"w-100 text-center p-4\"> لا توجد نتائج</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WholesalePrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions-form.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Paths\\Pathes.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Axios\\Axios.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\WholesalePrices-Result.js",["367","368","369"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst WholesalePricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table table-bordered table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> السلعة </TableCell>\r\n            <TableCell className=\"text-center\"> السعر </TableCell>\r\n            <TableCell className=\"text-center\"> العبوة </TableCell>\r\n            <TableCell className=\"text-center\"> الوحدة </TableCell>\r\n            <TableCell className=\"text-center\"> العملة </TableCell>\r\n            <TableCell className=\"text-center\"> النوع </TableCell>\r\n            <TableCell className=\"text-center\"> الحجم </TableCell>\r\n            <TableCell className=\"text-center\"> التاريخ </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                {item.subindictorName}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.price}</TableCell>\r\n              <TableCell className=\"text-center\">{item.packaging_A}</TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">{item.variaty_A}</TableCell>\r\n              <TableCell className=\"text-center\">{item.volume_A}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default WholesalePricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\slick-carousel\\Arrows.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\RetailPrices-result.js",["370","371","372","373","374","375","376"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst RetailPricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={\r\n          (classes.table, \"table table-bordered table-responsive local_prices\")\r\n        }\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              النوع{\" \"}\r\n            </TableCell>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              الوحدة{\" \"}\r\n            </TableCell>\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              العملة{\" \"}\r\n            </TableCell>\r\n            {props.GovId == 0 && (\r\n              <TableCell colSpan={2} className=\"text-center\">\r\n                {\" \"}\r\n                أسعار السلع على مستوى الجمهورية{\" \"}\r\n              </TableCell>\r\n            )}\r\n            {props.GovId != 0 && (\r\n              <TableCell colSpan={2} className=\"text-center\">\r\n                {\" \"}\r\n                أسعار السلع فى المحافظات{\" \"}\r\n              </TableCell>\r\n            )}\r\n            <TableCell rowSpan={2} className=\"text-center\">\r\n              {\" \"}\r\n              التاريخ{\" \"}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> أدنى سعر </TableCell>\r\n            <TableCell className=\"text-center\"> أعلى سعر </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {/* {console.log(props.resultData)} */}\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/local-prices/SubIndicatorInfo/${item.subindicatorId}`,\r\n                    state: {\r\n                      id: item.subindicatorId,\r\n                    },\r\n                  }}\r\n                >\r\n                  {item.subindictorName}\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {item.minValue}{\" \"}\r\n                {props.GovId == 0 && (\r\n                  <div className=\"text-center my-2\">\r\n                    <span className=\"MaxVal GovVal\">{item.govMin}</span>\r\n                  </div>\r\n                )}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {item.maxValue}{\" \"}\r\n                {props.GovId == 0 && (\r\n                  <div className=\"text-center my-2\">\r\n                    <span className=\"MinVal GovVal\">{item.govMax}</span>\r\n                  </div>\r\n                )}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default RetailPricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\UI\\Custom-slider.js",["377","378","379","380"],"import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { axios } from \"../Axios/Axios\";\r\nimport { paths } from \"../Paths/Pathes\";\r\n\r\nimport { SampleNextArrow, SamplePrevArrow } from \"../slick-carousel/Arrows\";\r\n\r\nconst CustomSlider = (Props) => {\r\n  const [images, setImgaes] = useState([]);\r\n  const [noImages, setNoImgaes] = useState({});\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  //   const IMAGES = [];\r\n  const GetImages = async () => {\r\n    var url = `PhotoLibrary/GetPhotos?objectName=${Props.objectname}&objectId=${Props.objectid}`;\r\n\r\n    var response = await axios\r\n      .get(url)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n\r\n    if (response && response.data) {\r\n      setImgaes(response.data); // set Images data to state\r\n      setNoImgaes(false);\r\n    } else {\r\n      setNoImgaes(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetImages();\r\n  }, []);\r\n\r\n  const settings = {\r\n    className: \"center\",\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    centerMode: true,\r\n    infinite: true,\r\n    // autoplay: true,\r\n    // centerPadding: \"400px\",\r\n    slidesToShow: 1,\r\n    speed: 500,\r\n    rtl: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {images.length === 0 && (\r\n        <div>\r\n          <img src={Props.mainPhoto} className=\"img-fluid\" alt=\"\" />\r\n        </div>\r\n      )}\r\n      <Slider {...settings}>\r\n        {!noImages &&\r\n          images.map((image, idx) => {\r\n            return (\r\n              <div key={idx}>\r\n                <div\r\n                  className=\"carrousel_image\"\r\n                  style={{\r\n                    background: `url(${paths.PhotoLibraryAlbumPhoto}${image.photoLibraryAlbumID}/${image.photo})`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            );\r\n          })}\r\n      </Slider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSlider;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Port\\Port-price-result.js",["381","382","383"],"import React, { useState, useEffect } from \"react\";\r\n//import { Table } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst PortPricesResult = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.resultData.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table table-bordered table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> النوع </TableCell>\r\n            <TableCell className=\"text-center\"> الوحدة </TableCell>\r\n            <TableCell className=\"text-center\"> العملة </TableCell>\r\n            <TableCell className=\"text-center\">السعر</TableCell>\r\n            <TableCell className=\"text-center\"> التاريخ </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.resultData.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.resultData\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\">\r\n                {item.subindictorName}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">{item.unit}</TableCell>\r\n              <TableCell className=\"text-center\">{item.currency}</TableCell>\r\n              <TableCell className=\"text-center\">{item.price}</TableCell>\r\n              <TableCell className=\"text-center\">\r\n                {moment(item.insertionDate).format(\"LL\")}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.resultData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PortPricesResult;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\reducers\\index.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\reducers\\LocSearchRes.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\configure_store.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\store\\actions\\locSearchRes.js",["384"],"import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getSearchRes = (paylaod) => {\r\n  return {\r\n    type: actionTypes.SAVE_SEARCH_RES,\r\n    payload: paylaod,\r\n  };\r\n};\r\n\r\nexport const saveSearchRes = (param) => {\r\n  return (dispatch) => {\r\n    dispatch(getSearchRes(param));\r\n  };\r\n};\r\n\r\n// export const fetchCompanyInfo = ( param ) => {\r\n//     return dispatch => {\r\n//         dispatch(loadCompanyInfo());\r\n//         axios.get(CURRENT_URL+`${param}`)\r\n//         .then(response => {\r\n//             console.log(response.data.data)\r\n//             // console.log(response.data.response.success);\r\n//             if(!response.data.status) {\r\n//                 throw new Error(\"Sorry, you are not subscribe\");\r\n//             }\r\n//             localStorage.setItem('CID', response.data.data.cid);\r\n//             localStorage.setItem('companyName', response.data.data.Name);\r\n//             dispatch(companyInfoSuccess(param, response.data.data));\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(companyInfoFail(error))\r\n//         })\r\n//     }\r\n// }\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\News_docs-tabs.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\News-tab.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\News_docs\\Docs-tab.js",["385"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n// import parse from \"html-react-parser\";\r\n// import striptags from \"striptags\";\r\n// import TextTruncate from \"react-text-truncate\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport { paths } from \"../../../Paths/Pathes\";\r\n\r\nconst DocsTab = () => {\r\n  const [documentLibrary, setDocumentLibrary] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  const noDocumentLibrary =\r\n    !documentLibrary || (documentLibrary && documentLibrary.length === 0); //check if no Events\r\n\r\n  const getDocumentLibrary = async () => {\r\n    //fetch Events data\r\n    const response = await axios\r\n      .get(\"/DocumentLibrary\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setLoading(!loading);\r\n      setDocumentLibrary(response.data); // set Events data to state\r\n    }\r\n    setLoading(!loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocumentLibrary();\r\n  }, []);\r\n\r\n  return (\r\n    <Row className=\"px-2\">\r\n      {!noDocumentLibrary &&\r\n        documentLibrary.slice(0, 3).map((documentLibraryItem, idx) => {\r\n          return (\r\n            <Col md={4} key={idx}>\r\n              <div className=\"p-2\" style={{ backgroundColor: \"#fff\" }}>\r\n                <div\r\n                  style={{\r\n                    height: \"220px\",\r\n                    backgroundImage: `url(${paths.DocumentLibraryPhotos}${documentLibraryItem.id}/${documentLibraryItem.photoA})`,\r\n                    backgroundPosition: \"center\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                  }}\r\n                ></div>\r\n                <div className=\"m-3\">\r\n                  <h5\r\n                    style={{\r\n                      direction: \"rtl\",\r\n                    }}\r\n                    className=\"text-justify\"\r\n                  >\r\n                    {documentLibraryItem.titleA}\r\n                  </h5>\r\n                  <div\r\n                    style={{\r\n                      borderBottom: \"4px solid var(--main-green)\",\r\n                    }}\r\n                    className=\"my-3\"\r\n                  ></div>\r\n                  <div>\r\n                    {moment(documentLibraryItem.publishDate)\r\n                      .locale(\"ar\")\r\n                      .format(\"LL\")}\r\n                  </div>\r\n                  <a\r\n                    href={`${paths.DocumentLibrarAttachment}${documentLibraryItem.id}/${documentLibraryItem.attachmentA}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    download\r\n                  >\r\n                    <DescriptionIcon />\r\n                    <strong\r\n                      className=\"mx-2\"\r\n                      style={{ color: \"var(--main-green)\" }}\r\n                    >\r\n                      تحميل ملف مرفق\r\n                    </strong>\r\n                  </a>\r\n                  {/* <div>\r\n                  {console.log(striptags(newsItem.contentA))}\r\n                  <TextTruncate\r\n                    line={5}\r\n                    element=\"p\"\r\n                    truncateText=\"…\"\r\n                    text={`${striptags(newsItem.contentA)}`}\r\n                    textTruncateChild={<a href=\"#\">Read on</a>}\r\n                  />\r\n                </div> */}\r\n                </div>\r\n              </div>{\" \"}\r\n            </Col>\r\n          );\r\n        })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DocsTab;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Suggestions-form\\Suggestions.js",["386"],"import React from \"react\";\r\n\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport HeadBar from \"../../../UI/HeadBar\";\r\nimport SuggestionsForm from \"./Suggestions-form\";\r\n\r\n// import \"./Outlet.css\";\r\n\r\nconst Suggestions = () => {\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <Container fluid className={url === \"/\" ? \"px-0\" : \"\"}>\r\n      <Row className=\"justify-content-center py-5\">\r\n        {url === \"/\" ? (\r\n          <Col xs={12} className=\"mb-2\">\r\n            <h6 style={{ color: \"var(--main-green)\" }}>\r\n              <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n                اﻗﺘﺮاﺣﺎت و ﺷﻜﺎوى\r\n              </span>\r\n            </h6>\r\n          </Col>\r\n        ) : null}\r\n\r\n        <Container className=\"py-5\">\r\n          <Row>\r\n            <Col sm={12}>\r\n              <SuggestionsForm />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Partner\\Partner.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Outllets\\Outlets.js",["387"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport { paths } from \"../../../Paths/Pathes\";\r\n\r\nimport mainBg from \"../../../../assets/images/png/panner.png\";\r\n\r\nimport \"./Outlet.css\";\r\n\r\nconst Outlets = () => {\r\n  const settings = {\r\n    className: \"center\",\r\n    centerMode: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    slidesToScroll: 1,\r\n    dots: true,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          // backgroundColor: \"#ddd\",\r\n          borderRadius: \"10px\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <ul style={{ margin: \"0px\", textAlign: \"center\" }}> {dots} </ul>\r\n      </div>\r\n    ),\r\n    centerPadding: \"0px\",\r\n    slidesToShow: 1,\r\n    speed: 500,\r\n    rtl: true,\r\n  };\r\n  const [outlets, setOutlets] = useState([]);\r\n  const noOutlets = !outlets || (outlets && outlets.length === 0); //check if no news\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const PER_PAGE = 6;\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const pageCount = Math.ceil(outlets.length / PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n  ////////////////\r\n\r\n  const getOutlets = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/Ports/PortEntity\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setOutlets(response.data); // set news data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOutlets();\r\n  }, []);\r\n  let { url } = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      {url === \"/\" ? (\r\n        <div\r\n          className=\"justify-content-center pt-3 px-3 mb-2\"\r\n          style={{\r\n            backgroundColor: \"var(--secondary-gray)\",\r\n          }}\r\n        >\r\n          <div>\r\n            <h6 style={{ color: \"var(--main-green)\" }}>\r\n              <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n                المنافذ\r\n              </span>\r\n            </h6>\r\n          </div>\r\n\r\n          <div className=\"carrousel_wrapper outlet px-0\">\r\n            <Slider {...settings}>\r\n              {!noOutlets &&\r\n                outlets.map((outletItem, idx) => {\r\n                  return (\r\n                    <div\r\n                      key={idx}\r\n                      className=\"px-2 d-flex flex-column align-items-center\"\r\n                    >\r\n                      <Link\r\n                        className=\"d-flex flex-column justify-content-center align-items-center \"\r\n                        to={{\r\n                          pathname: \"/Ports/PortEntity\",\r\n                          state: {\r\n                            EntityId: outletItem.id,\r\n                            Entitylogo: outletItem.logo,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"carrousel_image \">\r\n                          <img\r\n                            src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                            className=\"img-fluid mx-auto\"\r\n                            alt={`${outletItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center\">{outletItem.nameA}</div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Container\r\n          fluid\r\n          style={\r\n            !noOutlets\r\n              ? {\r\n                  backgroundImage: `url(${mainBg})`,\r\n                  backgroundPosition: \"right top\",\r\n                  backgroundSize: \"cover\",\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          <Row>\r\n            {!noOutlets &&\r\n              outlets\r\n                .slice(offset, offset + PER_PAGE)\r\n                .map((outletItem, idx) => {\r\n                  return (\r\n                    <Col\r\n                      xs={12}\r\n                      md={6}\r\n                      lg={4}\r\n                      key={idx}\r\n                      className=\"p-5 outlets\"\r\n                    >\r\n                      <Link\r\n                        className=\"h-100 d-flex flex-column align-items-center justify-content-center\"\r\n                        // pass news item data throw props\r\n                        to={{\r\n                          pathname: \"/Ports/PortEntity\",\r\n                          state: {\r\n                            EntityId: outletItem.id,\r\n                            Entitylogo: outletItem.logo,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"carrousel_image\"\r\n                          style={{ border: \"5px solid var(--main-green)\" }}\r\n                        >\r\n                          <img\r\n                            src={`${paths.OutletPhotos}${outletItem.id}/${outletItem.logo}`}\r\n                            className=\"img-fluid\"\r\n                            alt={`${outletItem.logo}`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"carrousel_caption zoom_on_hover\">\r\n                          <div className=\"text-center text-dark\">\r\n                            {outletItem.nameA}\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </Col>\r\n                  );\r\n                })}\r\n            {!noOutlets && (\r\n              <Col xs={12}>\r\n                <ReactPaginate\r\n                  previousLabel={\"→ السابق\"}\r\n                  nextLabel={\"التالى ←\"}\r\n                  pageCount={pageCount}\r\n                  onPageChange={handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  previousLinkClassName={\"pagination__link\"}\r\n                  nextLinkClassName={\"pagination__link\"}\r\n                  disabledClassName={\"pagination__link--disabled\"}\r\n                  activeClassName={\"pagination__link--active\"}\r\n                />\r\n              </Col>\r\n            )}\r\n            {loading === true && noOutlets ? (\r\n              <div className=\"w-100 d-flex justify-content-center m-5\">\r\n                <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n              </div>\r\n            ) : null}\r\n            {loading === false && noOutlets ? (\r\n              <h2 className=\"w-100 text-center p-4\"> لا توجد أخبار</h2>\r\n            ) : null}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Outlets;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Related-website\\RelatedWebsite.js",["388","389","390","391"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HeadBar from \"../../../UI/HeadBar\";\r\n\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport { paths } from \"../../../Paths/Pathes\";\r\n\r\nconst RelatedWebsite = () => {\r\n  const [relatedWebsites, setRelatedWebsites] = useState([]);\r\n  const noRelatedWebsites =\r\n    !relatedWebsites || (relatedWebsites && relatedWebsites.length === 0); //check if no RelatedWebsites\r\n\r\n  const getRelatedWebsites = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/home/RelatedWebSite\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setRelatedWebsites(response.data); // set RelatedWebsites data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRelatedWebsites();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"border-right  justify-content-center pt-3 px-3 pb-5\"\r\n      style={{\r\n        borderWidth: \"3px\",\r\n      }}\r\n    >\r\n      <div>\r\n        <h6 style={{ color: \"var(--main-green)\" }}>\r\n          <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n            مواقع ذات صلة\r\n          </span>\r\n        </h6>\r\n      </div>\r\n      <div>\r\n        {!noRelatedWebsites &&\r\n          relatedWebsites.map((relatedWebsitesItem, idx) => {\r\n            return (\r\n              <Col key={idx} className=\"p-2\">\r\n                <a href={relatedWebsitesItem.url} target=\"_blank\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs={4}>\r\n                      <div\r\n                        className=\"d-flex  justify-content-center align-items-center \"\r\n                        style={{\r\n                          height: \"100px\",\r\n                          backgroundSize: \"cover\",\r\n                          backgroundColor: \"#fff\",\r\n                          borderBottom: \"2px solid var(--main-green)\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={`${paths.RelatedWebsitePhotos}${relatedWebsitesItem.id}/${relatedWebsitesItem.logo}`}\r\n                          className=\"img-fluid\"\r\n                          alt={`${relatedWebsitesItem.logo}`}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      xs={8}\r\n                      className=\"p-2 \"\r\n                      // style={{ fontSize: \".9rem\" }}\r\n                    >\r\n                      <p className=\"text-center\">{relatedWebsitesItem.nameA}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </a>\r\n              </Col>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedWebsite;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Contact-us\\ContactUs.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\GeneralIndicatorTabs.js",["392"],"import React, { useState, useEffect } from \"react\";\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\nimport GeneralIndicatorContent from \"./GeneralIndicatorContent\";\r\n// import AsyncSelect from 'react-select/async';\r\nimport Select from \"react-select\";\r\nimport MainIndicatorData from \"./MainIndicatorData\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GeneralIndicatorTabs = () => {\r\n  const [focusedGeneralIndicator, setFocusedGeneralIndicator] = useState([]);\r\n  // const [mainIndicators, setMainIndicators] = useState([]);\r\n  const [mainIndicatorData, setMainIndicatorData] = useState({});\r\n  const [mainIndicatorsOptions, setMainIndicatorsOptions] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState({});\r\n  const [generalIndicatorId, setGeneralIndicatorId] = useState(1);\r\n\r\n  const noFocusedGeneralIndicator =\r\n    !focusedGeneralIndicator ||\r\n    (focusedGeneralIndicator && focusedGeneralIndicator.length === 0); //check if no news\r\n\r\n  const getFocusedGeneralIndicator = async () => {\r\n    //fetch FocusedGeneralIndicator data\r\n    const response = await axios\r\n      .get(\"/PricesData/GetFocusedGeneralIndicatorWithData\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setFocusedGeneralIndicator(response.data); // set FocusedGeneralIndicator data to state\r\n      getMainIndicators(response.data[0].generalIndicatorId);\r\n    }\r\n  };\r\n  const getMainIndicators = async (id) => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicators/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      // setMainIndicators(response.data); // set MainIndicators data to state\r\n\r\n      const temp_mainIndicatorsOptions = [];\r\n      response.data.map((item) =>\r\n        temp_mainIndicatorsOptions.push({\r\n          value: item.id,\r\n          label: item.nameA,\r\n        })\r\n      );\r\n      setMainIndicatorsOptions(temp_mainIndicatorsOptions);\r\n      getMainIndicatorData(temp_mainIndicatorsOptions[0]);\r\n      setSelectedValue(temp_mainIndicatorsOptions[0]);\r\n    }\r\n  };\r\n\r\n  const getMainIndicatorData = async (obj) => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicatorData/${obj.value}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setMainIndicatorData(response.data); // set MainIndicatorData data to state\r\n      setSelectedValue(obj);\r\n    }\r\n  };\r\n\r\n  const getGeneralIndicatorId = (id) => {\r\n    setGeneralIndicatorId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFocusedGeneralIndicator();\r\n  }, []);\r\n\r\n  const handleTabSelect = async (id) => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicators/${id}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      // setMainIndicators(response.data); // set MainIndicators data to state\r\n      getMainIndicators(id);\r\n      getGeneralIndicatorId(id);\r\n    }\r\n  };\r\n\r\n  const tabs = () => {\r\n    if (!noFocusedGeneralIndicator) {\r\n      return (\r\n        <>\r\n          <Tabs\r\n            className=\"mt-4 flex-md-row flex-column\"\r\n            id=\"focusedGeneralIndicator\"\r\n            onSelect={(eventKey) => handleTabSelect(eventKey)}\r\n          >\r\n            {focusedGeneralIndicator.map((focusedGeneralIndicatorItem, idx) => {\r\n              return (\r\n                <Tab\r\n                  key={idx}\r\n                  defaultValue\r\n                  eventKey={focusedGeneralIndicatorItem.generalIndicatorId}\r\n                  title={focusedGeneralIndicatorItem.generalIndicatorname}\r\n                  className=\"py-2 border\"\r\n                  style={{\r\n                    backgroundColor: \"var(--secondary-gray)\",\r\n                  }}\r\n                >\r\n                  <GeneralIndicatorContent\r\n                    focusedGeneralIndicatorData={focusedGeneralIndicatorItem}\r\n                  />\r\n                </Tab>\r\n              );\r\n            })}\r\n          </Tabs>\r\n          {console.log(generalIndicatorId)}\r\n          <Col xs={12} className=\"mb-2\">\r\n            <Link\r\n              className=\"my-3 d-flex align-items-center justify-content-end\"\r\n              to={{\r\n                pathname: `/local-prices`,\r\n                state: {\r\n                  indicatorId: generalIndicatorId,\r\n                },\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: \"rgb(255, 50, 50)\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                إستعراض المزيد من السلع\r\n              </span>\r\n            </Link>\r\n          </Col>\r\n        </>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tabs()}\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Select\r\n          className=\"selectMainIndicatorsOption my-4\"\r\n          classNamePrefix=\"select\"\r\n          defaultValue={selectedValue.value}\r\n          value={selectedValue.value}\r\n          isDisabled={false}\r\n          isLoading={false}\r\n          isClearable={true}\r\n          isRtl={false}\r\n          isSearchable={true}\r\n          options={mainIndicatorsOptions}\r\n          placeholder={selectedValue.label}\r\n          onChange={(event) => getMainIndicatorData(event)}\r\n        />\r\n      </div>\r\n      {mainIndicatorData.AvgPrice !== 0 ? (\r\n        <MainIndicatorData mainIndicatorData={mainIndicatorData} />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralIndicatorTabs;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\GeneralIndicatorContent.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Ports-prices\\PortsPrices.js",["393","394"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport defualtPro from \"../../../../assets/images//product.png\";\r\n\r\nconst PortsPrices = () => {\r\n  const [portsPrices, setPortsPrices] = useState([]);\r\n  const noPortsPrices =\r\n    !portsPrices || (portsPrices && portsPrices.length === 0); //check if no portsPrices\r\n\r\n  const getPortsPrices = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/PricesData/GetPortData\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setPortsPrices(response.data); // set portsPrices data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPortsPrices();\r\n  }, []);\r\n\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <Row className=\"px-3 my-4\">\r\n      <Col xs={12} className=\"mb-2\">\r\n        <h6 style={{ color: \"var(--main-green)\" }}>\r\n          <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n            تعرف على أقل الأسعار فى المنافذ\r\n          </span>\r\n        </h6>\r\n      </Col>\r\n      <Col\r\n        xs={12}\r\n        style={{ border: \"1px solid var(--main-green)\", borderRadius: \"8px\" }}\r\n      >\r\n        <Row className=\"p-3\">\r\n          {!noPortsPrices &&\r\n            portsPrices.slice(0, 4).map((portsPricesItem, idx) => {\r\n              return (\r\n                <Col\r\n                  key={idx}\r\n                  sm={3}\r\n                  className=\"p-2 d-flex flex-column justify-content-center align-items-center\"\r\n                  style={{\r\n                    backgroundColor: \"#fff\",\r\n                    borderRight: `${\r\n                      idx > 0 ? \"4px solid var(--secondary-gray)\" : \"\"\r\n                    }`,\r\n                  }}\r\n                >\r\n                  <div style={{ width: \"120px\" }}>\r\n                    <img\r\n                      className=\"img-fluid\"\r\n                      src={!portsPricesItem.photo ? defualtPro : null}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-2\">{portsPricesItem.indicatorName}</div>\r\n                  <div className=\"py-2\">\r\n                    أقل سعر\r\n                    <span\r\n                      className=\"mr-2\"\r\n                      style={{ color: \"var(--main-green)\" }}\r\n                    >\r\n                      {portsPricesItem.minPrice}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"py-2\">{portsPricesItem.portEntityName}</div>\r\n                </Col>\r\n              );\r\n            })}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PortsPrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Global-prices\\GlobalPrices.js",["395"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport defualtPro from \"../../../../assets/images//product.png\";\r\n\r\nconst GlobalPrices = () => {\r\n  const [globalPrices, setGlobalPrices] = useState([]);\r\n  const noGlobalPrices =\r\n    !globalPrices || (globalPrices && globalPrices.length === 0); //check if no GlobalPrices\r\n\r\n  const getGlobalPrices = async () => {\r\n    //fetch news data\r\n    const response = await axios\r\n      .get(\"/PricesData/GetInternationalData\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setGlobalPrices(response.data); // set GlobalPrices data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGlobalPrices();\r\n  }, []);\r\n  return (\r\n    <Row className=\"px-3 my-4\">\r\n      <Col xs={12} className=\"mb-2\">\r\n        <h6 style={{ color: \"var(--main-green)\" }}>\r\n          <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n            السلع العالمية\r\n          </span>\r\n        </h6>\r\n      </Col>\r\n      {!noGlobalPrices &&\r\n        globalPrices.slice(0, 4).map((globalPricesItem, idx) => {\r\n          return (\r\n            <Col key={idx} md={3} sm={6}>\r\n              <div\r\n                style={{\r\n                  border: \"1px solid var(--main-green)\",\r\n                  borderRadius: \"8px\",\r\n                }}\r\n                className=\"p-2 m-1 d-flex flex-column justify-content-center align-items-center\"\r\n              >\r\n                <div\r\n                  className=\"py-2 text-center\"\r\n                  style={{ color: \"var(--main-green)\" }}\r\n                >\r\n                  متوسط السعر\r\n                  <div className=\"py-2 text-center\">\r\n                    <span className=\"ml-1 \">{globalPricesItem.avgPrice}</span>\r\n                    دولار\r\n                  </div>\r\n                </div>\r\n\r\n                <div style={{ width: \"120px\" }}>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src={!globalPricesItem.photo ? defualtPro : null}\r\n                  />\r\n                </div>\r\n                <div className=\"py-2 text-center\">\r\n                  {globalPricesItem.indicatorName}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          );\r\n        })}\r\n      <Col xs={12} className=\"mb-2\">\r\n        <Link\r\n          className=\"my-4 d-flex align-items-center justify-content-end\"\r\n          to={{\r\n            pathname: `/Global-prices`,\r\n          }}\r\n        >\r\n          <span\r\n            style={{ color: \"rgb(255, 50, 50)\", textDecoration: \"underline\" }}\r\n          >\r\n            إستعراض المزيد\r\n          </span>\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default GlobalPrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Focus-general-indicator\\MainIndicatorData.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\General-indicator-tabs.js",["396","397","398","399"],"import React from \"react\";\r\nimport { Container, Tab, Tabs } from \"react-bootstrap\";\r\nimport { Row, Col, Table } from \"react-bootstrap\";\r\nimport GeneralIndicatorContent from \"./General-indicator-content\";\r\n\r\nconst GeneralIndicatorTabs = (props) => {\r\n  let ArrgeneralIndicatorData = [];\r\n  for (const property in props.generalIndicatorData) {\r\n    ArrgeneralIndicatorData.push({\r\n      [property]: props.generalIndicatorData[property],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Tabs className=\"mt-4 flex-md-row flex-column\">\r\n        {ArrgeneralIndicatorData.map((generalIndicatorDataItem, idx) => {\r\n          if (\r\n            generalIndicatorDataItem[Object.keys(generalIndicatorDataItem)[0]]\r\n              .length !== 0\r\n          ) {\r\n            return (\r\n              <Tab\r\n                key={idx}\r\n                // defaultValue\r\n                eventKey={idx}\r\n                title={\r\n                  Object.keys(generalIndicatorDataItem)[0] === \"retail\"\r\n                    ? \"أسعار التجزئة\"\r\n                    : Object.keys(generalIndicatorDataItem)[0] === \"wholesale\"\r\n                    ? \"سوق الجملة\"\r\n                    : Object.keys(generalIndicatorDataItem)[0] === \"port\"\r\n                    ? \"أسعار المنافذ\"\r\n                    : Object.keys(generalIndicatorDataItem)[0] === \"field\"\r\n                    ? \"أسعار الحقول\"\r\n                    : Object.keys(generalIndicatorDataItem)[0] ===\r\n                      \"international\"\r\n                    ? \"الأسعار العالمية\"\r\n                    : \"\"\r\n                }\r\n                className=\"py-2 border\"\r\n                style={{\r\n                  backgroundColor: \"var(--secondary-gray)\",\r\n                }}\r\n              >\r\n                <GeneralIndicatorContent\r\n                  generalIndicatorDataItem={\r\n                    generalIndicatorDataItem[\r\n                      Object.keys(generalIndicatorDataItem)[0]\r\n                    ]\r\n                  }\r\n                />\r\n              </Tab>\r\n            );\r\n          }\r\n        })}\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GeneralIndicatorTabs;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\General-indicator-content.js",["400","401"],"import React, { useEffect } from \"react\";\r\nimport * as moment from \"moment\";\r\n\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { TableHead } from \"@material-ui/core\";\r\n\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst GeneralIndicatorContent = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.generalIndicatorDataItem.length - page * rowsPerPage\r\n    );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(props.GovId)\r\n  }, []);\r\n  const pricePercentageNow = (\r\n    minPriceWithinYear,\r\n    maxPriceWithinYear,\r\n    avgPrice\r\n  ) => {\r\n    return (\r\n      ((avgPrice - minPriceWithinYear) /\r\n        (maxPriceWithinYear - minPriceWithinYear)) *\r\n      100\r\n    );\r\n  };\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        className={(classes.table, \"table  table-responsive\")}\r\n        aria-label=\"custom pagination table\"\r\n      >\r\n        <TableHead\r\n          style={{\r\n            backgroundColor: \"var(--main-green\",\r\n            color: \"#fff\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <TableRow>\r\n            <TableCell className=\"text-center\"> البيان </TableCell>\r\n            <TableCell className=\"text-center \"> متوسط السعر </TableCell>\r\n            <TableCell className=\"text-center\"> قيمة التغير </TableCell>\r\n            <TableCell className=\"text-center\"> التغير على مدار عام</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? props.generalIndicatorDataItem.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : props.generalIndicatorDataItem\r\n          ).map((item, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell className=\"text-center\" style={{ lineHeight: \"2\" }}>\r\n                {/* {console.log(item)} */}\r\n                <Link\r\n                  className=\"h-100 d-flex flex-column align-items-center justify-content-center\"\r\n                  // pass news item data throw props\r\n                  to={{\r\n                    pathname: `/local-prices/${item.indicatorId}`,\r\n                    state: {\r\n                      item: item,\r\n                    },\r\n                  }}\r\n                >\r\n                  <span className=\"\">\r\n                    {item.indictorName} / {item.unit}\r\n                  </span>\r\n                  <br />\r\n                  <span style={{ color: \"rgb(144, 144, 144)\" }}>\r\n                    {moment(item.insertionDate).format(\"LL\")}\r\n                  </span>\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell className=\"text-center d-flex justify-content-center align-items-center border-bottom-0\">\r\n                <span>\r\n                  {item.avgPrice} {item.currency}\r\n                </span>\r\n                <div className=\"p-2\">\r\n                  <OverlayTrigger\r\n                    placement={\"top\"}\r\n                    overlay={\r\n                      <Tooltip>\r\n                        <strong>{item.minSubIndicatorName}</strong>\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <div\r\n                      className=\"border-bottom\"\r\n                      style={{ color: \"var(--main-green)\" }}\r\n                    >\r\n                      <ArrowDropDownIcon />\r\n                      أدنى\r\n                      <span className=\"mr-2\" style={{ color: \"#909090\" }}>\r\n                        {item.minPrice} {item.currency}\r\n                      </span>\r\n                    </div>\r\n                  </OverlayTrigger>\r\n                  <OverlayTrigger\r\n                    placement={\"bottom\"}\r\n                    overlay={\r\n                      <Tooltip>\r\n                        <strong>{item.maxSubIndicatorName}</strong>\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <div style={{ color: \"#FF3232\" }}>\r\n                      <ArrowDropUpIcon />\r\n                      أعلى\r\n                      <span n className=\"mr-2\" style={{ color: \"#909090\" }}>\r\n                        {item.maxPrice} {item.currency}\r\n                      </span>\r\n                    </div>\r\n                  </OverlayTrigger>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell className=\"text-center\" style={{ lineHeight: \"2\" }}>\r\n                {\" \"}\r\n                {item.changeRateDaialy > 0 ? (\r\n                  <span style={{ color: \"#FF3232\" }}>\r\n                    +{item.changeRateDaialy}\r\n                    <br />\r\n                    {item.changeRatePercentDaialy} %\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ color: \"var(--main-green)\" }}>\r\n                    {item.changeRateDaialy}\r\n                    <br />\r\n                    {item.changeRatePercentDaialy} %\r\n                  </span>\r\n                )}\r\n              </TableCell>\r\n              <TableCell className=\"text-center\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div style={{ color: \"var(--main-green)\" }}>أقل سعر</div>\r\n                  <div style={{ color: \"#909090\" }}>52 إسبوع</div>\r\n                  <div style={{ color: \"#FF3232\" }}>أعلى سعر</div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    height: \"16px\",\r\n                    border: \"1px solid black\",\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      height: \"15px\",\r\n                      borderLeft: `${\r\n                        pricePercentageNow(\r\n                          item.minPriceWithinYear,\r\n                          item.maxPriceWithinYear,\r\n                          item.avgPrice\r\n                        ) > 50\r\n                          ? \" 4px solid #FF3232\"\r\n                          : \" 4px solid var(--main-green)\"\r\n                      }`,\r\n                      position: \"absolute\",\r\n                      right: `${pricePercentageNow(\r\n                        item.minPriceWithinYear,\r\n                        item.maxPriceWithinYear,\r\n                        item.avgPrice\r\n                      )}%`,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <div style={{ color: \"var(--main-green)\" }}>\r\n                      {item.minPriceWithinYear}\r\n                    </div>\r\n                    <div style={{ color: \"#909090\" }}>\r\n                      {moment(item.minWithinYearDate).locale(\"ar\").format(\"LL\")}\r\n                    </div>\r\n                    {/* {item.minWithinYearDate} */}\r\n                  </div>\r\n                  <div>\r\n                    <div style={{ color: \"#FF3232\" }}>\r\n                      {item.maxPriceWithinYear}\r\n                    </div>\r\n                    <div style={{ color: \"#909090\" }}>\r\n                      {moment(item.maxWithinYearDate).locale(\"ar\").format(\"LL\")}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              count={props.generalIndicatorDataItem.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              labelRowsPerPage=\"عدد السلع فى الصفحة\"\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default GeneralIndicatorContent;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Pages\\Home\\Metals\\Metals.js",["402","403","404","405","406","407"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\n// import parse from \"html-react-parser\";\r\n// import striptags from \"striptags\";\r\n// import TextTruncate from \"react-text-truncate\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/ar\";\r\n\r\nimport { axios } from \"../../../Axios/Axios\";\r\nimport { paths } from \"../../../Paths/Pathes\";\r\n\r\nconst Metals = () => {\r\n  const [metals, setMetals] = useState([]);\r\n  const noMetals = !metals || (metals && metals.length === 0); //check if no metals\r\n\r\n  const getMetals = async () => {\r\n    //fetch metals data\r\n    const response = await axios\r\n      .get(\"/PricesData/Get_PreciousMetals\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setMetals(response.data); // set metals data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMetals();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"justify-content-center p-3 mb-2\"\r\n      style={{\r\n        backgroundColor: \"var(--secondary-gray)\",\r\n      }}\r\n    >\r\n      <div>\r\n        <h6 style={{ color: \"var(--main-green)\" }}>\r\n          <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n            أسعار المعادن\r\n          </span>\r\n        </h6>\r\n      </div>\r\n      <div\r\n        className=\"m-2 \"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <div className=\"border-bottom px-3 py-1 d-flex justify-content-between\">\r\n          <span>المعدن</span>\r\n          <span>عيار</span>\r\n          <span>السعر</span>\r\n        </div>\r\n        {!noMetals &&\r\n          metals.map((Item, idx) => {\r\n            return (\r\n              <div className=\"px-3 py-1 d-flex justify-content-between\">\r\n                <span>{Item.mainIndicatorName}</span>\r\n                <span>{Item.unit}</span>\r\n                <span>{Item.avgPrice}</span>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metals;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\MainIndicatorDetails.js",["408","409","410"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport { axios } from \"../../Axios/Axios\";\r\nimport MainIndicatorData from \"../../Pages/Home/Focus-general-indicator/MainIndicatorData\";\r\n\r\nimport MainIndicatorBox from \"./MainIndicatorBox\";\r\nimport PricesChangesRatio from \"./PricesChangesRatio\";\r\nimport ProducingGovernorates from \"./ProducingGovernorates\";\r\n\r\nimport \"./MainIndicatorDetails.css\";\r\nimport SubIndicatorDetails from \"./SubIndicatorDetails\";\r\n\r\nconst MainIndicatorDetails = (props) => {\r\n  //get mainIndicator id from url\r\n  //const mainIndicatorItemId = parseInt(props.match.params.indicatorId);\r\n\r\n  const [mainIndicatorItem, setMainIndicatorItem] = useState({});\r\n  const [mainIndicatorData, setMainIndicatorData] = useState({});\r\n  const [producingGovernorates, setProducingGovernorates] = useState();\r\n  const [subIndicatorDetails, setSubIndicatorDetails] = useState([]);\r\n  const [mainIndicatorOptions, setMainIndicatorOptions] = useState([]);\r\n  const [mainIndicatorItemId, setMainIndicatorItemId] = useState(\r\n    parseInt(props.match.params.indicatorId)\r\n  );\r\n\r\n  const getMainIndicator = async () => {\r\n    //fetch MainIndicator data\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicatorDetails/${mainIndicatorItemId}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setMainIndicatorItem(response.data); // set MainIndicator data to state\r\n    }\r\n  };\r\n  const getMainIndicatorData = async () => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicatorData/${mainIndicatorItemId}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setMainIndicatorData(response.data); // set MainIndicatorData data to state\r\n    }\r\n  };\r\n\r\n  const getProducingGovernorates = async () => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetProducingGovernorates/${mainIndicatorItemId}`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setProducingGovernorates(response.data); // set setProducingGovernorates data to state\r\n    }\r\n  };\r\n  const getSubIndicatorDetails = async () => {\r\n    const response = await axios\r\n      .get(\r\n        `/PricesData/GetSubIndicatorDetailsForMainIndicator/${mainIndicatorItemId}`\r\n      )\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      setSubIndicatorDetails(response.data); // set SubIndicatorDetails data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMainIndicator();\r\n    getMainIndicatorData();\r\n    getProducingGovernorates();\r\n    getSubIndicatorDetails();\r\n    getMainIndicatorOptions();\r\n  }, [mainIndicatorItemId]);\r\n\r\n  const HandleMainIndicatorchange = (obj) => {\r\n    setMainIndicatorItemId(obj.value);\r\n  };\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  const groupBadgeStyles = {\r\n    backgroundColor: \"#EBECF0\",\r\n    borderRadius: \"2em\",\r\n    color: \"#172B4D\",\r\n    display: \"inline-block\",\r\n    fontSize: 12,\r\n    fontWeight: \"normal\",\r\n    lineHeight: \"1\",\r\n    minWidth: 1,\r\n    padding: \"0.16666666666667em 0.5em\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  const formatGroupLabel = (data) => (\r\n    <div style={groupStyles}>\r\n      <span>{data.label}</span>\r\n      <span style={groupBadgeStyles}>{data.options.length}</span>\r\n    </div>\r\n  );\r\n\r\n  //\r\n\r\n  const groupedOptions = [\r\n    {\r\n      label: \"Colours\",\r\n      options: [\r\n        { value: \"ocean\", label: \"Ocean\", color: \"#00B8D9\", isFixed: true },\r\n        { value: \"blue\", label: \"Blue\", color: \"#0052CC\", isDisabled: true },\r\n        { value: \"purple\", label: \"Purple\", color: \"#5243AA\" },\r\n        { value: \"red\", label: \"Red\", color: \"#FF5630\", isFixed: true },\r\n        { value: \"orange\", label: \"Orange\", color: \"#FF8B00\" },\r\n        { value: \"yellow\", label: \"Yellow\", color: \"#FFC400\" },\r\n        { value: \"green\", label: \"Green\", color: \"#36B37E\" },\r\n        { value: \"forest\", label: \"Forest\", color: \"#00875A\" },\r\n        { value: \"slate\", label: \"Slate\", color: \"#253858\" },\r\n        { value: \"silver\", label: \"Silver\", color: \"#666666\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Flavours\",\r\n      options: [\r\n        { value: \"vanilla\", label: \"Vanilla\", rating: \"safe\" },\r\n        { value: \"chocolate\", label: \"Chocolate\", rating: \"good\" },\r\n        { value: \"strawberry\", label: \"Strawberry\", rating: \"wild\" },\r\n        { value: \"salted-caramel\", label: \"Salted Caramel\", rating: \"crazy\" },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getMainIndicatorOptions = async () => {\r\n    const response = await axios\r\n      .get(`/PricesData/GetMainIndicatorsPerGeneralIndicator`)\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    if (response && response.data) {\r\n      const temp_mainIndicatorsOptions = [];\r\n      response.data.map((item) => {\r\n        var Temp_Options = [];\r\n        for (var i = 0; i < item.mainIndicators.length; i++) {\r\n          Temp_Options.push({\r\n            value: item.mainIndicators[i].id,\r\n            label: item.mainIndicators[i].name,\r\n          });\r\n        }\r\n        temp_mainIndicatorsOptions.push({\r\n          label: item.generalIndicator,\r\n          options: Temp_Options,\r\n        });\r\n\r\n        setMainIndicatorOptions(temp_mainIndicatorsOptions); // set MainIndicatorOptions  to state\r\n      });\r\n    }\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col xs={12}>\r\n          <Select\r\n            className=\"selectMainIndicatorsOption\"\r\n            // defaultValue={colourOptions[1]}\r\n            options={mainIndicatorOptions}\r\n            formatGroupLabel={formatGroupLabel}\r\n            onChange={(event) => HandleMainIndicatorchange(event)}\r\n            placeholder={mainIndicatorItem.mainIndicator}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <MainIndicatorBox mainIndicatorItem={mainIndicatorItem} />\r\n      <Row>\r\n        <Col lg={9}>\r\n          <PricesChangesRatio mainIndicatorItem={mainIndicatorItem} />\r\n          {mainIndicatorData.AvgPrice !== 0 ? (\r\n            <MainIndicatorData mainIndicatorData={mainIndicatorData} />\r\n          ) : null}\r\n          <ProducingGovernorates\r\n            mainIndicatorItem={mainIndicatorItem}\r\n            producingGovernorates={producingGovernorates}\r\n          />\r\n        </Col>\r\n        <Col lg={3} style={{ backgroundColor: \"rgb(247 247 247)\" }}>\r\n          <SubIndicatorDetails subIndicatorDetails={subIndicatorDetails} />\r\n          {}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainIndicatorDetails;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\MainIndicatorBox.js",["411"],"import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport defualtPro from \"../../../assets/images/product.png\";\r\n\r\nconst MainIndicatorBox = (props) => {\r\n  return (\r\n    <Row className=\"border\">\r\n      <Col className=\"my-4\" lg={3} sm={6}>\r\n        <div>\r\n          <div className=\"p-3 d-flex justify-content-center align-items-center \">\r\n            <div style={{ width: \"100px\" }}>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={\r\n                  props.mainIndicatorItem.photo !== \"\"\r\n                    ? props.mainIndicatorItem.photo\r\n                    : defualtPro\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-2 text-center\">\r\n            <span style={{ color: \"var(--main-green)\" }}>\r\n              المجموعة السلعية :\r\n            </span>\r\n            <span className=\"pr-1\">\r\n              {props.mainIndicatorItem.generalIndicator}\r\n            </span>\r\n          </div>\r\n          <div className=\"pb-2\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span style={{ color: \"var(--main-green)\" }}>السلعة</span>\r\n              <span className=\"pr-1\">\r\n                {props.mainIndicatorItem.mainIndicator}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-2\">\r\n            <div className=\"d-flex justify-content-around\">\r\n              <span style={{ color: \"var(--main-green)\" }}>الوحدة</span>\r\n              <span className=\"pr-1\">{props.mainIndicatorItem.unit}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      <Col\r\n        className=\"border-right  my-4 d-flex flex-column justify-content-center align-items-center\"\r\n        lg={3}\r\n        sm={6}\r\n      >\r\n        <div className=\"m-3 \">\r\n          <div className=\"text-center mb-3\">متوسط سعر السلعة</div>\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center align-items-center\"\r\n              style={{\r\n                backgroundColor: \"#f7f7f7\",\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                borderRadius: \"50%\",\r\n                boxShadow: \"4px 4px 4px 0px rgb(179 179 179 / 36%)\",\r\n              }}\r\n            >\r\n              <span style={{ fontSize: \"1.4rem\" }}>\r\n                {props.mainIndicatorItem.avgPrice}\r\n              </span>\r\n              <span style={{ fontSize: \"1.2rem\" }}>\r\n                {props.mainIndicatorItem.currency}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      <Col className=\"border-right my-4 \" lg={3} sm={6}>\r\n        <div className=\"m-3  \">\r\n          <div className=\"text-center mb-3\">أدنى سعر للسلعة</div>\r\n          <div\r\n            className=\"p-2 mb-3 d-flex justify-content-between align-items-center\"\r\n            style={{\r\n              backgroundColor: \"rgb(230 244 237)\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"var(--main-green)\" }}>\r\n              {props.mainIndicatorItem.minSubInicator}\r\n            </span>\r\n            <span>\r\n              <span style={{ color: \"var(--main-green)\" }}>\r\n                {props.mainIndicatorItem.minSubInicatorPrice}{\" \"}\r\n              </span>\r\n              {props.mainIndicatorItem.currency} /{\" \"}\r\n              {props.mainIndicatorItem.unit}\r\n            </span>\r\n          </div>\r\n          <div className=\"text-center mb-3\">أعلى سعر للسلعة</div>\r\n          <div\r\n            className=\"p-2 d-flex justify-content-between align-items-center\"\r\n            style={{\r\n              backgroundColor: \"rgb(252 235 236)\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            <span style={{ color: \"rgb(255, 50, 50)\" }}>\r\n              {props.mainIndicatorItem.maxSubInicator}\r\n            </span>\r\n            <span>\r\n              <span style={{ color: \"rgb(255, 50, 50)\" }}>\r\n                {\" \"}\r\n                {props.mainIndicatorItem.maxSubInicatorPrice}{\" \"}\r\n              </span>\r\n              {props.mainIndicatorItem.currency} /{\" \"}\r\n              {props.mainIndicatorItem.unit}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      {props.mainIndicatorItem.internationalAvg !== 0 ? (\r\n        <Col\r\n          className=\"border-right  my-4 d-flex flex-column justify-content-center align-items-center\"\r\n          lg={3}\r\n          sm={6}\r\n        >\r\n          <div className=\"m-3 \">\r\n            <div className=\"text-center mb-3\">متوسط سعر العالمي</div>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <div\r\n                className=\"d-flex flex-column justify-content-center align-items-center\"\r\n                style={{\r\n                  backgroundColor: \"#f7f7f7\",\r\n                  height: \"100px\",\r\n                  width: \"100px\",\r\n                  borderRadius: \"50%\",\r\n                  boxShadow: \"4px 4px 4px 0px rgb(179 179 179 / 36%)\",\r\n                }}\r\n              >\r\n                <span style={{ fontSize: \"1.4rem\" }}>\r\n                  {props.mainIndicatorItem.internationalAvg}\r\n                </span>\r\n                <span style={{ fontSize: \"1.2rem\" }}>\r\n                  {props.mainIndicatorItem.currency}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      ) : null}\r\n    </Row>\r\n  );\r\n};\r\nexport default MainIndicatorBox;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\PricesChangesRatio.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\ProducingGovernorates.js",["412"],"import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { governoratesLogos } from \"./GovernoratesLogos\";\r\n\r\nconst ProducingGovernorates = (props) => {\r\n  const noProducingGovernorates =\r\n    !props.producingGovernorates ||\r\n    (props.producingGovernorates && props.producingGovernorates.length === 0);\r\n  return (\r\n    <>\r\n      {!noProducingGovernorates ? (\r\n        <Row className=\"justify-content-center mb-4 px-5\">\r\n          <Col xs={12} className=\"p-1\">\r\n            <div\r\n              className=\"border \"\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                boxShadow: \"4px 4px 4px 0px rgb(179 179 179 / 36%)\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"p-2  d-flex flex-column justify-content-center align-items-center\"\r\n                style={{\r\n                  backgroundColor: \"var(--main-green)\",\r\n                  borderTopRightRadius: \"10px\",\r\n                  borderTopLeftRadius: \"10px\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h6 className=\"my-2\">\r\n                  المحافظات المنتجة لـ {props.mainIndicatorItem.mainIndicator}\r\n                </h6>\r\n              </div>\r\n              <Row className=\"d-flex justify-content-center\">\r\n                {console.log(props.producingGovernorates)}\r\n                {/* Here we will loop throw  producingGovernorates Array*/}\r\n                {!noProducingGovernorates &&\r\n                  props.producingGovernorates.map((item, idx) => {\r\n                    return (\r\n                      <Col\r\n                        key={idx}\r\n                        sm={3}\r\n                        className=\"p-3 d-flex align-items-center flex-column justify-content-center\"\r\n                      >\r\n                        <div style={{ width: \"140px\", textAlign: \"center\" }}>\r\n                          {governoratesLogos.map((logo, idx) => {\r\n                            return logo.text ===\r\n                              item.governorate_E.toLowerCase() ? (\r\n                              <img className=\"img-fluid\" src={logo.image} />\r\n                            ) : null;\r\n                          })}\r\n\r\n                          <p className=\"text-center\">{item.governorate_A}</p>\r\n                          <p className=\"text-center\">{item.governorate_E}</p>\r\n                        </div>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProducingGovernorates;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\SubIndicatorDetails.js",[],"C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Global-prices\\GlobalPrices.js",["413","414"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { axios } from \"../Axios/Axios\";\r\nimport defualtPro from \"../../assets/images/product.png\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst GlobalPrices = () => {\r\n  const [globalPrices, setGlobalPrices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const noGlobalPrices =\r\n    !globalPrices || (globalPrices && globalPrices.length === 0); //check if no GlobalPrices\r\n\r\n  const getGlobalPrices = async () => {\r\n    //fetch news data\r\n    setLoading(true);\r\n    const response = await axios\r\n      .get(\"/PricesData/GetInnerInternationalData\")\r\n      .catch((err) => console.log(\"Error\", err)); //handle errors\r\n    setLoading(false);\r\n    if (response && response.data) {\r\n      setGlobalPrices(response.data); // set GlobalPrices data to state\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGlobalPrices();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col xs={12}>\r\n          <h5 style={{ color: \"var(--main-green)\" }}>الأسعار العالمية</h5>\r\n        </Col>\r\n      </Row>\r\n      {!noGlobalPrices &&\r\n        globalPrices.map((item, idx) => {\r\n          return (\r\n            <Row key={idx} className=\"px-3 my-4\">\r\n              <Col xs={12} className=\"mb-2\">\r\n                <h6 style={{ color: \"var(--main-green)\" }}>\r\n                  <span style={{ borderBottom: \"2px solid var(--main-green)\" }}>\r\n                    {item.generalIndicator}\r\n                  </span>\r\n                </h6>\r\n              </Col>\r\n              {item.internationalIndicatorsData.map((innerItem, idx) => {\r\n                return (\r\n                  <Col key={idx} className=\"px-0\" md={2} sm={4} xs={6}>\r\n                    <div\r\n                      style={{\r\n                        border: \"1px solid var(--main-green)\",\r\n                        borderRadius: \"8px\",\r\n                      }}\r\n                      className=\"p-2 m-1 d-flex flex-column justify-content-center align-items-center\"\r\n                    >\r\n                      <div\r\n                        className=\"py-2 text-center\"\r\n                        style={{ color: \"var(--main-green)\" }}\r\n                      >\r\n                        متوسط السعر\r\n                        <div className=\"py-2 text-center\">\r\n                          <span className=\"ml-1 \">{innerItem.avgPrice}</span>\r\n                          دولار\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div style={{ width: \"120px\" }}>\r\n                        <img\r\n                          className=\"img-fluid\"\r\n                          src={!item.photo ? defualtPro : null}\r\n                        />\r\n                      </div>\r\n                      <div className=\"py-2 text-center\">\r\n                        {innerItem.indicatorName}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      {loading === true && noGlobalPrices && (\r\n        <div className=\"w-100 d-flex justify-content-center m-5\">\r\n          <PulseLoader loading={loading} color=\"#0D924C\" margin=\"5\" />\r\n        </div>\r\n      )}\r\n      {loading === false && noGlobalPrices && (\r\n        <h2 className=\"w-100 text-center p-4\"> لا توجد مجموعات سلعية</h2>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GlobalPrices;\r\n","C:\\Users\\moshaban\\source\\repos\\PricesWebsite\\src\\components\\Local-prices\\MainIndicatorDetails\\GovernoratesLogos.js",[],{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"415","replacedBy":"419"},{"ruleId":"417","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":19,"column":8,"nodeType":"423","messageId":"424","endLine":19,"endColumn":15},{"ruleId":"421","severity":1,"message":"425","line":20,"column":8,"nodeType":"423","messageId":"424","endLine":20,"endColumn":13},{"ruleId":"421","severity":1,"message":"426","line":2,"column":31,"nodeType":"423","messageId":"424","endLine":2,"endColumn":35},{"ruleId":"421","severity":1,"message":"427","line":2,"column":37,"nodeType":"423","messageId":"424","endLine":2,"endColumn":40},{"ruleId":"421","severity":1,"message":"428","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":21},{"ruleId":"421","severity":1,"message":"429","line":8,"column":8,"nodeType":"423","messageId":"424","endLine":8,"endColumn":18},{"ruleId":"421","severity":1,"message":"430","line":9,"column":8,"nodeType":"423","messageId":"424","endLine":9,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":37,"column":17,"nodeType":"433","endLine":37,"endColumn":62},{"ruleId":"434","severity":1,"message":"435","line":55,"column":6,"nodeType":"436","endLine":55,"endColumn":8,"suggestions":"437"},{"ruleId":"421","severity":1,"message":"438","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":19},{"ruleId":"421","severity":1,"message":"439","line":5,"column":21,"nodeType":"423","messageId":"424","endLine":5,"endColumn":24},{"ruleId":"421","severity":1,"message":"440","line":5,"column":26,"nodeType":"423","messageId":"424","endLine":5,"endColumn":29},{"ruleId":"441","severity":1,"message":"442","line":34,"column":36,"nodeType":"443","messageId":"444","endLine":34,"endColumn":38},{"ruleId":"434","severity":1,"message":"445","line":44,"column":6,"nodeType":"436","endLine":44,"endColumn":8,"suggestions":"446"},{"ruleId":"434","severity":1,"message":"445","line":55,"column":6,"nodeType":"436","endLine":55,"endColumn":8,"suggestions":"447"},{"ruleId":"434","severity":1,"message":"448","line":58,"column":6,"nodeType":"436","endLine":58,"endColumn":8,"suggestions":"449"},{"ruleId":"421","severity":1,"message":"450","line":11,"column":8,"nodeType":"423","messageId":"424","endLine":11,"endColumn":12},{"ruleId":"434","severity":1,"message":"451","line":117,"column":6,"nodeType":"436","endLine":117,"endColumn":8,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":279,"column":34,"nodeType":"455","messageId":"456","endLine":279,"endColumn":36},{"ruleId":"441","severity":1,"message":"442","line":37,"column":37,"nodeType":"443","messageId":"444","endLine":37,"endColumn":39},{"ruleId":"434","severity":1,"message":"435","line":47,"column":6,"nodeType":"436","endLine":47,"endColumn":8,"suggestions":"457"},{"ruleId":"434","severity":1,"message":"458","line":48,"column":6,"nodeType":"436","endLine":48,"endColumn":8,"suggestions":"459"},{"ruleId":"434","severity":1,"message":"460","line":99,"column":6,"nodeType":"436","endLine":99,"endColumn":8,"suggestions":"461"},{"ruleId":"434","severity":1,"message":"460","line":103,"column":6,"nodeType":"436","endLine":103,"endColumn":61,"suggestions":"462"},{"ruleId":"421","severity":1,"message":"438","line":3,"column":15,"nodeType":"423","messageId":"424","endLine":3,"endColumn":24},{"ruleId":"421","severity":1,"message":"463","line":6,"column":8,"nodeType":"423","messageId":"424","endLine":6,"endColumn":20},{"ruleId":"434","severity":1,"message":"464","line":32,"column":8,"nodeType":"436","endLine":32,"endColumn":10,"suggestions":"465"},{"ruleId":"453","severity":1,"message":"466","line":36,"column":52,"nodeType":"455","messageId":"456","endLine":36,"endColumn":54},{"ruleId":"453","severity":1,"message":"454","line":68,"column":100,"nodeType":"455","messageId":"456","endLine":68,"endColumn":102},{"ruleId":"453","severity":1,"message":"466","line":69,"column":143,"nodeType":"455","messageId":"456","endLine":69,"endColumn":145},{"ruleId":"431","severity":1,"message":"432","line":72,"column":37,"nodeType":"433","endLine":72,"endColumn":83},{"ruleId":"453","severity":1,"message":"454","line":81,"column":95,"nodeType":"455","messageId":"456","endLine":81,"endColumn":97},{"ruleId":"453","severity":1,"message":"466","line":82,"column":133,"nodeType":"455","messageId":"456","endLine":82,"endColumn":135},{"ruleId":"431","severity":1,"message":"432","line":85,"column":37,"nodeType":"433","endLine":85,"endColumn":84},{"ruleId":"431","severity":1,"message":"432","line":102,"column":28,"nodeType":"433","endLine":102,"endColumn":56},{"ruleId":"421","severity":1,"message":"467","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":25},{"ruleId":"421","severity":1,"message":"468","line":1,"column":27,"nodeType":"423","messageId":"424","endLine":1,"endColumn":36},{"ruleId":"421","severity":1,"message":"469","line":21,"column":10,"nodeType":"423","messageId":"424","endLine":21,"endColumn":23},{"ruleId":"421","severity":1,"message":"470","line":23,"column":9,"nodeType":"423","messageId":"424","endLine":23,"endColumn":21},{"ruleId":"421","severity":1,"message":"438","line":7,"column":15,"nodeType":"423","messageId":"424","endLine":7,"endColumn":24},{"ruleId":"434","severity":1,"message":"471","line":57,"column":6,"nodeType":"436","endLine":57,"endColumn":20,"suggestions":"472"},{"ruleId":"434","severity":1,"message":"473","line":63,"column":6,"nodeType":"436","endLine":63,"endColumn":8,"suggestions":"474"},{"ruleId":"453","severity":1,"message":"454","line":249,"column":28,"nodeType":"455","messageId":"456","endLine":249,"endColumn":30},{"ruleId":"415","replacedBy":"475"},{"ruleId":"417","replacedBy":"476"},{"ruleId":"421","severity":1,"message":"438","line":6,"column":15,"nodeType":"423","messageId":"424","endLine":6,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":231,"column":28,"nodeType":"455","messageId":"456","endLine":231,"endColumn":30},{"ruleId":"421","severity":1,"message":"467","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":25},{"ruleId":"421","severity":1,"message":"477","line":105,"column":10,"nodeType":"423","messageId":"424","endLine":105,"endColumn":20},{"ruleId":"421","severity":1,"message":"478","line":114,"column":9,"nodeType":"423","messageId":"424","endLine":114,"endColumn":18},{"ruleId":"421","severity":1,"message":"467","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":25},{"ruleId":"421","severity":1,"message":"477","line":106,"column":10,"nodeType":"423","messageId":"424","endLine":106,"endColumn":20},{"ruleId":"421","severity":1,"message":"478","line":115,"column":9,"nodeType":"423","messageId":"424","endLine":115,"endColumn":18},{"ruleId":"453","severity":1,"message":"454","line":159,"column":26,"nodeType":"455","messageId":"456","endLine":159,"endColumn":28},{"ruleId":"453","severity":1,"message":"466","line":165,"column":26,"nodeType":"455","messageId":"456","endLine":165,"endColumn":28},{"ruleId":"453","severity":1,"message":"454","line":207,"column":30,"nodeType":"455","messageId":"456","endLine":207,"endColumn":32},{"ruleId":"453","severity":1,"message":"454","line":215,"column":30,"nodeType":"455","messageId":"456","endLine":215,"endColumn":32},{"ruleId":"421","severity":1,"message":"479","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":19},{"ruleId":"421","severity":1,"message":"480","line":14,"column":8,"nodeType":"423","messageId":"424","endLine":14,"endColumn":15},{"ruleId":"421","severity":1,"message":"481","line":14,"column":17,"nodeType":"423","messageId":"424","endLine":14,"endColumn":27},{"ruleId":"434","severity":1,"message":"482","line":33,"column":6,"nodeType":"436","endLine":33,"endColumn":8,"suggestions":"483"},{"ruleId":"421","severity":1,"message":"467","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":25},{"ruleId":"421","severity":1,"message":"477","line":105,"column":10,"nodeType":"423","messageId":"424","endLine":105,"endColumn":20},{"ruleId":"421","severity":1,"message":"478","line":114,"column":9,"nodeType":"423","messageId":"424","endLine":114,"endColumn":18},{"ruleId":"421","severity":1,"message":"484","line":1,"column":8,"nodeType":"423","messageId":"424","endLine":1,"endColumn":13},{"ruleId":"434","severity":1,"message":"448","line":35,"column":6,"nodeType":"436","endLine":35,"endColumn":8,"suggestions":"485"},{"ruleId":"421","severity":1,"message":"486","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":15},{"ruleId":"421","severity":1,"message":"481","line":42,"column":17,"nodeType":"423","messageId":"424","endLine":42,"endColumn":27},{"ruleId":"421","severity":1,"message":"438","line":2,"column":15,"nodeType":"423","messageId":"424","endLine":2,"endColumn":24},{"ruleId":"421","severity":1,"message":"487","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":14},{"ruleId":"421","severity":1,"message":"486","line":5,"column":8,"nodeType":"423","messageId":"424","endLine":5,"endColumn":15},{"ruleId":"488","severity":1,"message":"489","line":48,"column":51,"nodeType":"490","endLine":48,"endColumn":66},{"ruleId":"434","severity":1,"message":"491","line":70,"column":6,"nodeType":"436","endLine":70,"endColumn":8,"suggestions":"492"},{"ruleId":"421","severity":1,"message":"493","line":26,"column":9,"nodeType":"423","messageId":"424","endLine":26,"endColumn":12},{"ruleId":"431","severity":1,"message":"432","line":56,"column":21,"nodeType":"433","endLine":59,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":57,"column":19,"nodeType":"433","endLine":60,"endColumn":21},{"ruleId":"421","severity":1,"message":"439","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":13},{"ruleId":"421","severity":1,"message":"440","line":3,"column":15,"nodeType":"423","messageId":"424","endLine":3,"endColumn":18},{"ruleId":"421","severity":1,"message":"494","line":3,"column":20,"nodeType":"423","messageId":"424","endLine":3,"endColumn":25},{"ruleId":"441","severity":1,"message":"495","line":17,"column":70,"nodeType":"443","messageId":"496","endLine":17,"endColumn":72},{"ruleId":"421","severity":1,"message":"478","line":115,"column":9,"nodeType":"423","messageId":"424","endLine":115,"endColumn":18},{"ruleId":"421","severity":1,"message":"493","line":145,"column":9,"nodeType":"423","messageId":"424","endLine":145,"endColumn":12},{"ruleId":"421","severity":1,"message":"439","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":13},{"ruleId":"421","severity":1,"message":"440","line":2,"column":15,"nodeType":"423","messageId":"424","endLine":2,"endColumn":18},{"ruleId":"421","severity":1,"message":"487","line":4,"column":10,"nodeType":"423","messageId":"424","endLine":4,"endColumn":14},{"ruleId":"421","severity":1,"message":"497","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":23},{"ruleId":"421","severity":1,"message":"498","line":10,"column":13,"nodeType":"423","messageId":"424","endLine":10,"endColumn":19},{"ruleId":"421","severity":1,"message":"499","line":14,"column":10,"nodeType":"423","messageId":"424","endLine":14,"endColumn":15},{"ruleId":"434","severity":1,"message":"500","line":72,"column":6,"nodeType":"436","endLine":72,"endColumn":27,"suggestions":"501"},{"ruleId":"421","severity":1,"message":"502","line":105,"column":9,"nodeType":"423","messageId":"424","endLine":105,"endColumn":23},{"ruleId":"441","severity":1,"message":"442","line":138,"column":32,"nodeType":"443","messageId":"444","endLine":138,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":12,"column":15,"nodeType":"433","endLine":19,"endColumn":17},{"ruleId":"431","severity":1,"message":"432","line":49,"column":31,"nodeType":"433","endLine":49,"endColumn":77},{"ruleId":"421","severity":1,"message":"497","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":70,"column":25,"nodeType":"433","endLine":73,"endColumn":27},"no-native-reassign",["503"],"no-negated-in-lhs",["504"],["503"],["504"],"no-unused-vars","'Outlets' is defined but never used.","Identifier","unusedVar","'Aside' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'NewsCarrousel' is defined but never used.","'SearchForm' is defined but never used.","'SiteServices' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["505"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["506"],["507"],"React Hook useEffect has a missing dependency: 'getDocumentLibrary'. Either include it or remove the dependency array.",["508"],"'flag' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPrices'. Either include it or remove the dependency array.",["509"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["510"],"React Hook useEffect has a missing dependency: 'getGeneralIndicators'. Either include it or remove the dependency array.",["511"],"React Hook useEffect has a missing dependency: 'getPorts'. Either include it or remove the dependency array.",["512"],["513"],"'CategoryIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'GetSubIndicator'. Either include it or remove the dependency array.",["514"],"Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'useEffect' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["515"],"React Hook useEffect has a missing dependency: 'props.savedSearchRes.LocSearchRes.searchData'. Either include it or remove the dependency array. If 'setSearchResult' needs the current value of 'props.savedSearchRes.LocSearchRes.searchData', you can also switch to useReducer instead of useState and read 'props.savedSearchRes.LocSearchRes.searchData' in the reducer.",["516"],["503"],["504"],"'createData' is defined but never used.","'emptyRows' is assigned a value but never used.","'PulseLoader' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetImages'. Either include it or remove the dependency array.",["517"],"'axios' is defined but never used.",["518"],"'HeadBar' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'getFocusedGeneralIndicator'. Either include it or remove the dependency array.",["519"],"'url' is assigned a value but never used.","'Table' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useRouteMatch' is defined but never used.","'moment' is defined but never used.","'paths' is defined but never used.","React Hook useEffect has missing dependencies: 'getMainIndicator', 'getMainIndicatorData', 'getProducingGovernorates', and 'getSubIndicatorDetails'. Either include them or remove the dependency array.",["520"],"'groupedOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"523","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"521","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"526","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},"Update the dependencies array to be: [getEvents]",{"range":"550","text":"551"},"Update the dependencies array to be: [getNews]",{"range":"552","text":"553"},{"range":"554","text":"553"},"Update the dependencies array to be: [getDocumentLibrary]",{"range":"555","text":"556"},"Update the dependencies array to be: [getAllPrices]",{"range":"557","text":"558"},{"range":"559","text":"551"},"Update the dependencies array to be: [getGeneralIndicators]",{"range":"560","text":"561"},"Update the dependencies array to be: [getPorts]",{"range":"562","text":"563"},"Update the dependencies array to be: [portTypeSelectedVal, governorateSelectedVal, portsURL, getPorts]",{"range":"564","text":"565"},"Update the dependencies array to be: [GetSubIndicator]",{"range":"566","text":"567"},"Update the dependencies array to be: [props, searchResult]",{"range":"568","text":"569"},"Update the dependencies array to be: [props.savedSearchRes.LocSearchRes.searchData]",{"range":"570","text":"571"},"Update the dependencies array to be: [GetImages]",{"range":"572","text":"573"},{"range":"574","text":"556"},"Update the dependencies array to be: [getFocusedGeneralIndicator]",{"range":"575","text":"576"},"Update the dependencies array to be: [getMainIndicator, getMainIndicatorData, getProducingGovernorates, getSubIndicatorDetails, mainIndicatorItemId]",{"range":"577","text":"578"},[1583,1585],"[getEvents]",[1262,1264],"[getNews]",[1548,1550],[1714,1716],"[getDocumentLibrary]",[3561,3563],"[getAllPrices]",[1347,1349],[1956,1958],"[getGeneralIndicators]",[3122,3124],"[getPorts]",[3173,3228],"[portTypeSelectedVal, governorateSelectedVal, portsURL, getPorts]",[1272,1274],"[GetSubIndicator]",[2083,2097],"[props, searchResult]",[2281,2283],"[props.savedSearchRes.LocSearchRes.searchData]",[994,996],"[GetImages]",[1158,1160],[2752,2754],"[getFocusedGeneralIndicator]",[2861,2882],"[getMainIndicator, getMainIndicatorData, getProducingGovernorates, getSubIndicatorDetails, mainIndicatorItemId]"]